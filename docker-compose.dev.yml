version: '3.8'

services:
  api:
    container_name: nflow-assistant-api-dev
    build:
      context: .
      dockerfile: Dockerfile.dev
    restart: unless-stopped
    ports:
      - '3000:3000'
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    environment:
      NODE_ENV: development
      PORT: 3000
      DATABASE_URL: postgresql://${PGUSER:-pg}:${PGPASSWORD:-pg}@postgres:5432/${PGDATABASE:-nflow-chat-assistant}
      REDIS_URL: redis://:${REDIS_PASSWORD:-redis}@redis:6379
      # Include other environment variables from .env
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      NFLOW_API_URL: ${NFLOW_API_URL}
      NFLOW_API_KEY: ${NFLOW_API_KEY}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - nflow-assistant

  postgres:
    container_name: nflow-assistant-db-dev
    image: postgres:14-alpine
    restart: unless-stopped
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: ${PGUSER:-pg}
      POSTGRES_PASSWORD: ${PGPASSWORD:-pg}
      POSTGRES_DB: ${PGDATABASE:-nflow-chat-assistant}
    healthcheck:
      start_period: 5s
      interval: 10s
      timeout: 5s
      retries: 5
      test: ['CMD-SHELL', 'pg_isready -U ${PGUSER:-pg}']
    volumes:
      - nflow-assistant_pg_data_dev:/var/lib/postgresql/data
    networks:
      - nflow-assistant

  redis:
    container_name: nflow-assistant-redis-dev
    image: redis:latest
    restart: unless-stopped
    ports:
      - '6379:6379'
    volumes:
      - nflow-assistant_redis_data_dev:/data
    command: redis-server --requirepass ${REDIS_PASSWORD:-redis}
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - nflow-assistant

networks:
  nflow-assistant:

volumes:
  nflow-assistant_pg_data_dev:
    driver: local
  nflow-assistant_redis_data_dev:
    driver: local
