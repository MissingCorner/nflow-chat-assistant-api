{
  "swaggerDoc": {
    "openapi": "3.0.0",
    "paths": {
      "/auth/sso-url": {
        "get": {
          "operationId": "ApiAuthController_getLoginUrl",
          "summary": "",
          "description": "Get sso login url",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "redirectUrl",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SSoLoginUrlResponse"
                  }
                }
              }
            }
          },
          "tags": ["App Viewer"]
        }
      },
      "/auth/token": {
        "post": {
          "operationId": "ApiAuthController_getLoginToken",
          "summary": "",
          "description": "Get token from sso code",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetLoginTokenDto"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/LoginResponse"
                  }
                }
              }
            }
          },
          "tags": ["App Viewer"]
        }
      },
      "/auth/token/refresh": {
        "post": {
          "operationId": "ApiAuthController_refreshToken",
          "summary": "",
          "description": "Refresh token API",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefreshTokenDto"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/LoginResponse"
                  }
                }
              }
            }
          },
          "tags": ["App Viewer"]
        }
      },
      "/auth/logout": {
        "post": {
          "operationId": "ApiAuthController_logout",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "204": {
              "description": ""
            }
          },
          "tags": ["App Viewer"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/me": {
        "get": {
          "operationId": "ApiMeController_getMe",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/MeResponse"
                  }
                }
              }
            }
          },
          "tags": ["App Viewer"],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "put": {
          "operationId": "ApiMeController_putMe",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/MeResponse"
                  }
                }
              }
            }
          },
          "tags": ["App Viewer"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/apps": {
        "get": {
          "operationId": "ApiAppViewerController_getApps",
          "summary": "Get list of apps for current user",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "offset",
              "required": false,
              "in": "query",
              "schema": {
                "default": 0,
                "type": "number"
              }
            },
            {
              "name": "limit",
              "required": false,
              "in": "query",
              "schema": {
                "default": 20,
                "type": "number"
              }
            },
            {
              "name": "sortOrder",
              "required": false,
              "in": "query",
              "schema": {
                "enum": ["ASC", "DESC"],
                "type": "string"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "searchText",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/AppViewerCollection"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["App Viewer"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/apps/{appName}": {
        "get": {
          "operationId": "ApiAppViewerController_getApp",
          "summary": "Get list of app by id",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "appName",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/AppViewerResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["App Viewer"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/apps/{appName}/layouts/{layoutName}": {
        "get": {
          "operationId": "ApiAppViewerController_getAppLayout",
          "summary": "Get app layout by Name",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "appName",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "layoutName",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/ComponentResponse"
                    }
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["App Viewer"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/apps/{appName}/objects/{objName}": {
        "get": {
          "operationId": "ApiAppViewerController_getRecordLayout",
          "summary": "Get Record layout for object",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "appName",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "objName",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ObjectLayoutResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["App Viewer"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/apps/{appName}/triggers/{layoutName}/{compId}": {
        "post": {
          "operationId": "ApiAppViewerController_triggerAction",
          "summary": "Trigger button component",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "appName",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "layoutName",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "compId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "description": "For flow type, should contain all values for flow inputs. For object type, except new action, guid is required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/CtxFlowResponse",
                        "description": "contextId if trigger type is screen flow"
                      },
                      {
                        "$ref": "#/components/schemas/ObjectLayoutResponse",
                        "description": "layout if trigger type is object action"
                      }
                    ]
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["App Viewer"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/s/{ctxId}/d/{objName}/f/{field}/search": {
        "post": {
          "operationId": "ApiFlowRunnerDataController_searchFieldDataSource",
          "summary": "Serve data source for field",
          "description": "To get field's data source",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "Authorization",
              "in": "header",
              "description": "Bearer token (optional, only required for private flow)",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "objName",
              "required": true,
              "in": "path",
              "description": "Object name",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "field",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "ctxId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FieldSourceQuery"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/FieldSourceCollection"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["App Viewer - Flow"]
        }
      },
      "/s/{ctxId}/d/{objName}/files/upload": {
        "post": {
          "operationId": "ApiFlowRunnerDataController_uploadFile",
          "summary": "Upload file for running flow",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "Authorization",
              "in": "header",
              "description": "Bearer token (optional, only required for private flow)",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "objName",
              "required": true,
              "in": "path",
              "description": "Object name",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "ctxId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "multipart/form-data": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "file": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/DataFileResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["App Viewer - Flow"]
        }
      },
      "/d/{objName}/search": {
        "post": {
          "operationId": "ApiDataController_listRecord",
          "summary": "List records",
          "description": "To query list of records",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "objName",
              "required": true,
              "in": "path",
              "description": "Object name",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchDataDto"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/DataCollection"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["App Viewer - Data"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/d/{objName}/count": {
        "post": {
          "operationId": "ApiDataController_countRecords",
          "summary": "Count records",
          "description": "To count records",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "objName",
              "required": true,
              "in": "path",
              "description": "Object name",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CountDataDto"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CountRecordResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["App Viewer - Data"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/d/{objName}/{guid}": {
        "get": {
          "operationId": "ApiDataController_getRecord",
          "summary": "Get record",
          "description": "To get record by guid",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "objName",
              "required": true,
              "in": "path",
              "description": "Object name",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "guid",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "oneOf": [
                      {
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/BaseDataResponse"
                          },
                          {
                            "type": "object",
                            "additionalProperties": true
                          }
                        ]
                      },
                      {
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/BaseExtDataResponse"
                          },
                          {
                            "type": "object",
                            "additionalProperties": true
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["App Viewer - Data"],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "put": {
          "operationId": "ApiDataController_updateRecord",
          "summary": "Update record",
          "description": "To update record for object",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "objName",
              "required": true,
              "in": "path",
              "description": "Object name",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "guid",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "description": "data for object with key is field name"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "oneOf": [
                      {
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/BaseDataResponse"
                          },
                          {
                            "type": "object",
                            "additionalProperties": true
                          }
                        ]
                      },
                      {
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/BaseExtDataResponse"
                          },
                          {
                            "type": "object",
                            "additionalProperties": true
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["App Viewer - Data"],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "delete": {
          "operationId": "ApiDataController_deleteRecord",
          "summary": "Delete record",
          "description": "To delete record for object",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "objName",
              "required": true,
              "in": "path",
              "description": "Object name",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "guid",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "oneOf": [
                      {
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/BaseDataResponse"
                          },
                          {
                            "type": "object",
                            "additionalProperties": true
                          }
                        ]
                      },
                      {
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/BaseExtDataResponse"
                          },
                          {
                            "type": "object",
                            "additionalProperties": true
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["App Viewer - Data"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/d/{objName}/{guid}/r/{relation}/search": {
        "post": {
          "operationId": "ApiDataController_searchFieldRelation",
          "summary": "List relation children data",
          "description": "To list relation children data",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "objName",
              "required": true,
              "in": "path",
              "description": "Object name",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "relation",
              "required": true,
              "in": "path",
              "description": "Format: child's objectName.fieldName",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "guid",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchDataDto"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/DataCollection"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["App Viewer - Data"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/d/{objName}/{guid}/r/{relation}/count": {
        "post": {
          "operationId": "ApiDataController_countRelationChildren",
          "summary": "Count relation children data",
          "description": "To count relation children data",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "objName",
              "required": true,
              "in": "path",
              "description": "Object name",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "relation",
              "required": true,
              "in": "path",
              "description": "Format: child's objectName.fieldName",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "guid",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CountDataDto"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CountRecordResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["App Viewer - Data"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/d/{objName}": {
        "post": {
          "operationId": "ApiDataController_createRecord",
          "summary": "Create new record",
          "description": "To create new record for object",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "objName",
              "required": true,
              "in": "path",
              "description": "Object name",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "description": "data for object with key is field name"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "oneOf": [
                      {
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/BaseDataResponse"
                          },
                          {
                            "type": "object",
                            "additionalProperties": true
                          }
                        ]
                      },
                      {
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/BaseExtDataResponse"
                          },
                          {
                            "type": "object",
                            "additionalProperties": true
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["App Viewer - Data"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/d/{objName}/export": {
        "post": {
          "operationId": "ApiDataController_exportRecordsWithFilters",
          "summary": "Export records with query",
          "description": "API to export list of records with filters",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "objName",
              "required": true,
              "in": "path",
              "description": "Object name",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExportDataDto"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/octet-stream": {
                  "schema": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["App Viewer - Data"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/d/{objName}/import": {
        "post": {
          "operationId": "ApiDataController_importRecords",
          "summary": "Import records",
          "description": "API to import records",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "objName",
              "required": true,
              "in": "path",
              "description": "Object name",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "multipart/form-data": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "file": {
                      "type": "string",
                      "format": "binary"
                    },
                    "headerMap": {
                      "type": "string",
                      "description": "JSON.stringify of mapping header with key is record's field name, value is csv column name"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": ""
            },
            "204": {
              "description": ""
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["App Viewer - Data"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/d/{objName}/{guid}/audit-logs": {
        "get": {
          "operationId": "ApiDataController_getAuditLogs",
          "summary": "Get audit logs for record",
          "description": "API to export list of records with filters",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "objName",
              "required": true,
              "in": "path",
              "description": "Object name",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "guid",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/AuditLogResponse"
                    }
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["App Viewer - Data"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/d/{objName}/aggregate": {
        "post": {
          "operationId": "ApiDataController_getAggregatedData",
          "summary": "Get aggregated data",
          "description": "API to get aggregated data",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "objName",
              "required": true,
              "in": "path",
              "description": "Object name",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AggregatedDataDto"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/AggregatedResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["App Viewer - Data"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/d/{objName}/f/{field}/search": {
        "post": {
          "operationId": "ApiDataFieldController_searchFieldDataSource",
          "summary": "Serve data source for field",
          "description": "To get field's data source",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "objName",
              "required": true,
              "in": "path",
              "description": "Object name",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "field",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FieldSourceQuery"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/FieldSourceCollection"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["App Viewer - Data"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/d/{objName}/{guid}/manual-sharing": {
        "post": {
          "operationId": "ApiDataSharingController_upsertSharing",
          "summary": "Set manual sharing",
          "description": "API to share record",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "objName",
              "required": true,
              "in": "path",
              "description": "Object name",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "guid",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpsertRecordSharingDto"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": ""
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["App Viewer - Data"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/d/{objName}/{guid}/sharing": {
        "get": {
          "operationId": "ApiDataSharingController_getSharing",
          "summary": "Get record's sharing",
          "description": "API to get sharing info for record",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "objName",
              "required": true,
              "in": "path",
              "description": "Object name",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "guid",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/RecordSharingResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["App Viewer - Data"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/d/{objName}/f/{field}/upload": {
        "post": {
          "operationId": "DataFileController_uploadFileCreateRecord",
          "summary": "Upload file when create record",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "objName",
              "required": true,
              "in": "path",
              "description": "Object name",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "field",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "multipart/form-data": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "file": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/DataFileResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["App Viewer - Data"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/d/{objName}/{guid}/f/{field}/upload": {
        "post": {
          "operationId": "DataFileController_uploadFile",
          "summary": "Upload file when update record",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "objName",
              "required": true,
              "in": "path",
              "description": "Object name",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "field",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "guid",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "multipart/form-data": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "file": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/DataFileResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["App Viewer - Data"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/d/{objName}/{guid}/f/{field}/{fileId}": {
        "get": {
          "operationId": "DataFileController_streamFile",
          "summary": "Stream file",
          "description": "To stream file",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "objName",
              "required": true,
              "in": "path",
              "description": "Object name",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "field",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "fileId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "guid",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["App Viewer - Data"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/d/{objName}/{guid}/comments": {
        "get": {
          "operationId": "ApiDataCommentController_getComments",
          "summary": "List comments",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "offset",
              "required": false,
              "in": "query",
              "schema": {
                "default": 0,
                "type": "number"
              }
            },
            {
              "name": "limit",
              "required": false,
              "in": "query",
              "schema": {
                "default": 20,
                "type": "number"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortOrder",
              "required": false,
              "in": "query",
              "schema": {
                "enum": ["ASC", "DESC"],
                "type": "string"
              }
            },
            {
              "name": "objName",
              "required": true,
              "in": "path",
              "description": "Object name",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "guid",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/DataCommentCollection"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["App Viewer - Data"],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "post": {
          "operationId": "ApiDataCommentController_createComment",
          "summary": "Create comment",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "objName",
              "required": true,
              "in": "path",
              "description": "Object name",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "guid",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateCommentDto"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/DataCommentResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["App Viewer - Data"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/d/{objName}/{guid}/comments/{id}": {
        "get": {
          "operationId": "ApiDataCommentController_getComment",
          "summary": "Get comment by id",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "objName",
              "required": true,
              "in": "path",
              "description": "Object name",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "guid",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "id",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/DataCommentResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["App Viewer - Data"],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "put": {
          "operationId": "ApiDataCommentController_updateComment",
          "summary": "Update comment",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "objName",
              "required": true,
              "in": "path",
              "description": "Object name",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "guid",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "id",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateCommentDto"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/DataCommentResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["App Viewer - Data"],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "delete": {
          "operationId": "ApiDataCommentController_deleteComment",
          "summary": "Delete comment",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "objName",
              "required": true,
              "in": "path",
              "description": "Object name",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "guid",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "id",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "204": {
              "description": ""
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["App Viewer - Data"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/d/{objName}/{guid}/comments/{id}/attachments/{fileId}": {
        "get": {
          "operationId": "ApiDataCommentController_streamFile",
          "summary": "Stream comment attachment",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "objName",
              "required": true,
              "in": "path",
              "description": "Object name",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "guid",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "id",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "fileId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["App Viewer - Data"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/d/{objName}/{guid}/comments/upload": {
        "post": {
          "operationId": "ApiDataCommentController_uploadFile",
          "summary": "Upload file when create record",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "objName",
              "required": true,
              "in": "path",
              "description": "Object name",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "guid",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "multipart/form-data": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "file": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/DataFileResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["App Viewer - Data"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/u/search": {
        "post": {
          "operationId": "ApiDataUserController_searchUsers",
          "summary": "Search users",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataUserSearchDto"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/DataUserCollection"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["App Viewer - Data"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/u/{id}": {
        "get": {
          "operationId": "ApiDataUserController_getUserById",
          "summary": "Get user by id",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "id",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/DataUserResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["App Viewer - Data"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/f/{flowName}": {
        "post": {
          "operationId": "ApiFlowTriggerController_executeFlow",
          "summary": "Trigger flow by flow name",
          "description": "Response will be vary by flow type:\n- With screen flow: response will be ctxId to get screen to display.\n- With action flow: response will be output variable value.",
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "description": "Bearer token (optional, only required for private flow)",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "flowName",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "description": "is-for-input flow variable's value"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/FlowExecutionResponse"
                      },
                      {
                        "type": "object",
                        "additionalProperties": true,
                        "description": "is-for-output Flow Variable's values"
                      }
                    ]
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "412": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/ActionRequiredException"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "tags": ["App Viewer - Flow"]
        }
      },
      "/s/{ctxId}": {
        "get": {
          "operationId": "ApiFlowTriggerController_getScreen",
          "summary": "Polling endpoint for screen layout",
          "description": "Poll interval endpoint to get screen layout. Will return null when current flow item of screen flow is not screen flow item",
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "description": "Bearer token (optional, only required for private flow)",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "ctxId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ScreenTemplateResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["App Viewer - Flow"]
        },
        "post": {
          "operationId": "ApiFlowTriggerController_submitScreen",
          "summary": "Submit data to end screen flow item",
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "description": "Bearer token (optional, only required for private flow)",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "ctxId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "description": "value for all input with key name on screen layout"
                }
              }
            }
          },
          "responses": {
            "204": {
              "description": ""
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "412": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/ActionRequiredException"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "tags": ["App Viewer - Flow"]
        }
      },
      "/s/{ctxId}/upload": {
        "post": {
          "operationId": "ApiFlowTriggerController_deprecatedUploadFile",
          "summary": "Upload image for running flow",
          "deprecated": true,
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "description": "Bearer token (optional, only required for private flow)",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "ctxId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "multipart/form-data": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "file": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/MediaResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["App Viewer - Flow"]
        }
      },
      "/s/{ctxId}/files/upload": {
        "post": {
          "operationId": "ApiFlowTriggerController_uploadFile",
          "summary": "Upload file",
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "description": "Bearer token (optional, only required for private flow)",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "ctxId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "multipart/form-data": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "file": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/RunningContextMediaResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["App Viewer - Flow"]
        }
      },
      "/s/{ctxId}/files/{fileId}": {
        "get": {
          "operationId": "ApiFlowTriggerController_streamFile",
          "summary": "Download file",
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "description": "Bearer token (optional, only required for private flow)",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "ctxId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "fileId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["App Viewer - Flow"]
        }
      },
      "/s/{ctxId}/c/{compId}/search": {
        "post": {
          "operationId": "ApiFlowRunnerScreenDataController_searchScreenComponentDs",
          "summary": "Serve data source for screen component",
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "description": "Bearer token (optional, only required for private flow)",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "compId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "ctxId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FieldSourceQuery"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/FieldSourceCollection"
                  }
                }
              }
            }
          },
          "tags": ["App Viewer - Flow"]
        }
      },
      "/notifications/in-app": {
        "get": {
          "operationId": "ApiNotificationController_getNotifications",
          "summary": "Get In-app notifications",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "offset",
              "required": false,
              "in": "query",
              "schema": {
                "default": 0,
                "type": "number"
              }
            },
            {
              "name": "limit",
              "required": false,
              "in": "query",
              "schema": {
                "default": 20,
                "type": "number"
              }
            },
            {
              "name": "status",
              "required": false,
              "in": "query",
              "schema": {
                "default": "all",
                "enum": ["all", "unread"],
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NotificationCollection"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Notification"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/notifications/in-app/unread-count": {
        "get": {
          "operationId": "ApiNotificationController_getUnreadCount",
          "summary": "Get Unread Count",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetUnreadCountResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Notification"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/notifications/in-app/read-all": {
        "post": {
          "operationId": "ApiNotificationController_markAllAsRead",
          "summary": "Mark all message read",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Notification"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/notifications/in-app/{id}/read": {
        "post": {
          "operationId": "ApiNotificationController_markAsRead",
          "summary": "Mark a message read",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "id",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Notification"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/notifications/in-app/{id}/unread": {
        "post": {
          "operationId": "ApiNotificationController_markAsUnread",
          "summary": "Mark a message unread",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "id",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Notification"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/shorten": {
        "post": {
          "operationId": "ShortenUrlController_genShort",
          "summary": "Create Short url",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenShortUrlDto"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GenShortUrlResponse"
                  }
                }
              }
            }
          },
          "tags": ["System"]
        }
      },
      "/shorten/{short}": {
        "get": {
          "operationId": "ShortenUrlController_getLong",
          "summary": "Get Short url",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "short",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/RedirectResponse"
                  }
                }
              }
            }
          },
          "tags": ["System"]
        }
      },
      "/chat/{id}/messages": {
        "post": {
          "operationId": "ChatAIController_createMsg",
          "summary": "Create mock AI response",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "id",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateMessageDto"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": ""
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["[WIP] Chat (v3.20) - Release soon"],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "get": {
          "operationId": "ChatAIController_getHistory",
          "summary": "Get ai chat history",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "id",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "nextCursor",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "prevCursor",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "limit",
              "required": false,
              "in": "query",
              "schema": {
                "default": 20,
                "type": "number"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ChatHistoryCollectionCursor"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["[WIP] Chat (v3.20) - Release soon"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/chat": {
        "post": {
          "operationId": "ChatAIController_createSession",
          "summary": "Create a new session",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateSessionDto"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CreateSessionResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["[WIP] Chat (v3.20) - Release soon"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/builder/reference": {
        "post": {
          "operationId": "ApiCommonBuilderController_getRelated",
          "summary": "Get entities reference",
          "description": "Which entities is using this entity",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReferenceQuery"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ReferenceResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Common Nflow Builder"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/builder/logs/search": {
        "post": {
          "operationId": "ApiCommonBuilderController_searchLogs",
          "summary": "Search Audit Logs",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchAuditLogDto"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/AuditLogBasicCollection"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Common Nflow Builder"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/builder/graph/export": {
        "post": {
          "operationId": "ApiCommonBuilderController_exportGraph",
          "summary": "Export Component Graph",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/octet-stream": {
                  "schema": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Common Nflow Builder"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/builder/meta/import": {
        "post": {
          "operationId": "ApiExportImportBuilderController_importNew",
          "summary": "Import configs",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "onConflict",
              "required": false,
              "in": "query",
              "schema": {
                "default": "skip",
                "enum": ["override", "skip"],
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "multipart/form-data": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "file": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ImportExportJobResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Common Nflow Builder"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/builder/meta/export": {
        "post": {
          "operationId": "ApiExportImportBuilderController_exportNew",
          "summary": "Export configs",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExportBodyDto"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ImportExportJobResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Common Nflow Builder"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/builder/meta/jobs/{id}": {
        "get": {
          "operationId": "ApiExportImportBuilderController_streamFile",
          "summary": "Stream import/export file",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "id",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/octet-stream": {
                  "schema": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Common Nflow Builder"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/builder/meta/jobs/{id}/retry": {
        "post": {
          "operationId": "ApiExportImportBuilderController_retryJob",
          "summary": "Retry job",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "id",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ImportExportJobResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Common Nflow Builder"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/builder/meta/jobs": {
        "get": {
          "operationId": "ApiExportImportBuilderController_getJobs",
          "summary": "Get import/export jobs",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "offset",
              "required": false,
              "in": "query",
              "schema": {
                "default": 0,
                "type": "number"
              }
            },
            {
              "name": "limit",
              "required": false,
              "in": "query",
              "schema": {
                "default": 20,
                "type": "number"
              }
            },
            {
              "name": "type",
              "required": false,
              "in": "query",
              "schema": {
                "enum": ["import", "export"],
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ImportExportJobCollection"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Common Nflow Builder"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/builder/apps/search": {
        "post": {
          "operationId": "ApiAppBuilderController_searchApps",
          "summary": "Get list application",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationQuery"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApplicationCollection"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["App Builder"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/builder/apps/{name}": {
        "get": {
          "operationId": "ApiAppBuilderController_getApp",
          "summary": "Get application by id",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "name",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BuilderAppResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["App Builder"],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "put": {
          "operationId": "ApiAppBuilderController_updateApp",
          "summary": "Update application",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "name",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateApplicationDto"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BuilderAppResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "412": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/ActionRequiredException"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "tags": ["App Builder"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/builder/apps/{name}/pages": {
        "get": {
          "operationId": "ApiAppBuilderController_getAppPages",
          "summary": "Get available pages in app builder",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "name",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/AppBuilderPageResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["App Builder"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/builder/apps/{name}/order-pages": {
        "post": {
          "operationId": "ApiAppBuilderController_updateAppLayouts",
          "summary": "Order app pages",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "name",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateAppPageOrderDto"
                }
              }
            }
          },
          "responses": {
            "204": {
              "description": ""
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "412": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/ActionRequiredException"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "tags": ["App Builder"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/builder/apps": {
        "post": {
          "operationId": "ApiAppBuilderController_createApp",
          "summary": "Create new application",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateApplicationDto"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BuilderAppResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "412": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/ActionRequiredException"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "tags": ["App Builder"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/builder/apps/remove": {
        "post": {
          "operationId": "ApiAppBuilderController_removeApps",
          "summary": "Remove applications",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NamesBody"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": ""
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["App Builder"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/builder/apps/recover": {
        "post": {
          "operationId": "ApiAppBuilderController_recoverApps",
          "summary": "Recover applications",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NamesBody"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": ""
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["App Builder"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/builder/apps/{name}/audit-logs": {
        "get": {
          "operationId": "ApiAppBuilderController_getAuditLogs",
          "summary": "Get application's audit",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "name",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/AuditLogResponse"
                    }
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["App Builder"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/flow-builder/{flowName}/debug-logs": {
        "get": {
          "operationId": "ApiFlowDebugController_getExecutionCtxLogs",
          "summary": "Get latest execution context logs",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "flowName",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ExecutionContextLogResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Flow Builder"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/flow-builder/debug": {
        "post": {
          "operationId": "ApiFlowDebugController_debugFlow",
          "summary": "Start flow debug session",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FlowDebugDto"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/DebugFlowExecutionResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Flow Builder"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/flow-builder/debug-logs": {
        "get": {
          "operationId": "ApiFlowDebugController_getDebugLogs",
          "summary": "Get detail log for debug session",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "ctxId",
              "required": true,
              "in": "query",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/FlowDebugLogsResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Flow Builder"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/integrated": {
        "get": {
          "operationId": "ApiIntegratedController_getList",
          "summary": "Get current integration list",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "offset",
              "required": false,
              "in": "query",
              "schema": {
                "default": 0,
                "type": "number"
              }
            },
            {
              "name": "limit",
              "required": false,
              "in": "query",
              "schema": {
                "default": 20,
                "type": "number"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/IntegratedCollection"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Integrations"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/integrations/action-metadata": {
        "get": {
          "operationId": "ActionMetadataController_getList",
          "summary": "Get action meta list",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "offset",
              "required": false,
              "in": "query",
              "schema": {
                "default": 0,
                "type": "number"
              }
            },
            {
              "name": "limit",
              "required": false,
              "in": "query",
              "schema": {
                "default": 20,
                "type": "number"
              }
            },
            {
              "name": "sortOrder",
              "required": false,
              "in": "query",
              "schema": {
                "enum": ["ASC", "DESC"],
                "type": "string"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "searchText",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "onlyDeleted",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ActionMetadataCollection"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Integrations"],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "post": {
          "operationId": "ActionMetadataController_createActionMetadata",
          "summary": "Create Action meta",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActionMetadataCreateDto"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ActionMetadataResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Integrations"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/integrations/action-metadata/{name}": {
        "get": {
          "operationId": "ActionMetadataController_getItem",
          "summary": "Get action meta by name",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "name",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ActionMetadataResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Integrations"],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "put": {
          "operationId": "ActionMetadataController_updateActionMetadata",
          "summary": "Update action meta",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "name",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActionMetadataUpdateDto"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ActionMetadataResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Integrations"],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "delete": {
          "operationId": "ActionMetadataController_deleteActionMetadata",
          "summary": "Delete action meta",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "name",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ActionMetadataResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Integrations"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/integrations/action-metadata/{name}/test": {
        "post": {
          "operationId": "ActionMetadataController_testActionMetadata",
          "summary": "Test action meta by name",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "name",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TestActionMetadataResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Integrations"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/integrations/action-metadata/remove": {
        "post": {
          "operationId": "ActionMetadataController_remove",
          "summary": "Remove Actions Meta",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NamesBody"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": ""
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Integrations"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/integrations/action-metadata/recover": {
        "post": {
          "operationId": "ActionMetadataController_recover",
          "summary": "Recover Actions Meta",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NamesBody"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": ""
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Integrations"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/integrations/credentials": {
        "get": {
          "operationId": "CredentialsController_getCredentials",
          "summary": "Get credentials list",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "offset",
              "required": false,
              "in": "query",
              "schema": {
                "default": 0,
                "type": "number"
              }
            },
            {
              "name": "limit",
              "required": false,
              "in": "query",
              "schema": {
                "default": 20,
                "type": "number"
              }
            },
            {
              "name": "sortOrder",
              "required": false,
              "in": "query",
              "schema": {
                "enum": ["ASC", "DESC"],
                "type": "string"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "searchText",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "identityType",
              "required": false,
              "in": "query",
              "schema": {
                "enum": ["anon", "orgWide", "perUser"],
                "type": "string"
              }
            },
            {
              "name": "onlyDeleted",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CredentialCollection"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Integrations"],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "post": {
          "operationId": "CredentialsController_createCredential",
          "summary": "Create credential",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CredentialCreateDto"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CredentialResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Integrations"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/integrations/credentials/{name}": {
        "get": {
          "operationId": "CredentialsController_getCredential",
          "summary": "Get credential by name",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "name",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CredentialResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Integrations"],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "put": {
          "operationId": "CredentialsController_updateCredential",
          "summary": "Update credential",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "name",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CredentialUpdateDto"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CredentialResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Integrations"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/integrations/credentials/remove": {
        "post": {
          "operationId": "CredentialsController_deleteCredential",
          "summary": "Delete credential",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NamesBody"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": ""
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Integrations"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/integrations/credentials/recover": {
        "post": {
          "operationId": "CredentialsController_recoverCredential",
          "summary": "Recover credential",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NamesBody"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": ""
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Integrations"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/integrations/credentials/{name}/auth-url": {
        "get": {
          "operationId": "CredentialsController_getOauth2AuthUrl",
          "summary": "Get Oauth2 Auth Url",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "name",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "redirectUri",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/AuthUrlResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Integrations"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/integrations/credentials/{name}/token": {
        "post": {
          "operationId": "CredentialsController_saveOauth2Token",
          "summary": "Save oauth2 token",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "name",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthCodeDto"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": ""
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Integrations"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/integrations/credentials/{name}/data": {
        "delete": {
          "operationId": "CredentialsController_deleteCredentialData",
          "summary": "Delete credential data",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "name",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Integrations"],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "get": {
          "operationId": "CredentialsController_getPerUserCredentialData",
          "summary": "Get encrypted per-user credential data",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "name",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PerUserCredentialDataResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Integrations"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/flows/{flowName}/templates/{version}/notes": {
        "get": {
          "operationId": "ApiFlowNoteController_getNotes",
          "summary": "Get all notes",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "flowName",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "version",
              "required": true,
              "in": "path",
              "schema": {
                "pattern": "/[v]\\d+/",
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/FlowNoteResponse"
                    }
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Flow Builder"],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "post": {
          "operationId": "ApiFlowNoteController_createNote",
          "summary": "Create new note",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "flowName",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "version",
              "required": true,
              "in": "path",
              "schema": {
                "pattern": "/[v]\\d+/",
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateNoteDto"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/FlowNoteResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Flow Builder"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/flows/{flowName}/templates/{version}/notes/{noteId}": {
        "get": {
          "operationId": "ApiFlowNoteController_getNoteById",
          "summary": "Get note by Id",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "flowName",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "version",
              "required": true,
              "in": "path",
              "schema": {
                "pattern": "/[v]\\d+/",
                "type": "string"
              }
            },
            {
              "name": "noteId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/FlowNoteResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Flow Builder"],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "put": {
          "operationId": "ApiFlowNoteController_updateNote",
          "summary": "Update a note",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "flowName",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "version",
              "required": true,
              "in": "path",
              "schema": {
                "pattern": "/[v]\\d+/",
                "type": "string"
              }
            },
            {
              "name": "noteId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateNoteDto"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/FlowNoteResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Flow Builder"],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "delete": {
          "operationId": "ApiFlowNoteController_removeNote",
          "summary": "Delete a note",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "flowName",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "version",
              "required": true,
              "in": "path",
              "schema": {
                "pattern": "/[v]\\d+/",
                "type": "string"
              }
            },
            {
              "name": "noteId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Flow Builder"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/flows/{flowName}/templates/{version}/input-variables": {
        "get": {
          "operationId": "ApiFlowVariableController_getFlowInputVariableList",
          "summary": "Get list of Input Variables",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "flowName",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "version",
              "required": true,
              "in": "path",
              "schema": {
                "pattern": "/[v]\\d+/",
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/FlowInputVariableResponse"
                    }
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Flow Builder"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/flows/{flowName}/templates/{version}/variables": {
        "get": {
          "operationId": "ApiFlowVariableController_getFlowVariableList",
          "summary": "Get list of Variables",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "type",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "boolean",
                  "collection",
                  "date",
                  "date-time",
                  "float",
                  "integer",
                  "json",
                  "object",
                  "pick-list",
                  "record",
                  "string",
                  "time",
                  "media-url",
                  "null"
                ],
                "type": "string"
              }
            },
            {
              "name": "flowName",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "version",
              "required": true,
              "in": "path",
              "schema": {
                "pattern": "/[v]\\d+/",
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/FlowVariableResponse"
                    }
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Flow Builder"],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "post": {
          "operationId": "ApiFlowVariableController_addFlowVariable",
          "summary": "Add new variable",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "flowName",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "version",
              "required": true,
              "in": "path",
              "schema": {
                "pattern": "/[v]\\d+/",
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateFlowVariableDto"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/FlowVariableResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Flow Builder"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/flows/{flowName}/templates/{version}/variables/{varName}": {
        "put": {
          "operationId": "ApiFlowVariableController_updateFlowVariable",
          "summary": "Update variable",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "flowName",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "version",
              "required": true,
              "in": "path",
              "schema": {
                "pattern": "/[v]\\d+/",
                "type": "string"
              }
            },
            {
              "name": "varName",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateFlowVariableDto"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/FlowVariableResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Flow Builder"],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "delete": {
          "operationId": "ApiFlowVariableController_removeFlowVariable",
          "summary": "Remove variable",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "flowName",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "version",
              "required": true,
              "in": "path",
              "schema": {
                "pattern": "/[v]\\d+/",
                "type": "string"
              }
            },
            {
              "name": "varName",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/FlowVariableResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Flow Builder"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/flows/{flowName}/templates/{version}/variables/{varName}/schema": {
        "get": {
          "operationId": "ApiFlowVariableController_getVariableSchema",
          "summary": "Get schema of variable",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "flowName",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "version",
              "required": true,
              "in": "path",
              "schema": {
                "pattern": "/[v]\\d+/",
                "type": "string"
              }
            },
            {
              "name": "varName",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/FlowVariableSchemaResponse"
                    }
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Flow Builder"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/flows/{flowName}/templates/{version}/items": {
        "get": {
          "operationId": "ApiFlowItemController_getFlowItems",
          "summary": "Get Flow Items",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "flowName",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "version",
              "required": true,
              "in": "path",
              "schema": {
                "pattern": "/[v]\\d+/",
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "oneOf": [
                        {
                          "$ref": "#/components/schemas/ActionFlowItemResponse"
                        },
                        {
                          "$ref": "#/components/schemas/AssignmentFlowItemResponse"
                        },
                        {
                          "$ref": "#/components/schemas/CollectionAggregationFlowItemResponse"
                        },
                        {
                          "$ref": "#/components/schemas/DecisionFlowItemResponse"
                        },
                        {
                          "$ref": "#/components/schemas/EmitEventFlowItemResponse"
                        },
                        {
                          "$ref": "#/components/schemas/BuiltinActionFlowItemResponse"
                        },
                        {
                          "$ref": "#/components/schemas/ImportRecordsFlowItemResponse"
                        },
                        {
                          "$ref": "#/components/schemas/LoopFlowItemResponse"
                        },
                        {
                          "$ref": "#/components/schemas/RecordCreateFlowItemResponse"
                        },
                        {
                          "$ref": "#/components/schemas/RecordDeleteFlowItemResponse"
                        },
                        {
                          "$ref": "#/components/schemas/RecordReadFlowItemResponse"
                        },
                        {
                          "$ref": "#/components/schemas/RecordUpdateFlowItemResponse"
                        },
                        {
                          "$ref": "#/components/schemas/ScreenFlowItemResponse"
                        },
                        {
                          "$ref": "#/components/schemas/SubflowFlowItemResponse"
                        },
                        {
                          "$ref": "#/components/schemas/UserCreateFlowItemResponse"
                        },
                        {
                          "$ref": "#/components/schemas/UserUpdateFlowItemResponse"
                        },
                        {
                          "$ref": "#/components/schemas/RawQueryFlowItemResponse"
                        },
                        {
                          "$ref": "#/components/schemas/AIModelFlowItemResponse"
                        }
                      ]
                    }
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Flow Builder"],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "post": {
          "operationId": "ApiFlowItemController_createFlowItem",
          "summary": "Create new FlowItem",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "flowName",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "version",
              "required": true,
              "in": "path",
              "schema": {
                "pattern": "/[v]\\d+/",
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/CreateActionFlowItemDto"
                    },
                    {
                      "$ref": "#/components/schemas/CreateAssignmentFlowItemDto"
                    },
                    {
                      "$ref": "#/components/schemas/CreateCollectionAggregationFlowItemDto"
                    },
                    {
                      "$ref": "#/components/schemas/CreateDecisionFlowItemDto"
                    },
                    {
                      "$ref": "#/components/schemas/CreateEmitEventFlowItemDto"
                    },
                    {
                      "$ref": "#/components/schemas/CreateBuiltinActionFlowItemDto"
                    },
                    {
                      "$ref": "#/components/schemas/CreateImportRecordsDto"
                    },
                    {
                      "$ref": "#/components/schemas/CreateLoopFlowItemDto"
                    },
                    {
                      "$ref": "#/components/schemas/CreateRecordCreateDto"
                    },
                    {
                      "$ref": "#/components/schemas/CreateRecordDeleteDto"
                    },
                    {
                      "$ref": "#/components/schemas/CreateRecordReadDto"
                    },
                    {
                      "$ref": "#/components/schemas/CreateRecordUpdateDto"
                    },
                    {
                      "$ref": "#/components/schemas/CreateScreenFlowItemDto"
                    },
                    {
                      "$ref": "#/components/schemas/CreateSubflowItemDto"
                    },
                    {
                      "$ref": "#/components/schemas/CreateUserCreateItemDto"
                    },
                    {
                      "$ref": "#/components/schemas/CreateUserUpdateItemDto"
                    },
                    {
                      "$ref": "#/components/schemas/CreateRawQueryDataDto"
                    },
                    {
                      "$ref": "#/components/schemas/CreateAIModelFlowItemDto"
                    }
                  ]
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/ActionFlowItemResponse"
                      },
                      {
                        "$ref": "#/components/schemas/AssignmentFlowItemResponse"
                      },
                      {
                        "$ref": "#/components/schemas/CollectionAggregationFlowItemResponse"
                      },
                      {
                        "$ref": "#/components/schemas/DecisionFlowItemResponse"
                      },
                      {
                        "$ref": "#/components/schemas/EmitEventFlowItemResponse"
                      },
                      {
                        "$ref": "#/components/schemas/BuiltinActionFlowItemResponse"
                      },
                      {
                        "$ref": "#/components/schemas/ImportRecordsFlowItemResponse"
                      },
                      {
                        "$ref": "#/components/schemas/LoopFlowItemResponse"
                      },
                      {
                        "$ref": "#/components/schemas/RecordCreateFlowItemResponse"
                      },
                      {
                        "$ref": "#/components/schemas/RecordDeleteFlowItemResponse"
                      },
                      {
                        "$ref": "#/components/schemas/RecordReadFlowItemResponse"
                      },
                      {
                        "$ref": "#/components/schemas/RecordUpdateFlowItemResponse"
                      },
                      {
                        "$ref": "#/components/schemas/ScreenFlowItemResponse"
                      },
                      {
                        "$ref": "#/components/schemas/SubflowFlowItemResponse"
                      },
                      {
                        "$ref": "#/components/schemas/UserCreateFlowItemResponse"
                      },
                      {
                        "$ref": "#/components/schemas/UserUpdateFlowItemResponse"
                      },
                      {
                        "$ref": "#/components/schemas/RawQueryFlowItemResponse"
                      },
                      {
                        "$ref": "#/components/schemas/AIModelFlowItemResponse"
                      }
                    ]
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Flow Builder"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/flows/{flowName}/templates/{version}/items/{flowItemName}": {
        "get": {
          "operationId": "ApiFlowItemController_getFlowItem",
          "summary": "Get FlowItem by ID",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "flowName",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "version",
              "required": true,
              "in": "path",
              "schema": {
                "pattern": "/[v]\\d+/",
                "type": "string"
              }
            },
            {
              "name": "flowItemName",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/ActionFlowItemResponse"
                      },
                      {
                        "$ref": "#/components/schemas/AssignmentFlowItemResponse"
                      },
                      {
                        "$ref": "#/components/schemas/CollectionAggregationFlowItemResponse"
                      },
                      {
                        "$ref": "#/components/schemas/DecisionFlowItemResponse"
                      },
                      {
                        "$ref": "#/components/schemas/EmitEventFlowItemResponse"
                      },
                      {
                        "$ref": "#/components/schemas/BuiltinActionFlowItemResponse"
                      },
                      {
                        "$ref": "#/components/schemas/ImportRecordsFlowItemResponse"
                      },
                      {
                        "$ref": "#/components/schemas/LoopFlowItemResponse"
                      },
                      {
                        "$ref": "#/components/schemas/RecordCreateFlowItemResponse"
                      },
                      {
                        "$ref": "#/components/schemas/RecordDeleteFlowItemResponse"
                      },
                      {
                        "$ref": "#/components/schemas/RecordReadFlowItemResponse"
                      },
                      {
                        "$ref": "#/components/schemas/RecordUpdateFlowItemResponse"
                      },
                      {
                        "$ref": "#/components/schemas/ScreenFlowItemResponse"
                      },
                      {
                        "$ref": "#/components/schemas/SubflowFlowItemResponse"
                      },
                      {
                        "$ref": "#/components/schemas/UserCreateFlowItemResponse"
                      },
                      {
                        "$ref": "#/components/schemas/UserUpdateFlowItemResponse"
                      },
                      {
                        "$ref": "#/components/schemas/RawQueryFlowItemResponse"
                      },
                      {
                        "$ref": "#/components/schemas/AIModelFlowItemResponse"
                      }
                    ]
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Flow Builder"],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "put": {
          "operationId": "ApiFlowItemController_updateFlowItem",
          "summary": "Update FlowItem",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "flowName",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "version",
              "required": true,
              "in": "path",
              "schema": {
                "pattern": "/[v]\\d+/",
                "type": "string"
              }
            },
            {
              "name": "flowItemName",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/UpdateActionFlowItemDto"
                    },
                    {
                      "$ref": "#/components/schemas/UpdateAssignmentFlowItemDto"
                    },
                    {
                      "$ref": "#/components/schemas/UpdateCollectionAggregationFlowItemDto"
                    },
                    {
                      "$ref": "#/components/schemas/UpdateDecisionFlowItemDto"
                    },
                    {
                      "$ref": "#/components/schemas/UpdateEmitEventFlowItemDto"
                    },
                    {
                      "$ref": "#/components/schemas/UpdateImportRecordsDto"
                    },
                    {
                      "$ref": "#/components/schemas/UpdateLoopFlowItemDto"
                    },
                    {
                      "$ref": "#/components/schemas/UpdateRecordCreateDto"
                    },
                    {
                      "$ref": "#/components/schemas/UpdateRecordDeleteDto"
                    },
                    {
                      "$ref": "#/components/schemas/UpdateRecordReadDto"
                    },
                    {
                      "$ref": "#/components/schemas/UpdateRecordUpdateDto"
                    },
                    {
                      "$ref": "#/components/schemas/UpdateScreenFlowItemDto"
                    },
                    {
                      "$ref": "#/components/schemas/UpdateSubflowItemDto"
                    },
                    {
                      "$ref": "#/components/schemas/UpdateUserCreateItemDto"
                    },
                    {
                      "$ref": "#/components/schemas/UpdateUserUpdateItemDto"
                    },
                    {
                      "$ref": "#/components/schemas/UpdateRawQueryFlowItemDto"
                    },
                    {
                      "$ref": "#/components/schemas/UpdateAIModelFlowItemDto"
                    }
                  ]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/ActionFlowItemResponse"
                      },
                      {
                        "$ref": "#/components/schemas/AssignmentFlowItemResponse"
                      },
                      {
                        "$ref": "#/components/schemas/CollectionAggregationFlowItemResponse"
                      },
                      {
                        "$ref": "#/components/schemas/DecisionFlowItemResponse"
                      },
                      {
                        "$ref": "#/components/schemas/EmitEventFlowItemResponse"
                      },
                      {
                        "$ref": "#/components/schemas/BuiltinActionFlowItemResponse"
                      },
                      {
                        "$ref": "#/components/schemas/ImportRecordsFlowItemResponse"
                      },
                      {
                        "$ref": "#/components/schemas/LoopFlowItemResponse"
                      },
                      {
                        "$ref": "#/components/schemas/RecordCreateFlowItemResponse"
                      },
                      {
                        "$ref": "#/components/schemas/RecordDeleteFlowItemResponse"
                      },
                      {
                        "$ref": "#/components/schemas/RecordReadFlowItemResponse"
                      },
                      {
                        "$ref": "#/components/schemas/RecordUpdateFlowItemResponse"
                      },
                      {
                        "$ref": "#/components/schemas/ScreenFlowItemResponse"
                      },
                      {
                        "$ref": "#/components/schemas/SubflowFlowItemResponse"
                      },
                      {
                        "$ref": "#/components/schemas/UserCreateFlowItemResponse"
                      },
                      {
                        "$ref": "#/components/schemas/UserUpdateFlowItemResponse"
                      },
                      {
                        "$ref": "#/components/schemas/RawQueryFlowItemResponse"
                      },
                      {
                        "$ref": "#/components/schemas/AIModelFlowItemResponse"
                      }
                    ]
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Flow Builder"],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "delete": {
          "operationId": "ApiFlowItemController_deleteFlowItem",
          "summary": "Delete FlowItem",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "flowName",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "version",
              "required": true,
              "in": "path",
              "schema": {
                "pattern": "/[v]\\d+/",
                "type": "string"
              }
            },
            {
              "name": "flowItemName",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/ActionFlowItemResponse"
                      },
                      {
                        "$ref": "#/components/schemas/AssignmentFlowItemResponse"
                      },
                      {
                        "$ref": "#/components/schemas/CollectionAggregationFlowItemResponse"
                      },
                      {
                        "$ref": "#/components/schemas/DecisionFlowItemResponse"
                      },
                      {
                        "$ref": "#/components/schemas/EmitEventFlowItemResponse"
                      },
                      {
                        "$ref": "#/components/schemas/BuiltinActionFlowItemResponse"
                      },
                      {
                        "$ref": "#/components/schemas/ImportRecordsFlowItemResponse"
                      },
                      {
                        "$ref": "#/components/schemas/LoopFlowItemResponse"
                      },
                      {
                        "$ref": "#/components/schemas/RecordCreateFlowItemResponse"
                      },
                      {
                        "$ref": "#/components/schemas/RecordDeleteFlowItemResponse"
                      },
                      {
                        "$ref": "#/components/schemas/RecordReadFlowItemResponse"
                      },
                      {
                        "$ref": "#/components/schemas/RecordUpdateFlowItemResponse"
                      },
                      {
                        "$ref": "#/components/schemas/ScreenFlowItemResponse"
                      },
                      {
                        "$ref": "#/components/schemas/SubflowFlowItemResponse"
                      },
                      {
                        "$ref": "#/components/schemas/UserCreateFlowItemResponse"
                      },
                      {
                        "$ref": "#/components/schemas/UserUpdateFlowItemResponse"
                      },
                      {
                        "$ref": "#/components/schemas/RawQueryFlowItemResponse"
                      },
                      {
                        "$ref": "#/components/schemas/AIModelFlowItemResponse"
                      }
                    ]
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Flow Builder"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/flows/{flowName}/templates/{version}/connections": {
        "get": {
          "operationId": "ApiFlowItemConnectionController_getFlowItemConnections",
          "summary": "Get Flow Item Connections",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "flowName",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "version",
              "required": true,
              "in": "path",
              "schema": {
                "pattern": "/[v]\\d+/",
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/FlowItemConnectionResponse"
                    }
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Flow Builder"],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "post": {
          "operationId": "ApiFlowItemConnectionController_createFlowItemConnection",
          "summary": "Create new Flow Item Connection",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "flowName",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "version",
              "required": true,
              "in": "path",
              "schema": {
                "pattern": "/[v]\\d+/",
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateFlowItemConnectionDto"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/FlowItemConnectionResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Flow Builder"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/flows/{flowName}/templates/{version}/connections/{id}": {
        "put": {
          "operationId": "ApiFlowItemConnectionController_updateFlowItemConnection",
          "summary": "Update Flow Item Connection",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "flowName",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "version",
              "required": true,
              "in": "path",
              "schema": {
                "pattern": "/[v]\\d+/",
                "type": "string"
              }
            },
            {
              "name": "id",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateFlowItemConnectionDto"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/FlowItemConnectionResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Flow Builder"],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "delete": {
          "operationId": "ApiFlowItemConnectionController_deleteFlowItemConnection",
          "summary": "Delete Flow Item Connection",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "flowName",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "version",
              "required": true,
              "in": "path",
              "schema": {
                "pattern": "/[v]\\d+/",
                "type": "string"
              }
            },
            {
              "name": "id",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/FlowItemConnectionResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Flow Builder"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/flows/search": {
        "post": {
          "operationId": "ApiFlowController_getFlows",
          "summary": "Get Flows",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListFlowsQuery"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/FlowCollection"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Flow Builder"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/flows/{flowName}": {
        "get": {
          "operationId": "ApiFlowController_getFlow",
          "summary": "Get Flow by ID",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "flowName",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/FlowResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Flow Builder"],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "put": {
          "operationId": "ApiFlowController_updateFlow",
          "summary": "Update Flow",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "flowName",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateFlowDto"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/FlowResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Flow Builder"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/flows": {
        "post": {
          "operationId": "ApiFlowController_createFlow",
          "summary": "Create new Flow and First Template",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FlowCreateDto"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/FlowResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Flow Builder"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/flows/{flowName}/templates": {
        "get": {
          "operationId": "ApiFlowController_getFlowTemplates",
          "summary": "Get Templates for a flow",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "flowName",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/FlowTemplateResponse"
                    }
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Flow Builder"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/flows/{flowName}/templates/{version}": {
        "get": {
          "operationId": "ApiFlowController_getFlowTemplateAndData",
          "summary": "Get Flow Template and data flow builder",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "flowName",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "version",
              "required": true,
              "in": "path",
              "schema": {
                "pattern": "/[v]\\d+/",
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/FlowTemplateWithDataResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Flow Builder"],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "put": {
          "operationId": "ApiFlowController_updateTemplate",
          "summary": "Update Flow template",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "flowName",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "version",
              "required": true,
              "in": "path",
              "schema": {
                "pattern": "/[v]\\d+/",
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/UpdateDataFlowDto"
                    },
                    {
                      "$ref": "#/components/schemas/UpdateScreenFlowDto"
                    },
                    {
                      "$ref": "#/components/schemas/UpdateScheduleFlowDto"
                    },
                    {
                      "$ref": "#/components/schemas/UpdateActionFlowDto"
                    },
                    {
                      "$ref": "#/components/schemas/UpdateEventFlowDto"
                    },
                    {
                      "$ref": "#/components/schemas/UpdateAiFlowDto"
                    }
                  ]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/FlowTemplateResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Flow Builder"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/flows/{flowName}/templates/{version}/clone": {
        "post": {
          "operationId": "ApiFlowController_cloneTemplate",
          "summary": "Clone template Flow",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "flowName",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "version",
              "required": true,
              "in": "path",
              "schema": {
                "pattern": "/[v]\\d+/",
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FlowTemplateCloneDto"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/FlowTemplateResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Flow Builder"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/flows/{flowName}/templates/{version}/activate": {
        "post": {
          "operationId": "ApiFlowController_activateTemplate",
          "summary": "Activate flow template",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "flowName",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "version",
              "required": true,
              "in": "path",
              "schema": {
                "pattern": "/[v]\\d+/",
                "type": "string"
              }
            }
          ],
          "responses": {
            "204": {
              "description": ""
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Flow Builder"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/flows/logs": {
        "post": {
          "operationId": "ApiFlowController_getLogs",
          "summary": "Get Activity logs",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FlowLogQuery"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/AuditLogCollection"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Flow Builder"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/flows/{flowName}/templates/{version}/deactivate": {
        "post": {
          "operationId": "ApiFlowController_deactivateTemplate",
          "summary": "Deactivate flow template",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "flowName",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "version",
              "required": true,
              "in": "path",
              "schema": {
                "pattern": "/[v]\\d+/",
                "type": "string"
              }
            }
          ],
          "responses": {
            "204": {
              "description": ""
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Flow Builder"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/flows/remove": {
        "post": {
          "operationId": "ApiFlowController_remove",
          "summary": "Remove Flows",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NamesBody"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": ""
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Flow Builder"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/flows/recover": {
        "post": {
          "operationId": "ApiFlowController_recover",
          "summary": "Recover Flows",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NamesBody"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": ""
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Flow Builder"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/flow-builder/screen-flows": {
        "get": {
          "operationId": "ApiFlowBuilderController_getScreenFlow",
          "summary": "Get available screen flows for layout builder",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "offset",
              "required": false,
              "in": "query",
              "schema": {
                "default": 0,
                "type": "number"
              }
            },
            {
              "name": "limit",
              "required": false,
              "in": "query",
              "schema": {
                "default": 20,
                "type": "number"
              }
            },
            {
              "name": "sortOrder",
              "required": false,
              "in": "query",
              "schema": {
                "enum": ["ASC", "DESC"],
                "type": "string"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "searchText",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "tagNames",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "type",
              "required": false,
              "in": "query",
              "schema": {
                "enum": ["screen", "action", "time-based", "data", "event", "ai-chat"],
                "type": "string"
              }
            },
            {
              "name": "onlyDeleted",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/FlowCollection"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "security": [
            {
              "bearer": []
            }
          ],
          "tags": ["Layout Builder"]
        }
      },
      "/flow-builder/assignment-operators": {
        "get": {
          "operationId": "ApiFlowBuilderController_getAssignmentOperators",
          "summary": "Get assignment operators",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "additionalProperties": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AssignmentOperator"
                      }
                    },
                    "description": "<VariableType>: AssignmentOperator[]"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "security": [
            {
              "bearer": []
            }
          ],
          "tags": ["Flow Builder"]
        }
      },
      "/flow-builder/{flowName}/sub-flows": {
        "get": {
          "operationId": "ApiFlowBuilderController_getFlowsForSub",
          "summary": "Get available flows for sub-flow",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "flowName",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "offset",
              "required": false,
              "in": "query",
              "schema": {
                "default": 0,
                "type": "number"
              }
            },
            {
              "name": "limit",
              "required": false,
              "in": "query",
              "schema": {
                "default": 20,
                "type": "number"
              }
            },
            {
              "name": "sortOrder",
              "required": false,
              "in": "query",
              "schema": {
                "enum": ["ASC", "DESC"],
                "type": "string"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "searchText",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "tagNames",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "type",
              "required": false,
              "in": "query",
              "schema": {
                "enum": ["screen", "action", "time-based", "data", "event", "ai-chat"],
                "type": "string"
              }
            },
            {
              "name": "onlyDeleted",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/FlowCollection"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "security": [
            {
              "bearer": []
            }
          ],
          "tags": ["Flow Builder"]
        }
      },
      "/flow-builder/condition-operators": {
        "get": {
          "operationId": "ApiFlowBuilderController_getConditionOperators",
          "summary": "Get condition operators",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "security": [
            {
              "bearer": []
            }
          ],
          "tags": ["Flow Builder"]
        }
      },
      "/roles": {
        "get": {
          "operationId": "RoleController_getRoles",
          "summary": "Get Roles",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/RoleResponse"
                    }
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["User Management"],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "post": {
          "operationId": "RoleController_createRole",
          "summary": "Create role",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateRoleDto"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/RoleResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["User Management"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/roles/{name}": {
        "get": {
          "operationId": "RoleController_getRole",
          "summary": "Get Role by name",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "name",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/RoleResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["User Management"],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "put": {
          "operationId": "RoleController_updateRole",
          "summary": "Update role",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "name",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateRoleDto"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/RoleResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["User Management"],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "delete": {
          "operationId": "RoleController_deleteRole",
          "summary": "Delete Role",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "name",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/RoleResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["User Management"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/roles/{name}/children": {
        "get": {
          "operationId": "RoleController_getChildrenRoles",
          "summary": "Get Role's children",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "name",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/RoleResponse"
                    }
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["User Management"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/profiles": {
        "get": {
          "operationId": "ProfileController_getProfiles",
          "summary": "Get profiles",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "offset",
              "required": false,
              "in": "query",
              "schema": {
                "default": 0,
                "type": "number"
              }
            },
            {
              "name": "limit",
              "required": false,
              "in": "query",
              "schema": {
                "default": 20,
                "type": "number"
              }
            },
            {
              "name": "sortOrder",
              "required": false,
              "in": "query",
              "schema": {
                "enum": ["ASC", "DESC"],
                "type": "string"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "searchText",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProfileCollection"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["User Management"],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "post": {
          "operationId": "ProfileController_createProfile",
          "summary": "Create profile",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateProfileDto"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProfileResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["User Management"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/profiles/{name}": {
        "get": {
          "operationId": "ProfileController_getProfile",
          "summary": "Get profile by name",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "name",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProfileResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["User Management"],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "put": {
          "operationId": "ProfileController_updateProfile",
          "summary": "Update profile",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "name",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateProfileDto"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProfileResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["User Management"],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "delete": {
          "operationId": "ProfileController_deleteProfile",
          "summary": "Delete profile",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "name",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProfileResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["User Management"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/sharing-rules": {
        "get": {
          "operationId": "SharingRuleController_getRules",
          "summary": "Get sharing rules",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/SharingRuleResponse"
                    }
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["User Management"],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "post": {
          "operationId": "SharingRuleController_createRule",
          "summary": "Create sharing rule",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateSharingRuleDto"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SharingRuleResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["User Management"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/sharing-rules/{name}": {
        "get": {
          "operationId": "SharingRuleController_getRule",
          "summary": "Get sharing rule by name",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "name",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SharingRuleResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["User Management"],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "put": {
          "operationId": "SharingRuleController_updateRule",
          "summary": "Update sharing rule",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "name",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateSharingRuleDto"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SharingRuleResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["User Management"],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "delete": {
          "operationId": "SharingRuleController_deleteRule",
          "summary": "Delete sharing rule",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "name",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SharingRuleResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["User Management"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/profile-object/{name}": {
        "get": {
          "operationId": "ProfileAccessController_objectAccesses",
          "summary": "Get Profile Object accesses",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "name",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "{ [objName]: ProfileAccessResponse }",
              "content": {
                "application/json": {
                  "schema": {
                    "additionalProperties": {
                      "$ref": "#/components/schemas/ProfileAccessResponse"
                    }
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["User Management"],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "put": {
          "operationId": "ProfileAccessController_upsertObjectAccesses",
          "summary": "Update Profile Object accesses",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "name",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpsertProfileAccessDto"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "{ [objName]: ProfileAccessResponse }",
              "content": {
                "application/json": {
                  "schema": {
                    "additionalProperties": {
                      "$ref": "#/components/schemas/ProfileAccessResponse"
                    }
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["User Management"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/profile-feature/{name}": {
        "get": {
          "operationId": "ProfileAccessController_getFeaturesAccess",
          "summary": "Get Profile Features accesses",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "name",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "{ [featureName]: ProfileAccessResponse }",
              "content": {
                "application/json": {
                  "schema": {
                    "additionalProperties": {
                      "$ref": "#/components/schemas/ProfileAccessResponse"
                    }
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["User Management"],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "put": {
          "operationId": "ProfileAccessController_upsertFeatureAccesses",
          "summary": "Update Profile Features accesses",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "name",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpsertProfileFeatureDto"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "{ [featureName]: ProfileAccessResponse }",
              "content": {
                "application/json": {
                  "schema": {
                    "additionalProperties": {
                      "$ref": "#/components/schemas/ProfileAccessResponse"
                    }
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["User Management"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/divisions": {
        "get": {
          "operationId": "DivisionController_getOrg",
          "summary": "Get divisions",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/DivisionResponse"
                    }
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["User Management - Divisions"],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "post": {
          "operationId": "DivisionController_create",
          "summary": "Create division",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateDivisionDto"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/DivisionResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["User Management - Divisions"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/divisions/{name}": {
        "get": {
          "operationId": "DivisionController_getById",
          "summary": "Get division by name",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "name",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/DivisionResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["User Management - Divisions"],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "put": {
          "operationId": "DivisionController_update",
          "summary": "Update division",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "name",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateDivisionDto"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/DivisionResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["User Management - Divisions"],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "delete": {
          "operationId": "DivisionController_delete",
          "summary": "Delete division",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "name",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["User Management - Divisions"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/builder/layouts/search": {
        "post": {
          "operationId": "ApiLayoutBuilderController_getLayouts",
          "summary": "Search layouts",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListLayoutQuery"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/LayoutCollection"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Layout Builder"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/builder/layouts/{name}": {
        "get": {
          "operationId": "ApiLayoutBuilderController_getLayout",
          "summary": "Get layout by id",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "name",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/LayoutResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Layout Builder"],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "put": {
          "operationId": "ApiLayoutBuilderController_updateLayout",
          "summary": "Update Layout",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "name",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateLayoutDto"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/LayoutResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Layout Builder"],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "delete": {
          "operationId": "ApiLayoutBuilderController_deleteLayout",
          "summary": "Delete Layout",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "name",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/LayoutResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Layout Builder"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/builder/layouts/{name}/audit-logs": {
        "get": {
          "operationId": "ApiLayoutBuilderController_getLayoutLogs",
          "summary": "Get layout audit logs",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "name",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/AuditLogResponse"
                    }
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Layout Builder"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/builder/layouts": {
        "post": {
          "operationId": "ApiLayoutBuilderController_createLayout",
          "summary": "Create Layout",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateLayoutDto"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/LayoutResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Layout Builder"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/builder/layouts/{name}/object-default": {
        "post": {
          "operationId": "ApiLayoutBuilderController_setDefaultForObject",
          "summary": "Set default record layout for MO",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "name",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "204": {
              "description": ""
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Layout Builder"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/builder/layouts/{name}/script": {
        "get": {
          "operationId": "ApiLayoutBuilderController_getScript",
          "summary": "Get layout script",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "name",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/ComponentResponse"
                    }
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Layout Builder"],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "put": {
          "operationId": "ApiLayoutBuilderController_updateScript",
          "summary": "Update layout script",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "name",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateScriptDto"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/ComponentResponse"
                    }
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Layout Builder"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/builder/layouts/{name}/clone": {
        "post": {
          "operationId": "ApiLayoutBuilderController_cloneLayout",
          "summary": "Clone Layout",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "name",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloneLayoutDto"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/LayoutResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Layout Builder"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/builder/layouts/{name}/apps": {
        "get": {
          "operationId": "ApiLayoutBuilderController_getAppLayouts",
          "summary": "Get assigned Applications",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "name",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/BaseAppViewerResponse"
                    }
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Layout Builder"],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "post": {
          "operationId": "ApiLayoutBuilderController_assignAppsToPage",
          "summary": "Assign a layout to multiple applications",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "name",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssignAppPageToAppsDto"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/BaseAppViewerResponse"
                    }
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Layout Builder"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/builder/layouts/{name}/apps-profiles": {
        "post": {
          "operationId": "ApiLayoutBuilderController_assignAppAndProfile",
          "summary": "Assign a Record Page to applications and profiles",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "name",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssignToAppAndProfileDto"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/AppProfileLayoutResponse"
                    }
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Layout Builder"],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "get": {
          "operationId": "ApiLayoutBuilderController_getAssignedAppAndProfile",
          "summary": "Get assigned applications and profiles for a Record Page",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "name",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/AppProfileLayoutResponse"
                    }
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Layout Builder"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/builder/layouts/{name}/triggers": {
        "get": {
          "operationId": "ApiLayoutBuilderController_getTriggers",
          "summary": "Get triggers",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "name",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "oneOf": [
                        {
                          "$ref": "#/components/schemas/TriggerObjectResponse"
                        },
                        {
                          "$ref": "#/components/schemas/TriggerFlowResponse"
                        }
                      ]
                    }
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Layout Builder"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/builder/layouts/{name}/group-by": {
        "post": {
          "operationId": "ApiLayoutBuilderController_getGroupBy",
          "summary": "Get group-by",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupByQuery"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ValueLabelCollection"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Layout Builder"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/builder/layouts/remove": {
        "post": {
          "operationId": "ApiLayoutBuilderController_remove",
          "summary": "Remove Layouts",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NamesBody"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": ""
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Layout Builder"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/builder/layouts/recover": {
        "post": {
          "operationId": "ApiLayoutBuilderController_recover",
          "summary": "Recover Layouts",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NamesBody"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": ""
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Layout Builder"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/builder/mutation-layout/{objName}": {
        "get": {
          "operationId": "ApiLayoutBuilderController_getMutationLayout",
          "summary": "Get mutation layout",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "objName",
              "required": true,
              "in": "path",
              "description": "Object name",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "appName",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/ComponentResponse"
                    }
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Layout Builder"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/mo/{objName}/fields/{name}": {
        "get": {
          "operationId": "FieldController_getField",
          "summary": "Get field by name",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "objName",
              "required": true,
              "in": "path",
              "description": "Object name",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "name",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/FieldResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Object Builder"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/mo/{objName}/fields": {
        "get": {
          "operationId": "FieldController_getFields",
          "summary": "Get all fields for MO",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "objName",
              "required": true,
              "in": "path",
              "description": "Object name",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/FieldResponse"
                    }
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Object Builder"],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "post": {
          "operationId": "FieldController_changeField",
          "summary": "C/U/D field",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "objName",
              "required": true,
              "in": "path",
              "description": "Object name",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FieldDto"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/FieldResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Object Builder"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/mo/{objName}/fields/{name}/record-pages": {
        "get": {
          "operationId": "FieldController_getObjRecordPages",
          "summary": "Get available record pages of a field",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "objName",
              "required": true,
              "in": "path",
              "description": "Object name",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "name",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ObjRecordLayoutResponse"
                    }
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Object Builder"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/mo/{objName}": {
        "get": {
          "operationId": "ObjectController_getObject",
          "summary": "Get MO by name",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "objName",
              "required": true,
              "in": "path",
              "description": "Object name",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ObjectResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Object Builder"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/mo/search": {
        "post": {
          "operationId": "ObjectController_getObjects",
          "summary": "Get MOs",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectListQuery"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ObjectCollection"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Object Builder"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/mo": {
        "post": {
          "operationId": "ObjectController_changeObject",
          "summary": "C/U/D MO",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectDto"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ObjectResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Object Builder"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/mo/remove": {
        "post": {
          "operationId": "ObjectController_remove",
          "summary": "Remove Objects",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NamesBody"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": ""
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Object Builder"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/mo/recover": {
        "post": {
          "operationId": "ObjectController_recover",
          "summary": "Recover Objects",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NamesBody"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": ""
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Object Builder"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/mo/{objName}/audit-logs": {
        "get": {
          "operationId": "ObjectController_objLogs",
          "summary": "Get audit logs",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "objName",
              "required": true,
              "in": "path",
              "description": "Object name",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/AuditLogResponse"
                    }
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Object Builder"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/mo/{objName}/rules/{name}": {
        "get": {
          "operationId": "ValidationRuleController_getRule",
          "summary": "Get rule by name",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "objName",
              "required": true,
              "in": "path",
              "description": "Object name",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "name",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ValidationRuleResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Object Builder"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/mo/{objName}/rules": {
        "get": {
          "operationId": "ValidationRuleController_getRules",
          "summary": "Get rules",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "objName",
              "required": true,
              "in": "path",
              "description": "Object name",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ValidationRuleResponse"
                    }
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Object Builder"],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "post": {
          "operationId": "ValidationRuleController_changeRule",
          "summary": "C/U/D rule",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "objName",
              "required": true,
              "in": "path",
              "description": "Object name",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RuleDto"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ValidationRuleResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Object Builder"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/events/search": {
        "post": {
          "operationId": "EventObjectController_getObjects",
          "summary": "Get Events",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventListQuery"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ObjectCollection"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Object Builder - Event"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/events/{objName}": {
        "get": {
          "operationId": "EventObjectController_getObject",
          "summary": "Get MO by name",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "objName",
              "required": true,
              "in": "path",
              "description": "Object name",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ObjectResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Object Builder - Event"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/events": {
        "post": {
          "operationId": "EventObjectController_changeObject",
          "summary": "C/U/D MO",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectDto"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ObjectResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Object Builder - Event"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/events/remove": {
        "post": {
          "operationId": "EventObjectController_remove",
          "summary": "Remove Objects",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NamesBody"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": ""
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Object Builder - Event"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/events/recover": {
        "post": {
          "operationId": "EventObjectController_recover",
          "summary": "Recover Objects",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NamesBody"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": ""
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Object Builder - Event"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/events/{objName}/audit-logs": {
        "get": {
          "operationId": "EventObjectController_objLogs",
          "summary": "Get audit logs",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "objName",
              "required": true,
              "in": "path",
              "description": "Object name",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/AuditLogResponse"
                    }
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Object Builder - Event"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/events/{objName}/fields": {
        "post": {
          "operationId": "EventFieldController_changeField",
          "summary": "C/U/D field",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "objName",
              "required": true,
              "in": "path",
              "description": "Object name",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventFieldDto"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/FieldResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Object Builder - Event"],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "get": {
          "operationId": "EventFieldController_getFields",
          "summary": "Get all fields for MO",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "objName",
              "required": true,
              "in": "path",
              "description": "Object name",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/FieldResponse"
                    }
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Object Builder - Event"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/events/{objName}/fields/{name}": {
        "get": {
          "operationId": "EventFieldController_getField",
          "summary": "Get field by name",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "objName",
              "required": true,
              "in": "path",
              "description": "Object name",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "name",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/FieldResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Object Builder - Event"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/events/{objName}/fields/{name}/record-pages": {
        "get": {
          "operationId": "EventFieldController_getObjRecordPages",
          "summary": "Get available record pages of a field",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "objName",
              "required": true,
              "in": "path",
              "description": "Object name",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "name",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ObjRecordLayoutResponse"
                    }
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Object Builder - Event"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/integrations/mo/{objName}": {
        "get": {
          "operationId": "ExternalObjectController_getObject",
          "summary": "Get MO by name",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "objName",
              "required": true,
              "in": "path",
              "description": "Object name",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ObjectResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Object Builder - External"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/integrations/mo/search": {
        "post": {
          "operationId": "ExternalObjectController_getObjects",
          "summary": "Get MOs",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectListQuery"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ObjectCollection"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Object Builder - External"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/integrations/mo": {
        "post": {
          "operationId": "ExternalObjectController_changeObject",
          "summary": "C/U/D MO",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectDto"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ObjectResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Object Builder - External"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/integrations/mo/remove": {
        "post": {
          "operationId": "ExternalObjectController_remove",
          "summary": "Remove Objects",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NamesBody"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": ""
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Object Builder - External"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/integrations/mo/recover": {
        "post": {
          "operationId": "ExternalObjectController_recover",
          "summary": "Recover Objects",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NamesBody"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": ""
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Object Builder - External"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/integrations/mo/{objName}/audit-logs": {
        "get": {
          "operationId": "ExternalObjectController_objLogs",
          "summary": "Get audit logs",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "objName",
              "required": true,
              "in": "path",
              "description": "Object name",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/AuditLogResponse"
                    }
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Object Builder - External"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/integrations/mo/{objName}/fields": {
        "post": {
          "operationId": "ExternalFieldController_changeField",
          "summary": "C/U/D field",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "objName",
              "required": true,
              "in": "path",
              "description": "Object name",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExtFieldDto"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/FieldResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Object Builder - External"],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "get": {
          "operationId": "ExternalFieldController_getFields",
          "summary": "Get all fields for MO",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "objName",
              "required": true,
              "in": "path",
              "description": "Object name",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/FieldResponse"
                    }
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Object Builder - External"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/integrations/mo/{objName}/fields/{name}": {
        "get": {
          "operationId": "ExternalFieldController_getField",
          "summary": "Get field by name",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "objName",
              "required": true,
              "in": "path",
              "description": "Object name",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "name",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/FieldResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Object Builder - External"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/integrations/mo/{objName}/fields/{name}/record-pages": {
        "get": {
          "operationId": "ExternalFieldController_getObjRecordPages",
          "summary": "Get available record pages of a field",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "objName",
              "required": true,
              "in": "path",
              "description": "Object name",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "name",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ObjRecordLayoutResponse"
                    }
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Object Builder - External"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/builder/data-types/{objName}": {
        "get": {
          "operationId": "CommonMetaBuilderController_getDataTypes",
          "summary": "Get Data Types",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "objName",
              "required": true,
              "in": "path",
              "description": "Object name",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/DataTypeExtendedResponse"
                    }
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Object Builder"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/builder/rollup-operations": {
        "get": {
          "operationId": "CommonMetaBuilderController_getRollupOperations",
          "summary": "Get Rollup Operations",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/DataTypeRollupOperations"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Object Builder"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/builder/obj": {
        "get": {
          "operationId": "CommonMetaBuilderController_getObjects",
          "summary": "Get objects collection",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "offset",
              "required": false,
              "in": "query",
              "schema": {
                "default": 0,
                "type": "number"
              }
            },
            {
              "name": "limit",
              "required": false,
              "in": "query",
              "schema": {
                "default": 20,
                "type": "number"
              }
            },
            {
              "name": "searchText",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "type",
              "required": false,
              "in": "query",
              "schema": {
                "enum": ["object", "event"],
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ObjectCollection"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Object Builder"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/builder/obj/{objName}/schema": {
        "get": {
          "operationId": "CommonMetaBuilderController_getSchema",
          "summary": "Get object schema",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "objName",
              "required": true,
              "in": "path",
              "description": "Object name",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ObjectSchemaResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Object Builder"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/builder/indirect-relations": {
        "get": {
          "operationId": "CommonMetaBuilderController_getAvailableIndirectRelations",
          "summary": "Get data for indirect relation field",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "searchText",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/IndirectRelationResponse"
                    }
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Object Builder"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/builder/schema-viewer": {
        "get": {
          "operationId": "CommonMetaBuilderController_getObjectsSchema",
          "summary": "Get schemas for schema viewer",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/SchemaViewerResponse"
                    }
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Object Builder"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/mo/{objName}/extended": {
        "get": {
          "operationId": "ExtendedObjectController_getExtendedObjects",
          "summary": "Get extended objects",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "objName",
              "required": true,
              "in": "path",
              "description": "Object name",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ExtendedObjectResponse"
                    }
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Object Builder - Extend"],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "post": {
          "operationId": "ExtendedObjectController_changeExtendedObject",
          "summary": "C/U/D extended",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "objName",
              "required": true,
              "in": "path",
              "description": "Object name",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExtendedObjectDto"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ExtendedObjectResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Object Builder - Extend"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/mo/{objName}/extended/{extendedName}": {
        "get": {
          "operationId": "ExtendedObjectController_getExtendedObject",
          "summary": "Get extended by Name",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "objName",
              "required": true,
              "in": "path",
              "description": "Object name",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "extendedName",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ExtendedObjectResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Object Builder - Extend"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/mo/{objName}/extended/{extendedName}/fields": {
        "post": {
          "operationId": "ExtendedObjectController_changeField",
          "summary": "C/U/D extended field",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "objName",
              "required": true,
              "in": "path",
              "description": "Object name",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "extendedName",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FieldDto"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/FieldResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Object Builder - Extend"],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "get": {
          "operationId": "ExtendedObjectController_getExtendedFields",
          "summary": "Get extended fields",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "objName",
              "required": true,
              "in": "path",
              "description": "Object name",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "extendedName",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/FieldResponse"
                    }
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Object Builder - Extend"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/mo/{objName}/extended/{extendedName}/fields/{name}": {
        "get": {
          "operationId": "ExtendedObjectController_getField",
          "summary": "Get extended field by name",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "objName",
              "required": true,
              "in": "path",
              "description": "Object name",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "extendedName",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "name",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/FieldResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Object Builder - Extend"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/mo/{objName}/indexes": {
        "get": {
          "operationId": "ObjectIndexController_getIndexes",
          "summary": "Get indexes config",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "objName",
              "required": true,
              "in": "path",
              "description": "Object name",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ObjectIndexResponse"
                    }
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Object Builder"],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "post": {
          "operationId": "ObjectIndexController_createIndex",
          "summary": "Create Index config",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "objName",
              "required": true,
              "in": "path",
              "description": "Object name",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectIndexDto"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ObjectIndexResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Object Builder"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/mo/{objName}/indexes/{name}": {
        "get": {
          "operationId": "ObjectIndexController_getFields",
          "summary": "Get index by id",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "objName",
              "required": true,
              "in": "path",
              "description": "Object name",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "name",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ObjectIndexResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Object Builder"],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "delete": {
          "operationId": "ObjectIndexController_deleteIndex",
          "summary": "Delete Index config",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "objName",
              "required": true,
              "in": "path",
              "description": "Object name",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "name",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Object Builder"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/integrations/mo/{objName}/data-sources": {
        "get": {
          "operationId": "ApiExtObjDataSrcController_getDataSourceConfigs",
          "summary": "Get source configs",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "objName",
              "required": true,
              "in": "path",
              "description": "Object name",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ObjectDataSourceResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Object Builder - External"],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "put": {
          "operationId": "ApiExtObjDataSrcController_changeDataSourceConfig",
          "summary": "Update source config",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "objName",
              "required": true,
              "in": "path",
              "description": "Object name",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateDataSourceDto"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ObjectDataSourceResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Object Builder - External"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/integrations/mo/{objName}/data-sources/{action}": {
        "get": {
          "operationId": "ApiExtObjDataSrcController_getDataSourceConfigByAction",
          "summary": "Get source config by action",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "objName",
              "required": true,
              "in": "path",
              "description": "Object name",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "action",
              "required": true,
              "in": "path",
              "schema": {
                "enum": ["list", "item", "create", "update", "delete"],
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ExtObjectDataSourceResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Object Builder - External"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/integrations/mo/{objName}/data-sources/{action}/test": {
        "post": {
          "operationId": "ApiExtObjDataSrcController_testDataSourceRequest",
          "summary": "Test source config by action",
          "description": "Body should be all variable inputMap keys with their actual values",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "objName",
              "required": true,
              "in": "path",
              "description": "Object name",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "action",
              "required": true,
              "in": "path",
              "schema": {
                "enum": ["list", "item", "create", "update", "delete"],
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TestDataSourceRequestResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Object Builder - External"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/pick-lists/{name}": {
        "get": {
          "operationId": "PickListController_getPickList",
          "summary": "Get pick list by name",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "name",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PickListResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Object Builder - Pick List"],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "put": {
          "operationId": "PickListController_updatePickList",
          "summary": "Api to update pick list",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "name",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdatePickListDto"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PickListResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Object Builder - Pick List"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/pick-lists/search": {
        "post": {
          "operationId": "PickListController_getPickLists",
          "summary": "Get pick lists",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PickListQueryParams"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PickListCollection"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Object Builder - Pick List"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/pick-lists": {
        "post": {
          "operationId": "PickListController_createPickList",
          "summary": "Api to create new pick list",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePickListDto"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PickListResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Object Builder - Pick List"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/pick-lists/{name}/activate": {
        "put": {
          "operationId": "PickListController_activatePickList",
          "summary": "Api to active pick list",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "name",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PickListResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Object Builder - Pick List"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/pick-lists/{name}/deactivate": {
        "put": {
          "operationId": "PickListController_deactivatePickList",
          "summary": "Api to de-active pick list",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "name",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PickListResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Object Builder - Pick List"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/pick-lists/{name}/audit-logs": {
        "get": {
          "operationId": "PickListController_getAuditLogs",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "name",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/AuditLogResponse"
                    }
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Object Builder - Pick List"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/pick-lists/remove": {
        "post": {
          "operationId": "PickListController_remove",
          "summary": "Remove PickLists",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NamesBody"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": ""
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Object Builder - Pick List"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/pick-lists/recover": {
        "post": {
          "operationId": "PickListController_recover",
          "summary": "Recover PickLists",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NamesBody"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": ""
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Object Builder - Pick List"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/notifications/templates": {
        "get": {
          "operationId": "NotiTemplateController_getNotifications",
          "summary": "Get noti templates",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "offset",
              "required": false,
              "in": "query",
              "schema": {
                "default": 0,
                "type": "number"
              }
            },
            {
              "name": "limit",
              "required": false,
              "in": "query",
              "schema": {
                "default": 20,
                "type": "number"
              }
            },
            {
              "name": "searchText",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "channel",
              "required": false,
              "in": "query",
              "schema": {
                "enum": ["in-app", "email"],
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NotiTemplateCollection"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Notification"],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "post": {
          "operationId": "NotiTemplateController_createTemplate",
          "summary": "Create noti template",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotiTemplateCreateDto"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NotiTemplateResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Notification"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/notifications/templates/{name}": {
        "put": {
          "operationId": "NotiTemplateController_updateTemplate",
          "summary": "Update noti template",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "name",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotiTemplateUpdateDto"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NotiTemplateResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Notification"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/integrations/builtins": {
        "get": {
          "operationId": "BuiltinActionController_list",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "offset",
              "required": false,
              "in": "query",
              "schema": {
                "default": 0,
                "type": "number"
              }
            },
            {
              "name": "limit",
              "required": false,
              "in": "query",
              "schema": {
                "default": 20,
                "type": "number"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BuiltinActionNodeCollectionResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Integrations"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/integrations/builtins/{name}": {
        "get": {
          "operationId": "BuiltinActionController_getDetail",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "name",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "version",
              "required": false,
              "in": "query",
              "schema": {
                "type": "number"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BuiltinActionNodeDetailResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Integrations"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/integrations/builtins/{name}/dynamic-values/search": {
        "post": {
          "operationId": "BuiltinActionController_searchDynamicValues",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "name",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBuiltinActionDynamicValuesDto"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BuiltinActionNodeListResult"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Integrations"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/integrations/builtins/icons/statics": {
        "get": {
          "operationId": "BuiltinActionController_getIcon",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "iconPath",
              "required": true,
              "in": "query",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Integrations"]
        }
      },
      "/info": {
        "get": {
          "operationId": "ApiSystemController_getInfo",
          "summary": "Get system information",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SystemGeneralInfo"
                  }
                }
              }
            }
          },
          "tags": ["System"]
        }
      },
      "/locales": {
        "get": {
          "operationId": "ApiSystemController_getLocales",
          "summary": "Get locale list",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "tags": ["System"]
        }
      },
      "/translations/{language}": {
        "get": {
          "operationId": "ApiSystemController_getLanguageTranslations",
          "summary": "Get language translations",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "language",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/LanguageTranslationsResponse"
                  }
                }
              }
            }
          },
          "tags": ["System"]
        }
      },
      "/users": {
        "get": {
          "operationId": "ApiUsersController_getUsers",
          "summary": "Get Users",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "offset",
              "required": false,
              "in": "query",
              "schema": {
                "default": 0,
                "type": "number"
              }
            },
            {
              "name": "limit",
              "required": false,
              "in": "query",
              "schema": {
                "default": 20,
                "type": "number"
              }
            },
            {
              "name": "sortOrder",
              "required": false,
              "in": "query",
              "schema": {
                "enum": ["ASC", "DESC"],
                "type": "string"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "searchText",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UserCollection"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["User Management"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/users/search": {
        "post": {
          "operationId": "ApiUsersController_searchUsers",
          "summary": "Search Users",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchUserDto"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UserCollection"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["User Management"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/users/{id}": {
        "get": {
          "operationId": "ApiUsersController_getUser",
          "summary": "Get user by id",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "id",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UserResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["User Management"],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "put": {
          "operationId": "ApiUsersController_updateUser",
          "summary": "Update user",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "id",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateUserDto"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UserResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["User Management"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/users/{id}/audit-logs": {
        "get": {
          "operationId": "ApiUsersController_getUserLogs",
          "summary": "Get user logs",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "id",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/AuditLogResponse"
                    }
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["User Management"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/users/invite": {
        "post": {
          "operationId": "ApiUsersController_inviteUser",
          "summary": "Invite user",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InviteUserDto"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UserResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["User Management"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/users/{id}/activate": {
        "post": {
          "operationId": "ApiUsersController_activateUser",
          "summary": "Active user",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "id",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "204": {
              "description": ""
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["User Management"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/users/{id}/deactivate": {
        "post": {
          "operationId": "ApiUsersController_deactivateUser",
          "summary": "Inactive user",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "id",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "204": {
              "description": ""
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["User Management"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/users/{id}/profiles": {
        "put": {
          "operationId": "ApiUsersController_assignProfiles",
          "summary": "Assign profiles for users",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "id",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssignUserProfilesDto"
                }
              }
            }
          },
          "responses": {
            "204": {
              "description": ""
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["User Management"],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "get": {
          "operationId": "ApiUsersController_getUserAssignedProfiles",
          "summary": "Get user assigned profiles",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "id",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ProfileResponse"
                    }
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["User Management"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/organization": {
        "get": {
          "operationId": "ApiOrgsController_getOrg",
          "summary": "Get current organization info",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/OrganizationResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["System"],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "put": {
          "operationId": "ApiOrgsController_updateOrg",
          "summary": "Update current organization info",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateOrgDto"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/OrganizationResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "412": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/ActionRequiredException"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "tags": ["System"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/organization/environments": {
        "get": {
          "operationId": "ApiOrgsController_getOrgEnvs",
          "summary": "Get organization environments",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "additionalProperties": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "boolean"
                        },
                        {
                          "type": "number"
                        }
                      ]
                    }
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["System"],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "put": {
          "operationId": "ApiOrgsController_updateOrgEnvs",
          "summary": "Update organization environments",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateOrgEnvDto"
                }
              }
            }
          },
          "responses": {
            "204": {
              "description": ""
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "412": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/ActionRequiredException"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "tags": ["System"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/organization/license": {
        "post": {
          "operationId": "ApiOrgsController_updateOrgLicense",
          "summary": "Update organization license",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateOrgLicenseDto"
                }
              }
            }
          },
          "responses": {
            "204": {
              "description": ""
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "412": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/ActionRequiredException"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "tags": ["System"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/organization/translations/{language}": {
        "post": {
          "operationId": "ApiOrgsController_upsertLanguageTranslations",
          "summary": "Upsert language translations",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "language",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpsertLanguageTranslationsDto"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": ""
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["System"],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "delete": {
          "operationId": "ApiOrgsController_deleteLanguageTranslations",
          "summary": "Delete language translations",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "language",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "204": {
              "description": ""
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "412": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/ActionRequiredException"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "tags": ["System"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/tags": {
        "get": {
          "operationId": "ApiTagController_getTags",
          "summary": "Get tags",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "offset",
              "required": false,
              "in": "query",
              "schema": {
                "default": 0,
                "type": "number"
              }
            },
            {
              "name": "limit",
              "required": false,
              "in": "query",
              "schema": {
                "default": 20,
                "type": "number"
              }
            },
            {
              "name": "searchText",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TagCollection"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["System - Tags"],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "post": {
          "operationId": "ApiTagController_createTag",
          "summary": "Create tag",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateTagDto"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TagResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["System - Tags"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/tags/{name}": {
        "get": {
          "operationId": "ApiTagController_getTag",
          "summary": "Get tag by name",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "name",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TagResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["System - Tags"],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "put": {
          "operationId": "ApiTagController_updateTag",
          "summary": "Update tag",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "name",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateTagDto"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TagResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["System - Tags"],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "delete": {
          "operationId": "ApiTagController_deleteTag",
          "summary": "Delete tag",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "name",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["System - Tags"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/tags/{name}/audit-logs": {
        "get": {
          "operationId": "ApiTagController_getLogs",
          "summary": "Get tags audit logs",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "name",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/AuditLogResponse"
                    }
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["System - Tags"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/notifications/email-provider": {
        "get": {
          "operationId": "ApiEmailProviderController_getAll",
          "summary": "Get All Email Providers",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/SMTPEmailProviderResponse"
                    }
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Notification"],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "post": {
          "operationId": "ApiEmailProviderController_create",
          "summary": "Create Email Provider",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SMTPEmailProviderCreateDto"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SMTPEmailProviderResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Notification"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/notifications/email-provider/{name}": {
        "get": {
          "operationId": "ApiEmailProviderController_getOne",
          "summary": "Get One Email Provider",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "name",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SMTPEmailProviderResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Notification"],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "put": {
          "operationId": "ApiEmailProviderController_update",
          "summary": "Update Email Provider",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "name",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SMTPEmailProvideUpdateDto"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SMTPEmailProviderResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Notification"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/current-version": {
        "get": {
          "operationId": "MigrationAdapterController_getTenantVersion",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetTenantVersion"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Migration"]
        }
      },
      "/migration": {
        "post": {
          "operationId": "MigrationAdapterController_scheduleSingleMigration",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MigrationJobDto"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/MigrationJobResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Migration"]
        },
        "delete": {
          "operationId": "MigrationAdapterController_removePendingJob",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/MigrationJobResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Migration"]
        },
        "get": {
          "operationId": "MigrationAdapterController_getLatestJob",
          "parameters": [
            {
              "name": "x-nc-lang",
              "in": "header",
              "description": "current user language",
              "schema": {
                "type": "string",
                "enum": ["en", "vi"],
                "default": "en"
              }
            },
            {
              "name": "x-nc-tenant",
              "in": "header",
              "description": "org tenant",
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            {
              "name": "x-nc-payload",
              "in": "header",
              "description": "Payload with one of JSON.stringify(object) then Base64",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-date",
              "in": "header",
              "description": "Timestamp of current date time",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-signature",
              "in": "header",
              "description": "Required fields: algorithm, headers, signature. Algorithm only support HmacSHA256, headers: all header need to sign seperated by space, signature: HMAC SHA-256 of headers value seperated by \"\n\" in base64 format.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-nc-digest",
              "in": "header",
              "description": "HMAC SHA-256 of the body content in base64 format, use JSON.stringify to convert body to string, add \"SHA-256=\" at the beginning",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/MigrationJobResponse"
                  }
                }
              }
            },
            "401": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NuclentErrorsResponse"
                  }
                }
              }
            }
          },
          "tags": ["Migration"]
        }
      },
      "/error-templates/{language}": {
        "get": {
          "operationId": "ApiErrorTemplateController_getErrorTemplates",
          "summary": "Get list error templates",
          "description": "For development purpose",
          "parameters": [
            {
              "name": "language",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Map [error-code]: Error message in English",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "tags": ["Public"]
        }
      },
      "/logs/actions": {
        "get": {
          "operationId": "ApiErrorTemplateController_getActions",
          "summary": "Get actions",
          "parameters": [],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "tags": ["Public"]
        }
      },
      "/media": {
        "get": {
          "operationId": "ApiDeprecatedMediaManagerController_getMediaInOrg",
          "summary": "Get media in Org (Deprecated)",
          "deprecated": true,
          "parameters": [
            {
              "name": "offset",
              "required": false,
              "in": "query",
              "schema": {
                "default": 0,
                "type": "number"
              }
            },
            {
              "name": "limit",
              "required": false,
              "in": "query",
              "schema": {
                "default": 20,
                "type": "number"
              }
            },
            {
              "name": "sortOrder",
              "required": false,
              "in": "query",
              "schema": {
                "enum": ["ASC", "DESC"],
                "type": "string"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "searchText",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/MediaCollection"
                  }
                }
              }
            }
          },
          "tags": ["Integrations", "Deprecated (Soon)"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/media/{id}": {
        "get": {
          "operationId": "ApiDeprecatedMediaManagerController_getSingleMedia",
          "summary": "Get media in Org by id (Deprecated)",
          "deprecated": true,
          "parameters": [
            {
              "name": "id",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/MediaResponse"
                  }
                }
              }
            }
          },
          "tags": ["Integrations", "Deprecated (Soon)"],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "put": {
          "operationId": "ApiDeprecatedMediaManagerController_updateMedia",
          "summary": "Update media in Org by id (Deprecated)",
          "deprecated": true,
          "parameters": [
            {
              "name": "id",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateMediaDto"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/MediaResponse"
                  }
                }
              }
            }
          },
          "tags": ["Integrations", "Deprecated (Soon)"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/media-config": {
        "post": {
          "operationId": "ApiDeprecatedMediaManagerController_createS3Config",
          "summary": "Config s3 credential for org (Deprecated)",
          "deprecated": true,
          "description": "Please use POST /i/s3/config",
          "parameters": [],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateS3ConfigDto"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": ""
            }
          },
          "tags": ["Integrations", "Deprecated (Soon)"],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "get": {
          "operationId": "ApiDeprecatedMediaManagerController_getS3Config",
          "summary": "Get s3 config of org (Deprecated)",
          "deprecated": true,
          "description": "Please use GET /i/s3/config",
          "parameters": [],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/S3ConfigResponse"
                  }
                }
              }
            }
          },
          "tags": ["Integrations", "Deprecated (Soon)"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/upload-file": {
        "post": {
          "operationId": "ApiDeprecatedMediaController_uploadFile",
          "summary": "Upload image (Deprecated)",
          "deprecated": true,
          "parameters": [],
          "requestBody": {
            "required": true,
            "content": {
              "multipart/form-data": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "file": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/MediaResponse"
                  }
                }
              }
            }
          },
          "tags": ["App Viewer", "Deprecated (Soon)"],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/assets/{orgId}/{id}": {
        "get": {
          "operationId": "ApiDeprecatedMediaPublicController_serveStaticFile",
          "summary": "Get image (Deprecated)",
          "deprecated": true,
          "description": "Api to server file as statics file",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "orgId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/octet-stream": {
                  "schema": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          },
          "tags": ["App Viewer", "Deprecated (Soon)"]
        }
      }
    },
    "info": {
      "title": "nFlow APIs",
      "description": "",
      "version": "v1.0",
      "contact": {}
    },
    "tags": [],
    "servers": [
      {
        "url": "https://nflow.dev.nuclent.com/v1"
      },
      {
        "url": "https://nflow.staging.nuclent.com/v1"
      }
    ],
    "components": {
      "securitySchemes": {
        "bearer": {
          "scheme": "bearer",
          "bearerFormat": "JWT",
          "type": "http"
        }
      },
      "schemas": {
        "NuclentErrorsResponse": {
          "type": "object",
          "properties": {
            "refId": {
              "type": "string"
            },
            "errors": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "trace": {
              "type": "object",
              "description": "Only available in dev mode"
            },
            "tracePayload": {
              "type": "object",
              "description": "Only available in dev mode"
            }
          },
          "required": ["errors"]
        },
        "CustomActionRequiredData": {
          "type": "object",
          "properties": {
            "code": {
              "type": "string"
            },
            "data": {
              "type": "object"
            }
          },
          "required": ["code"]
        },
        "ActionRequiredData": {
          "type": "object",
          "properties": {
            "payload": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/CustomActionRequiredData"
                }
              ]
            },
            "screenType": {
              "type": "string",
              "enum": ["custom"]
            },
            "refId": {
              "type": "string"
            }
          },
          "required": ["payload", "screenType", "refId"]
        },
        "ActionRequiredException": {
          "type": "object",
          "properties": {
            "code": {
              "type": "string",
              "enum": ["ACTION_REQUIRED"]
            },
            "message": {
              "type": "string",
              "enum": ["Action required"]
            },
            "data": {
              "$ref": "#/components/schemas/ActionRequiredData"
            }
          },
          "required": ["code", "message", "data"]
        },
        "HeaderCustom": {
          "type": "object",
          "properties": {
            "lang": {
              "type": "string"
            },
            "refId": {
              "type": "string"
            },
            "action": {
              "type": "string",
              "enum": ["custom"]
            },
            "code": {
              "type": "string"
            },
            "data": {
              "type": "object"
            }
          },
          "required": ["lang", "refId", "action", "code", "data"]
        },
        "SSoLoginUrlResponse": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string"
            }
          },
          "required": ["url"]
        },
        "GetLoginTokenDto": {
          "type": "object",
          "properties": {
            "state": {
              "type": "string",
              "description": "State code received in get url api"
            },
            "code": {
              "type": "string"
            },
            "redirectUrl": {
              "type": "string"
            }
          },
          "required": ["state", "code"]
        },
        "LoginResponse": {
          "type": "object",
          "properties": {
            "accessToken": {
              "type": "string"
            },
            "refreshToken": {
              "type": "string"
            },
            "idToken": {
              "type": "string"
            }
          },
          "required": ["accessToken", "refreshToken"]
        },
        "RefreshTokenDto": {
          "type": "object",
          "properties": {
            "refreshToken": {
              "type": "string"
            }
          },
          "required": ["refreshToken"]
        },
        "MeProfileResponse": {
          "type": "object",
          "properties": {
            "objectsAccess": {
              "type": "object",
              "description": "Map<[objectName]: ProfileAccessResponse>",
              "additionalProperties": {
                "$ref": "#/components/schemas/ProfileAccessResponse"
              }
            },
            "featuresAccess": {
              "type": "object",
              "description": "Map<[objectName]: ProfileAccessResponse>",
              "additionalProperties": {
                "$ref": "#/components/schemas/ProfileAccessResponse"
              }
            },
            "name": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            }
          },
          "required": ["objectsAccess", "featuresAccess", "name", "displayName"]
        },
        "MeRoleResponse": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            }
          },
          "required": ["name", "displayName"]
        },
        "MeDivisionResponse": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            }
          },
          "required": ["name", "displayName"]
        },
        "RelatedDataField": {
          "type": "object",
          "properties": {
            "objName": {
              "type": "string"
            },
            "name": {
              "type": "string",
              "description": "Display content for relation selection box"
            }
          },
          "required": ["objName", "name"]
        },
        "FilterItem": {
          "type": "object",
          "properties": {
            "fieldName": {
              "type": "string"
            },
            "operator": {
              "enum": [
                "===",
                "!==",
                "isIn",
                "isNotIn",
                "notContains",
                "contains",
                "between",
                "<=",
                ">=",
                "<",
                ">",
                "isNull",
                "isNotNull"
              ],
              "type": "string"
            },
            "value": {
              "type": "string"
            }
          },
          "required": ["fieldName", "operator"]
        },
        "NuclentErrorResponse": {
          "type": "object",
          "properties": {
            "data": {
              "type": "object",
              "additionalProperties": true
            }
          }
        },
        "NumberFormat": {
          "type": "object",
          "properties": {
            "precision": {
              "type": "number"
            },
            "locale": {
              "type": "string"
            },
            "separator": {
              "type": "string"
            },
            "useShorthandNotation": {
              "type": "boolean"
            }
          }
        },
        "FieldSchema": {
          "type": "object",
          "properties": {
            "filters": {
              "type": "array",
              "items": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FilterItem"
                }
              }
            },
            "defaultValue": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                },
                {
                  "type": "object"
                },
                {
                  "type": "boolean"
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "array",
                  "items": {
                    "type": "number"
                  }
                },
                {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                },
                {
                  "type": "array",
                  "items": {
                    "type": "boolean"
                  }
                }
              ]
            },
            "onDelete": {
              "enum": ["noAction", "setNull", "cascade"],
              "type": "string",
              "description": "Use with relation field. 'SET_NULL' requires 'isRequired'=false"
            },
            "sensitivity": {
              "enum": ["none", "partial", "all"],
              "type": "string",
              "description": "Currently applied for short text only. 'Partial' will only expose the last 4 characters. 'All' will hide everything & return '****'"
            },
            "pickListLvl": {
              "type": "number",
              "minimum": 1,
              "description": "Levels of picklist items, only applicable for single selection"
            },
            "name": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "isSystemDefault": {
              "type": "boolean"
            },
            "typeName": {
              "enum": [
                "numeric",
                "text",
                "dateTime",
                "boolean",
                "pickList",
                "json",
                "generated",
                "currency",
                "externalRelation",
                "indirectRelation",
                "relation",
                "objectReference",
                "flowReference",
                "rollup",
                "formula",
                "file"
              ],
              "type": "string"
            },
            "subType": {
              "type": "string"
            },
            "value": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              ]
            },
            "targetObjId": {
              "type": "string"
            },
            "isRequired": {
              "type": "boolean"
            },
            "pickListName": {
              "type": "string"
            },
            "pickListId": {
              "type": "string"
            },
            "error": {
              "$ref": "#/components/schemas/NuclentErrorResponse"
            },
            "template": {
              "type": "string"
            },
            "isUnique": {
              "type": "boolean"
            },
            "isSearchable": {
              "type": "boolean"
            },
            "isSortable": {
              "type": "boolean"
            },
            "isReadOnly": {
              "type": "boolean"
            },
            "objectNames": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "includeExtended": {
              "type": "boolean"
            },
            "operation": {
              "type": "string",
              "enum": ["sum", "count"]
            },
            "fileSizeLimit": {
              "type": "number"
            },
            "fileTypes": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "application/pdf",
                  "application/msword",
                  "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                  "application/vnd.ms-excel",
                  "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
                  "application/vnd.ms-powerpoint",
                  "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                  "text/plain",
                  "text/csv",
                  "text/markdown",
                  "image/jpeg",
                  "image/png",
                  "image/gif",
                  "video/mp4",
                  "audio/mpeg",
                  "video/quicktime",
                  "video/x-flv",
                  "video/x-matroska",
                  "audio/x-ms-wma",
                  "audio/m4a",
                  "video/x-m4v"
                ]
              }
            },
            "numberFormat": {
              "$ref": "#/components/schemas/NumberFormat"
            },
            "formatter": {
              "type": "object"
            }
          },
          "required": ["name", "displayName", "isSystemDefault", "typeName", "isRequired"]
        },
        "ExtendedObjectSchemaResponse": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "fields": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/FieldSchema"
              }
            },
            "displayName": {
              "type": "string"
            }
          },
          "required": ["name", "fields", "displayName"]
        },
        "NameDisplayName": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            }
          },
          "required": ["name", "displayName"]
        },
        "PickListItemResponse": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            },
            "isDeprecated": {
              "type": "boolean"
            },
            "parentName": {
              "type": "string"
            },
            "attributes": {
              "type": "object"
            },
            "order": {
              "type": "number"
            }
          },
          "required": ["id", "name", "displayName", "isDeprecated", "order"]
        },
        "ObjectSchemaResponse": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "isExternal": {
              "type": "boolean"
            },
            "displayName": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "fields": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/FieldSchema"
              }
            },
            "related": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/components/schemas/RelatedDataField"
              }
            },
            "pickList": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PickListItemResponse"
                }
              }
            },
            "extended": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/components/schemas/ExtendedObjectSchemaResponse"
              }
            },
            "objectRefs": {
              "type": "object",
              "description": "<fieldName>: NameDisplayName[]",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/NameDisplayName"
                }
              }
            }
          },
          "required": ["id", "name", "isExternal", "displayName", "fields", "related"]
        },
        "MeUserInfo": {
          "type": "object",
          "properties": {
            "data": {
              "type": "object",
              "properties": {}
            },
            "schema": {
              "$ref": "#/components/schemas/ObjectSchemaResponse"
            }
          },
          "required": ["data", "schema"]
        },
        "MeOrgResponse": {
          "type": "object",
          "properties": {
            "defaultCurrencyCode": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            },
            "defaultLocale": {
              "type": "string"
            },
            "isLocked": {
              "type": "boolean"
            },
            "id": {
              "type": "number"
            }
          },
          "required": [
            "defaultCurrencyCode",
            "name",
            "displayName",
            "defaultLocale",
            "isLocked",
            "id"
          ]
        },
        "AssignedProfile": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            },
            "isPrimary": {
              "type": "boolean"
            }
          },
          "required": ["name", "displayName", "isPrimary"]
        },
        "MeResponse": {
          "type": "object",
          "properties": {
            "kcLogoutUrl": {
              "type": "string",
              "description": "Redirect to this url to logout, passing 'redirect_uri' as querystring to return to the application"
            },
            "profile": {
              "$ref": "#/components/schemas/MeProfileResponse"
            },
            "role": {
              "$ref": "#/components/schemas/MeRoleResponse"
            },
            "division": {
              "$ref": "#/components/schemas/MeDivisionResponse"
            },
            "userInfo": {
              "$ref": "#/components/schemas/MeUserInfo"
            },
            "kcProfileUrl": {
              "type": "string"
            },
            "preferLanguage": {
              "type": "string"
            },
            "organization": {
              "$ref": "#/components/schemas/MeOrgResponse"
            },
            "assignedProfiles": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/AssignedProfile"
              }
            },
            "version": {
              "type": "string"
            },
            "isMigrating": {
              "type": "boolean"
            },
            "id": {
              "type": "string"
            },
            "isActive": {
              "type": "boolean"
            },
            "username": {
              "type": "string"
            }
          },
          "required": [
            "kcLogoutUrl",
            "profile",
            "role",
            "division",
            "userInfo",
            "kcProfileUrl",
            "organization",
            "id",
            "isActive",
            "username"
          ]
        },
        "BaseAppViewerResponse": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "customProps": {
              "type": "object"
            }
          },
          "required": ["id", "name", "displayName"]
        },
        "PageInfoType": {
          "type": "object",
          "properties": {
            "limit": {
              "type": "number"
            },
            "offset": {
              "type": "number"
            },
            "total": {
              "type": "number"
            }
          },
          "required": ["limit", "offset", "total"]
        },
        "AppViewerCollection": {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/BaseAppViewerResponse"
              }
            },
            "pageInfo": {
              "$ref": "#/components/schemas/PageInfoType"
            }
          },
          "required": ["data", "pageInfo"]
        },
        "AppTabResponse": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            }
          },
          "required": ["id", "name", "displayName"]
        },
        "AppCredentialResponse": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            },
            "entered": {
              "type": "boolean"
            },
            "identifier": {
              "type": "string"
            }
          },
          "required": ["name", "displayName"]
        },
        "AppViewerResponse": {
          "type": "object",
          "properties": {
            "pages": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/AppTabResponse"
              }
            },
            "credentials": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/AppCredentialResponse"
              }
            },
            "id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "customProps": {
              "type": "object"
            }
          },
          "required": ["pages", "id", "name", "displayName"]
        },
        "RootProps": {
          "type": "object",
          "properties": {}
        },
        "ListProps": {
          "type": "object",
          "properties": {
            "filters": {
              "type": "array",
              "items": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FilterItem"
                }
              }
            },
            "objName": {
              "type": "string"
            },
            "fields": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "actions": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "pageSize": {
              "type": "number"
            },
            "limit": {
              "type": "number"
            }
          },
          "required": ["objName", "fields", "actions"]
        },
        "RecordProps": {
          "type": "object",
          "properties": {
            "isPrimary": {
              "type": "boolean"
            },
            "numOfCols": {
              "type": "number"
            },
            "fields": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "extended": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "actions": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "title": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "fileNames": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "showFileDropzones": {
              "type": "boolean"
            }
          },
          "required": ["fields", "actions"]
        },
        "RelatedProps": {
          "type": "object",
          "properties": {
            "filters": {
              "type": "array",
              "items": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FilterItem"
                }
              }
            },
            "objName": {
              "type": "string"
            },
            "fields": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "actions": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "pageSize": {
              "type": "number"
            },
            "limit": {
              "type": "number"
            },
            "relationField": {
              "type": "string",
              "description": "Relation field name: key of 'ObjectSchemaResponse.related' field. \n\nTo load data for this related list please use '/data/{objName}/{guid}/{relation}' with: \n\n  'objName' is record-page's objName \n\n  'guid' is current record's guid \n\n  'relation' is value of this field \n\n"
            },
            "title": {
              "type": "string"
            },
            "description": {
              "type": "string"
            }
          },
          "required": ["objName", "fields", "actions", "relationField"]
        },
        "SectionProps": {
          "type": "object",
          "properties": {
            "columns": {
              "type": "array",
              "items": {
                "type": "number"
              }
            },
            "title": {
              "type": "string"
            }
          },
          "required": ["columns"]
        },
        "TabProps": {
          "type": "object",
          "properties": {
            "type": {
              "enum": ["default", "filled"],
              "type": "string"
            },
            "showUnderlineGg": {
              "type": "boolean"
            }
          },
          "required": ["type", "showUnderlineGg"]
        },
        "BoardModeAttributes": {
          "type": "object",
          "properties": {}
        },
        "ListV2Props": {
          "type": "object",
          "properties": {
            "objName": {
              "type": "string"
            },
            "fields": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "actions": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "displayMode": {
              "type": "string",
              "enum": ["table", "board", "card", "calendar"]
            },
            "attributes": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/BoardModeAttributes"
                }
              ]
            }
          },
          "required": ["objName", "fields", "actions", "displayMode", "attributes"]
        },
        "TriggerObjectInputMap": {
          "type": "object",
          "properties": {
            "guid": {
              "type": "string"
            },
            "parentGuid": {
              "type": "string"
            },
            "parentName": {
              "type": "string"
            },
            "relationField": {
              "type": "string"
            }
          }
        },
        "TriggerObjectProps": {
          "type": "object",
          "properties": {
            "title": {
              "type": "string"
            },
            "type": {
              "type": "string",
              "enum": ["object"]
            },
            "action": {
              "enum": ["new", "get", "edit", "delete", "share", "managed"],
              "type": "string"
            },
            "objName": {
              "type": "string"
            },
            "inputMap": {
              "$ref": "#/components/schemas/TriggerObjectInputMap"
            }
          },
          "required": ["type", "action", "objName", "inputMap"]
        },
        "TriggerFlowProps": {
          "type": "object",
          "properties": {
            "title": {
              "type": "string"
            },
            "type": {
              "type": "string",
              "enum": ["flow"]
            },
            "flowName": {
              "type": "string"
            },
            "inputMap": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": ["type", "flowName", "inputMap"]
        },
        "ListV2GroupResponse": {
          "type": "object",
          "properties": {
            "value": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                },
                {
                  "type": "object"
                },
                {
                  "type": "boolean"
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "array",
                  "items": {
                    "type": "number"
                  }
                },
                {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                },
                {
                  "type": "array",
                  "items": {
                    "type": "boolean"
                  }
                }
              ]
            },
            "label": {
              "type": "string"
            }
          },
          "required": ["label"]
        },
        "ProfileAccess": {
          "type": "object",
          "properties": {
            "create": {
              "type": "boolean"
            },
            "read": {
              "type": "boolean"
            },
            "update": {
              "type": "boolean"
            },
            "delete": {
              "type": "boolean"
            }
          },
          "required": ["create", "read", "update", "delete"]
        },
        "ComponentResponse": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "label": {
              "type": "string"
            },
            "type": {
              "type": "string"
            },
            "component": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "ObjectList",
                    "ObjectListV2",
                    "DataTable",
                    "RecordDetail",
                    "Flow",
                    "Button",
                    "RelatedList",
                    "Section",
                    "Tab",
                    "RelatedDetail",
                    "FirstRelationDetails"
                  ]
                },
                {
                  "type": "string"
                }
              ]
            },
            "props": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/RootProps"
                },
                {
                  "$ref": "#/components/schemas/ListProps"
                },
                {
                  "$ref": "#/components/schemas/RecordProps"
                },
                {
                  "$ref": "#/components/schemas/RelatedProps"
                },
                {
                  "$ref": "#/components/schemas/SectionProps"
                },
                {
                  "$ref": "#/components/schemas/TabProps"
                },
                {
                  "$ref": "#/components/schemas/ListV2Props"
                },
                {
                  "$ref": "#/components/schemas/TriggerObjectProps"
                },
                {
                  "$ref": "#/components/schemas/TriggerFlowProps"
                }
              ]
            },
            "children": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/components/schemas/ObjectSchemaResponse"
            },
            "groupBys": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ListV2GroupResponse"
              }
            },
            "profileAccess": {
              "$ref": "#/components/schemas/ProfileAccess"
            }
          },
          "required": ["id", "label", "type", "component", "props", "children"]
        },
        "ObjectLayoutResponse": {
          "type": "object",
          "properties": {
            "script": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/components/schemas/ComponentResponse"
              }
            },
            "content": {
              "type": "object"
            },
            "id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "objectName": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            }
          },
          "required": ["script", "id", "name", "displayName"]
        },
        "CtxFlowResponse": {
          "type": "object",
          "properties": {
            "ctxId": {
              "type": "string"
            },
            "type": {
              "type": "string"
            },
            "data": {
              "type": "object"
            }
          },
          "required": ["ctxId", "type", "data"]
        },
        "FieldSourceQuery": {
          "type": "object",
          "properties": {
            "offset": {
              "type": "number",
              "default": 0
            },
            "limit": {
              "type": "number",
              "default": 10,
              "minimum": 1
            },
            "sortOrder": {
              "enum": ["ASC", "DESC"],
              "type": "string"
            },
            "parent": {
              "type": "string",
              "description": "For field type:\n      - pick-list: parent's name\n      - relation: parent's guid\n      "
            },
            "parentField": {
              "type": "string",
              "description": "For field type:\n      - relation: parent's field name\n      "
            },
            "onlyStored": {
              "type": "boolean"
            },
            "nameField": {
              "type": "string"
            },
            "resSchema": {
              "type": "string"
            },
            "sortBy": {
              "type": "string"
            },
            "searchText": {
              "type": "string"
            }
          }
        },
        "FieldSourceResponse": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            },
            "additional": {
              "type": "object",
              "additionalProperties": true
            }
          },
          "required": ["name", "displayName", "additional"]
        },
        "FieldSourceCollection": {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/FieldSourceResponse"
              }
            },
            "pageInfo": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PageInfoType"
                },
                {
                  "$ref": "#/components/schemas/DataPageInfo"
                }
              ]
            }
          },
          "required": ["data", "pageInfo"]
        },
        "DataFileResponse": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "size": {
              "type": "number"
            },
            "mimeType": {
              "type": "string"
            },
            "source": {
              "type": "string"
            }
          },
          "required": ["id", "name", "size", "mimeType", "source"]
        },
        "SearchDataDto": {
          "type": "object",
          "properties": {
            "limit": {
              "type": "number",
              "default": 20
            },
            "sortOrder": {
              "enum": ["ASC", "DESC"],
              "type": "string"
            },
            "nextFromCursor": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ]
            },
            "prevFromCursor": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ]
            },
            "offset": {
              "type": "number",
              "default": 0
            },
            "filters": {
              "type": "array",
              "items": {
                "required": false,
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FilterItem"
                }
              }
            },
            "type": {
              "default": "offset",
              "enum": ["offset", "cursor"],
              "type": "string"
            },
            "select": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "searchFields": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "sortBy": {
              "type": "string"
            },
            "searchText": {
              "type": "string"
            }
          },
          "required": ["filters"]
        },
        "DataMediaResponse": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            },
            "size": {
              "type": "number"
            },
            "url": {
              "type": "string"
            },
            "mimeType": {
              "type": "string"
            },
            "tagName": {
              "type": "string"
            }
          },
          "required": ["id", "name", "displayName", "size", "url", "mimeType"]
        },
        "DataResponseMetadata": {
          "type": "object",
          "properties": {
            "origin": {
              "type": "object",
              "description": "{ fieldName: origin/rawValue }",
              "additionalProperties": true
            },
            "media": {
              "type": "object",
              "deprecated": true,
              "description": "{ [mediaId]: [DataMediaResponse] }",
              "additionalProperties": {
                "$ref": "#/components/schemas/DataMediaResponse"
              }
            }
          },
          "required": ["origin"]
        },
        "BaseDataResponse": {
          "type": "object",
          "properties": {
            "objName": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "createdAt": {
              "format": "date-time",
              "type": "string"
            },
            "updatedAt": {
              "format": "date-time",
              "type": "string"
            },
            "guid": {
              "type": "string"
            },
            "currencyCode": {
              "type": "string"
            },
            "createdBy": {
              "type": "string"
            },
            "managedBy": {
              "type": "string"
            },
            "_order": {
              "type": "number"
            },
            "$metadata": {
              "$ref": "#/components/schemas/DataResponseMetadata"
            }
          },
          "required": [
            "objName",
            "name",
            "createdAt",
            "updatedAt",
            "guid",
            "currencyCode",
            "createdBy",
            "managedBy",
            "_order"
          ]
        },
        "BaseExtDataResponse": {
          "type": "object",
          "properties": {
            "objName": {
              "type": "string"
            },
            "externalId": {
              "type": "string"
            },
            "displayUrl": {
              "type": "string"
            },
            "$metadata": {
              "$ref": "#/components/schemas/DataResponseMetadata"
            }
          },
          "required": ["objName", "externalId"]
        },
        "DataPageInfo": {
          "type": "object",
          "properties": {
            "limit": {
              "type": "number"
            },
            "nextFromCursor": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ]
            },
            "prevFromCursor": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ]
            },
            "offset": {
              "type": "number"
            },
            "total": {
              "type": "string"
            },
            "hasMore": {
              "type": "boolean"
            }
          },
          "required": ["limit"]
        },
        "DataCollection": {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "oneOf": [
                  {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/BaseDataResponse"
                      },
                      {
                        "type": "object",
                        "additionalProperties": true
                      }
                    ]
                  },
                  {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/BaseExtDataResponse"
                      },
                      {
                        "type": "object",
                        "additionalProperties": true
                      }
                    ]
                  }
                ]
              }
            },
            "pageInfo": {
              "$ref": "#/components/schemas/DataPageInfo"
            }
          },
          "required": ["data", "pageInfo"]
        },
        "CountDataDto": {
          "type": "object",
          "properties": {
            "filters": {
              "type": "array",
              "items": {
                "required": false,
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FilterItem"
                }
              }
            },
            "searchText": {
              "type": "string"
            }
          },
          "required": ["filters"]
        },
        "CountRecordResponse": {
          "type": "object",
          "properties": {
            "count": {
              "type": "number"
            }
          },
          "required": ["count"]
        },
        "ExportDataDto": {
          "type": "object",
          "properties": {
            "sortOrder": {
              "enum": ["ASC", "DESC"],
              "type": "string"
            },
            "filters": {
              "type": "array",
              "items": {
                "required": false,
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FilterItem"
                }
              }
            },
            "fields": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "offset": {
              "type": "number"
            },
            "limit": {
              "type": "number"
            },
            "sortBy": {
              "type": "string"
            },
            "searchText": {
              "type": "string"
            },
            "select": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "searchFields": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "required": ["filters"]
        },
        "AuditUserResponse": {
          "type": "object",
          "properties": {
            "guid": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "username": {
              "type": "string"
            }
          },
          "required": ["guid", "name", "username"]
        },
        "AuditRelatedResource": {
          "type": "object",
          "properties": {
            "resourceType": {
              "type": "string",
              "enum": [
                "object-data",
                "object-data-comment",
                "pick-list",
                "object",
                "object-extended",
                "rule",
                "field",
                "indexing",
                "application",
                "layout",
                "user",
                "organization",
                "division",
                "flow",
                "flow-template",
                "flow-item",
                "flow-connection",
                "flow-note",
                "flow-variable",
                "action-meta",
                "credential",
                "profile",
                "role",
                "sharing-rule",
                "short-url",
                "flow-runner",
                "tag",
                "currency",
                "migration"
              ]
            },
            "resourceId": {
              "type": "string"
            },
            "resourceName": {
              "type": "string"
            },
            "resourceDisplay": {
              "type": "string"
            }
          },
          "required": ["resourceType", "resourceId"]
        },
        "AuditLogResponse": {
          "type": "object",
          "properties": {
            "user": {
              "$ref": "#/components/schemas/AuditUserResponse"
            },
            "message": {
              "type": "string"
            },
            "payload": {
              "type": "object"
            },
            "timestamp": {
              "type": "number"
            },
            "success": {
              "type": "boolean"
            },
            "related": {
              "$ref": "#/components/schemas/AuditRelatedResource"
            },
            "relatedExt": {
              "$ref": "#/components/schemas/AuditRelatedResource"
            },
            "resourceType": {
              "enum": [
                "object-data",
                "object-data-comment",
                "pick-list",
                "object",
                "object-extended",
                "rule",
                "field",
                "indexing",
                "application",
                "layout",
                "user",
                "organization",
                "division",
                "flow",
                "flow-template",
                "flow-item",
                "flow-connection",
                "flow-note",
                "flow-variable",
                "action-meta",
                "credential",
                "profile",
                "role",
                "sharing-rule",
                "short-url",
                "flow-runner",
                "tag",
                "currency",
                "migration"
              ],
              "type": "string"
            },
            "resourceId": {
              "type": "string"
            },
            "resourceName": {
              "type": "string"
            },
            "resourceDisplay": {
              "type": "string"
            }
          },
          "required": ["user", "message", "timestamp", "success", "resourceType", "resourceId"]
        },
        "AggregatedDataDto": {
          "type": "object",
          "properties": {
            "mapping": {
              "type": "object",
              "description": "<aggregation-field>: <schema-field-name>"
            },
            "pipeline": {
              "type": "array",
              "items": {
                "type": "object"
              }
            }
          },
          "required": ["pipeline"]
        },
        "AggregatedResponse": {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "additionalProperties": true
            },
            "raw": {
              "type": "array",
              "additionalProperties": true
            }
          },
          "required": ["data", "raw"]
        },
        "ManualSharingInput": {
          "type": "object",
          "properties": {
            "username": {
              "type": "string"
            },
            "accessType": {
              "type": "string",
              "enum": ["read-write", "read-only"]
            }
          },
          "required": ["username", "accessType"]
        },
        "UpsertRecordSharingDto": {
          "type": "object",
          "properties": {
            "manual": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ManualSharingInput"
              }
            }
          }
        },
        "BasicUserResponse": {
          "type": "object",
          "properties": {
            "guid": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "username": {
              "type": "string"
            }
          },
          "required": ["guid", "name", "username"]
        },
        "ManualSharingResponse": {
          "type": "object",
          "properties": {
            "user": {
              "$ref": "#/components/schemas/BasicUserResponse"
            },
            "accessType": {
              "type": "string",
              "enum": ["read-write", "read-only"]
            }
          },
          "required": ["user", "accessType"]
        },
        "RoleBasicResponse": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            },
            "id": {
              "type": "string"
            }
          },
          "required": ["name", "displayName", "id"]
        },
        "RecordSharingRoleResponse": {
          "type": "object",
          "properties": {
            "role": {
              "$ref": "#/components/schemas/RoleBasicResponse"
            },
            "accessType": {
              "type": "string",
              "enum": ["read-write", "read-only"]
            }
          },
          "required": ["role", "accessType"]
        },
        "RecordSharingResponse": {
          "type": "object",
          "properties": {
            "objectOwd": {
              "type": "string",
              "enum": ["PublicRead", "PublicReadWrite", "Private"]
            },
            "creator": {
              "$ref": "#/components/schemas/ManualSharingResponse"
            },
            "manager": {
              "$ref": "#/components/schemas/ManualSharingResponse"
            },
            "manual": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ManualSharingResponse"
              }
            },
            "hierarchyRoles": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/RecordSharingRoleResponse"
              }
            },
            "sharingRuleRoles": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/RecordSharingRoleResponse"
              }
            }
          },
          "required": [
            "objectOwd",
            "creator",
            "manager",
            "manual",
            "hierarchyRoles",
            "sharingRuleRoles"
          ]
        },
        "MentionResponse": {
          "type": "object",
          "properties": {
            "objName": {
              "type": "string"
            },
            "guid": {
              "type": "string"
            },
            "name": {
              "type": "string"
            }
          },
          "required": ["objName", "guid", "name"]
        },
        "OwnerResponse": {
          "type": "object",
          "properties": {
            "guid": {
              "type": "string"
            },
            "name": {
              "type": "string"
            }
          },
          "required": ["guid", "name"]
        },
        "DataCommentResponse": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "content": {
              "type": "string"
            },
            "attributes": {
              "type": "object"
            },
            "mentions": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/MentionResponse"
              }
            },
            "ownerId": {
              "type": "string"
            },
            "owner": {
              "$ref": "#/components/schemas/OwnerResponse"
            },
            "createdAt": {
              "format": "date-time",
              "type": "string"
            },
            "updatedAt": {
              "format": "date-time",
              "type": "string"
            },
            "isUpdated": {
              "type": "boolean"
            },
            "attachments": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/DataFileResponse"
              }
            }
          },
          "required": ["id", "ownerId", "owner", "createdAt", "updatedAt", "isUpdated"]
        },
        "DataCommentCollection": {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/DataCommentResponse"
              }
            },
            "pageInfo": {
              "$ref": "#/components/schemas/PageInfoType"
            }
          },
          "required": ["data", "pageInfo"]
        },
        "MentionDto": {
          "type": "object",
          "properties": {
            "objName": {
              "type": "string"
            },
            "guid": {
              "type": "string"
            }
          },
          "required": ["objName", "guid"]
        },
        "CreateCommentDto": {
          "type": "object",
          "properties": {
            "content": {
              "type": "string"
            },
            "attributes": {
              "type": "object"
            },
            "mentions": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/MentionDto"
              }
            },
            "attachments": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "UpdateCommentDto": {
          "type": "object",
          "properties": {
            "content": {
              "type": "string"
            },
            "attributes": {
              "type": "object"
            },
            "mentions": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/MentionDto"
              }
            },
            "attachments": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "DataUserSearchDto": {
          "type": "object",
          "properties": {
            "offset": {
              "type": "number",
              "default": 0
            },
            "limit": {
              "type": "number",
              "default": 20
            },
            "searchText": {
              "type": "string"
            }
          }
        },
        "DataUserResponse": {
          "type": "object",
          "properties": {
            "guid": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "username": {
              "type": "string"
            },
            "profileName": {
              "type": "string"
            },
            "roleName": {
              "type": "string"
            },
            "divisionName": {
              "type": "string"
            },
            "isActive": {
              "type": "boolean"
            },
            "preferLanguage": {
              "type": "string"
            }
          },
          "required": ["guid", "name", "username", "profileName", "roleName", "isActive"]
        },
        "DataUserCollection": {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/DataUserResponse"
              }
            },
            "pageInfo": {
              "$ref": "#/components/schemas/PageInfoType"
            }
          },
          "required": ["data", "pageInfo"]
        },
        "FlowExecutionResponse": {
          "type": "object",
          "properties": {
            "ctxId": {
              "type": "string"
            }
          },
          "required": ["ctxId"]
        },
        "SimpleContentValue": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": ["variable", "value"]
            },
            "value": {
              "type": "string"
            }
          },
          "required": ["type", "value"]
        },
        "InputProps": {
          "type": "object",
          "properties": {
            "label": {
              "type": "string"
            },
            "isRequired": {
              "type": "boolean"
            },
            "inputType": {
              "enum": [
                "string",
                "integer",
                "float",
                "date",
                "time",
                "date-time",
                "boolean",
                "object",
                "array"
              ],
              "type": "string"
            },
            "defaultValue": {
              "$ref": "#/components/schemas/SimpleContentValue"
            }
          },
          "required": ["label", "inputType"]
        },
        "SelectionProps": {
          "type": "object",
          "properties": {
            "label": {
              "type": "string"
            },
            "isRequired": {
              "type": "boolean"
            },
            "selectionType": {
              "enum": ["single", "multi"],
              "type": "string"
            },
            "isRadio": {
              "type": "boolean"
            },
            "options": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SimpleContentValue"
              }
            },
            "defaultIndexes": {
              "type": "array",
              "items": {
                "type": "number"
              }
            }
          },
          "required": ["label", "selectionType", "options"]
        },
        "DataPicklistProps": {
          "type": "object",
          "properties": {
            "label": {
              "type": "string"
            },
            "isRequired": {
              "type": "boolean"
            },
            "defaultValue": {
              "$ref": "#/components/schemas/SimpleContentValue"
            },
            "selectionType": {
              "enum": ["single", "multi"],
              "type": "string"
            },
            "data": {
              "$ref": "#/components/schemas/SimpleContentValue"
            },
            "options": {
              "deprecated": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "required": ["label", "selectionType", "data"]
        },
        "TextProps": {
          "type": "object",
          "properties": {
            "content": {
              "$ref": "#/components/schemas/SimpleContentValue"
            }
          },
          "required": ["content"]
        },
        "CsvExportProps": {
          "type": "object",
          "properties": {
            "params": {
              "$ref": "#/components/schemas/SimpleContentValue"
            },
            "objName": {
              "$ref": "#/components/schemas/SimpleContentValue"
            }
          },
          "required": ["objName"]
        },
        "PickListProps": {
          "type": "object",
          "properties": {
            "label": {
              "type": "string"
            },
            "isRequired": {
              "type": "boolean"
            },
            "selectionType": {
              "enum": ["single", "multi"],
              "type": "string"
            },
            "isRadio": {
              "type": "boolean"
            },
            "pickListName": {
              "type": "string"
            },
            "pickListItems": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/PickListItemResponse"
              }
            },
            "defaultValue": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "required": ["label", "selectionType", "pickListName"]
        },
        "EkycProps": {
          "type": "object",
          "properties": {
            "label": {
              "type": "string"
            },
            "isRequired": {
              "type": "boolean"
            }
          },
          "required": ["label"]
        },
        "BaseScreenFIComponent": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "type": {
              "type": "string"
            },
            "component": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "Input",
                    "Selection",
                    "DisplayText",
                    "PickList",
                    "CSVExport",
                    "Selection2",
                    "Ekyc",
                    "EkycTS"
                  ]
                },
                {
                  "type": "string"
                }
              ]
            },
            "props": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/RootProps"
                },
                {
                  "$ref": "#/components/schemas/InputProps"
                },
                {
                  "$ref": "#/components/schemas/SelectionProps"
                },
                {
                  "$ref": "#/components/schemas/DataPicklistProps"
                },
                {
                  "$ref": "#/components/schemas/TextProps"
                },
                {
                  "$ref": "#/components/schemas/CsvExportProps"
                },
                {
                  "$ref": "#/components/schemas/PickListProps"
                },
                {
                  "$ref": "#/components/schemas/EkycProps"
                }
              ]
            },
            "children": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "required": ["id", "name", "type", "component", "props", "children"]
        },
        "TagResponse": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            },
            "attributes": {
              "type": "object"
            }
          },
          "required": ["name", "displayName", "attributes"]
        },
        "PickListResponse": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "id": {
              "type": "string"
            },
            "isActive": {
              "type": "boolean"
            },
            "itemLabels": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "updatedAt": {
              "format": "date-time",
              "type": "string"
            },
            "viewAttributes": {
              "type": "object"
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/PickListItemResponse"
              }
            },
            "tags": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/TagResponse"
              }
            }
          },
          "required": ["name", "displayName", "id", "isActive", "itemLabels", "updatedAt", "items"]
        },
        "ScreenFlowItemDataSource": {
          "type": "object",
          "properties": {
            "pickLists": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/components/schemas/PickListResponse"
              }
            },
            "defaultInput": {
              "$ref": "#/components/schemas/BaseDataResponse"
            }
          },
          "required": ["pickLists"]
        },
        "ScreenItemRecordFormAttributes": {
          "type": "object",
          "properties": {
            "objectName": {
              "$ref": "#/components/schemas/SimpleContentValue"
            },
            "layoutMap": {
              "type": "object",
              "description": "Config mapping <objectName> : <layoutName>"
            },
            "defaultInput": {
              "type": "string",
              "description": "Default input variable name, can be object, record, string"
            }
          },
          "required": ["objectName"]
        },
        "ScreenItemAtsResponse": {
          "type": "object",
          "properties": {
            "recordForm": {
              "$ref": "#/components/schemas/ScreenItemRecordFormAttributes"
            }
          }
        },
        "ScreenTemplateResponse": {
          "type": "object",
          "properties": {
            "script": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/components/schemas/BaseScreenFIComponent"
              }
            },
            "content": {
              "type": "object",
              "additionalProperties": true
            },
            "ctx": {
              "type": "object",
              "additionalProperties": true
            },
            "initial": {
              "type": "object",
              "additionalProperties": true
            },
            "displayName": {
              "type": "string"
            },
            "dataSource": {
              "$ref": "#/components/schemas/ScreenFlowItemDataSource"
            },
            "attributes": {
              "$ref": "#/components/schemas/ScreenItemAtsResponse"
            }
          },
          "required": ["script", "content", "ctx", "displayName", "dataSource"]
        },
        "MediaResponse": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            },
            "size": {
              "type": "number"
            },
            "url": {
              "type": "string"
            },
            "mimeType": {
              "type": "string"
            },
            "referenceKey": {
              "type": "string"
            },
            "createdBy": {
              "type": "string"
            },
            "createdAt": {
              "format": "date-time",
              "type": "string"
            },
            "updatedAt": {
              "format": "date-time",
              "type": "string"
            }
          },
          "required": [
            "id",
            "name",
            "displayName",
            "size",
            "url",
            "mimeType",
            "referenceKey",
            "createdBy",
            "createdAt",
            "updatedAt"
          ]
        },
        "RunningContextMediaResponse": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string"
            }
          },
          "required": ["url"]
        },
        "Comment": {
          "type": "object",
          "properties": {
            "content": {
              "type": "string"
            },
            "id": {
              "type": "string"
            }
          },
          "required": ["content", "id"]
        },
        "OdRecord": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "guid": {
              "type": "string"
            }
          },
          "required": ["name", "guid"]
        },
        "CommentMentionNotiData": {
          "type": "object",
          "properties": {
            "comment": {
              "$ref": "#/components/schemas/Comment"
            },
            "objName": {
              "type": "string"
            },
            "record": {
              "$ref": "#/components/schemas/OdRecord"
            }
          },
          "required": ["comment", "objName", "record"]
        },
        "InAppTemplateResponse": {
          "type": "object",
          "properties": {
            "title": {
              "type": "string"
            },
            "body": {
              "type": "string"
            },
            "url": {
              "type": "string"
            },
            "action": {
              "enum": ["comment", "share"],
              "type": "string"
            },
            "isSystem": {
              "type": "boolean"
            }
          }
        },
        "NotificationActor": {
          "type": "object",
          "properties": {
            "guid": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "username": {
              "type": "string"
            }
          },
          "required": ["guid", "name", "username"]
        },
        "InAppNotificationResponse": {
          "type": "object",
          "properties": {
            "data": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/CommentMentionNotiData"
                },
                {
                  "type": "object"
                }
              ]
            },
            "id": {
              "type": "string"
            },
            "template": {
              "$ref": "#/components/schemas/InAppTemplateResponse"
            },
            "actor": {
              "$ref": "#/components/schemas/NotificationActor"
            },
            "createdAt": {
              "format": "date-time",
              "type": "string"
            },
            "updatedAt": {
              "format": "date-time",
              "type": "string"
            },
            "isRead": {
              "type": "boolean"
            }
          },
          "required": ["data", "id", "template", "createdAt", "updatedAt", "isRead"]
        },
        "NotificationCollection": {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/InAppNotificationResponse"
              }
            },
            "pageInfo": {
              "$ref": "#/components/schemas/PageInfoType"
            }
          },
          "required": ["data", "pageInfo"]
        },
        "GetUnreadCountResponse": {
          "type": "object",
          "properties": {
            "count": {
              "type": "number"
            }
          },
          "required": ["count"]
        },
        "GenShortUrlDto": {
          "type": "object",
          "properties": {
            "ttl": {
              "type": "number",
              "description": "TTL for the shorten url (seconds),\n  The shorten URL will not be expired if this value is not set"
            },
            "url": {
              "type": "string"
            },
            "code": {
              "type": "string"
            }
          },
          "required": ["url"]
        },
        "GenShortUrlResponse": {
          "type": "object",
          "properties": {
            "shortUrl": {
              "type": "string"
            },
            "code": {
              "type": "string"
            }
          },
          "required": ["shortUrl", "code"]
        },
        "RedirectResponse": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string"
            }
          },
          "required": ["url"]
        },
        "CreateMessageDto": {
          "type": "object",
          "properties": {
            "content": {
              "type": "string"
            }
          },
          "required": ["content"]
        },
        "CreateSessionDto": {
          "type": "object",
          "properties": {
            "flowName": {
              "type": "string"
            }
          },
          "required": ["flowName"]
        },
        "CreateSessionResponse": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string"
            }
          },
          "required": ["sessionId"]
        },
        "ChatAiMessageResponse": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "content": {
              "type": "string"
            },
            "createdAt": {
              "format": "date-time",
              "type": "string"
            },
            "role": {
              "type": "string",
              "enum": ["system", "model", "user"]
            }
          },
          "required": ["id", "createdAt", "role"]
        },
        "ChatHistoryCollectionCursor": {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ChatAiMessageResponse"
              }
            },
            "nextCursor": {
              "type": "string"
            },
            "prevCursor": {
              "type": "string"
            }
          },
          "required": ["data", "nextCursor", "prevCursor"]
        },
        "ReferenceItemDto": {
          "type": "object",
          "properties": {
            "resourceType": {
              "enum": ["object", "flow", "layout", "application", "action-metadata", "pick-list"],
              "type": "string"
            },
            "resourceName": {
              "type": "string"
            }
          },
          "required": ["resourceType", "resourceName"]
        },
        "ReferenceQuery": {
          "type": "object",
          "properties": {
            "entities": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ReferenceItemDto"
              }
            }
          },
          "required": ["entities"]
        },
        "ReferenceItem": {
          "type": "object",
          "properties": {
            "resourceType": {
              "enum": ["object", "flow", "layout", "application", "action-metadata", "pick-list"],
              "type": "string"
            },
            "resourceName": {
              "type": "string"
            },
            "resourceId": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            }
          },
          "required": ["resourceType", "resourceName", "resourceId", "displayName"]
        },
        "ReferenceResponseItem": {
          "type": "object",
          "properties": {
            "resourceType": {
              "enum": ["object", "flow", "layout", "application", "action-metadata", "pick-list"],
              "type": "string"
            },
            "references": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ReferenceItem"
              }
            },
            "resourceName": {
              "type": "string"
            },
            "resourceId": {
              "type": "string"
            }
          },
          "required": ["resourceType", "references", "resourceName", "resourceId"]
        },
        "ReferenceResponse": {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ReferenceResponseItem"
              }
            }
          },
          "required": ["data"]
        },
        "SearchAuditLogDto": {
          "type": "object",
          "properties": {
            "offset": {
              "type": "number",
              "default": 0
            },
            "limit": {
              "type": "number",
              "default": 20
            },
            "sortOrder": {
              "enum": ["ASC", "DESC"],
              "type": "string"
            },
            "sortBy": {
              "type": "string"
            },
            "searchText": {
              "type": "string"
            },
            "userIds": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "actions": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "resourceTypes": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "startDate": {
              "type": "string"
            },
            "endDate": {
              "type": "string"
            },
            "success": {
              "type": "boolean"
            }
          }
        },
        "AuditLogBasicResponse": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "userId": {
              "type": "string"
            },
            "user": {
              "$ref": "#/components/schemas/NameDisplayName"
            },
            "resourceType": {
              "type": "string"
            },
            "resourceId": {
              "type": "string"
            },
            "resourceName": {
              "type": "string"
            },
            "action": {
              "type": "string"
            },
            "success": {
              "type": "boolean"
            },
            "timestamp": {
              "type": "number"
            }
          },
          "required": [
            "id",
            "userId",
            "user",
            "resourceType",
            "resourceId",
            "resourceName",
            "action",
            "success",
            "timestamp"
          ]
        },
        "AuditLogBasicCollection": {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/AuditLogBasicResponse"
              }
            },
            "pageInfo": {
              "$ref": "#/components/schemas/PageInfoType"
            }
          },
          "required": ["data", "pageInfo"]
        },
        "ImportOptions": {
          "type": "object",
          "properties": {
            "onConflict": {
              "default": "skip",
              "enum": ["override", "skip"],
              "type": "string"
            }
          }
        },
        "ExportBodyDto": {
          "type": "object",
          "properties": {
            "objectNames": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "flowNames": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "layoutNames": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "applicationNames": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "pickListNames": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "name": {
              "type": "string"
            },
            "notiTemplates": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "secret": {
              "default": "no",
              "enum": ["no", "yes"],
              "type": "string"
            }
          }
        },
        "ImportExportResult": {
          "type": "object",
          "properties": {
            "status": {
              "type": "string",
              "enum": ["success", "fail", "skipped"]
            },
            "entityName": {
              "type": "string"
            },
            "errMessage": {
              "type": "string"
            }
          },
          "required": ["status"]
        },
        "ImportedExportedResponse": {
          "type": "object",
          "properties": {
            "pickLists": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ImportExportResult"
              }
            },
            "objects": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ImportExportResult"
              }
            },
            "actionMeta": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ImportExportResult"
              }
            },
            "layouts": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ImportExportResult"
              }
            },
            "flows": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ImportExportResult"
              }
            },
            "applications": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ImportExportResult"
              }
            },
            "appsLayouts": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ImportExportResult"
              }
            },
            "objectsLayouts": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ImportExportResult"
              }
            },
            "flowObjects": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ImportExportResult"
              }
            },
            "notiTemplates": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ImportExportResult"
              }
            }
          },
          "required": [
            "pickLists",
            "objects",
            "actionMeta",
            "layouts",
            "flows",
            "applications",
            "appsLayouts",
            "objectsLayouts",
            "flowObjects",
            "notiTemplates"
          ]
        },
        "JobResultResponse": {
          "type": "object",
          "properties": {
            "result": {
              "$ref": "#/components/schemas/ImportedExportedResponse"
            },
            "error": {
              "type": "string"
            }
          }
        },
        "BaseUserResponse": {
          "type": "object",
          "properties": {
            "guid": {
              "type": "string"
            },
            "name": {
              "type": "string"
            }
          },
          "required": ["guid", "name"]
        },
        "ImportExportJobResponse": {
          "type": "object",
          "properties": {
            "options": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ImportOptions"
                },
                {
                  "$ref": "#/components/schemas/ExportBodyDto"
                }
              ]
            },
            "id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "status": {
              "enum": ["processing", "completed", "failed"],
              "type": "string"
            },
            "createdAt": {
              "format": "date-time",
              "type": "string"
            },
            "result": {
              "$ref": "#/components/schemas/JobResultResponse"
            },
            "type": {
              "enum": ["import", "export"],
              "type": "string"
            },
            "requestedBy": {
              "type": "string"
            },
            "user": {
              "$ref": "#/components/schemas/BaseUserResponse"
            }
          },
          "required": [
            "options",
            "id",
            "name",
            "status",
            "createdAt",
            "type",
            "requestedBy",
            "user"
          ]
        },
        "ImportExportJobCollection": {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ImportExportJobResponse"
              }
            },
            "pageInfo": {
              "$ref": "#/components/schemas/PageInfoType"
            }
          },
          "required": ["data", "pageInfo"]
        },
        "ApplicationQuery": {
          "type": "object",
          "properties": {
            "offset": {
              "type": "number",
              "default": 0
            },
            "limit": {
              "type": "number",
              "default": 20
            },
            "sortOrder": {
              "enum": ["ASC", "DESC"],
              "type": "string"
            },
            "sortBy": {
              "type": "string"
            },
            "searchText": {
              "type": "string"
            },
            "tagNames": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "onlyDeleted": {
              "type": "boolean"
            }
          }
        },
        "ApplicationResponse": {
          "type": "object",
          "properties": {
            "customProps": {
              "type": "object"
            },
            "displayName": {
              "type": "string"
            },
            "tags": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/TagResponse"
              }
            },
            "credentials": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/NameDisplayName"
              }
            },
            "id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "createdAt": {
              "format": "date-time",
              "type": "string"
            },
            "updatedAt": {
              "format": "date-time",
              "type": "string"
            }
          },
          "required": ["displayName", "id", "name", "createdAt", "updatedAt"]
        },
        "ApplicationCollection": {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ApplicationResponse"
              }
            },
            "pageInfo": {
              "$ref": "#/components/schemas/PageInfoType"
            }
          },
          "required": ["data", "pageInfo"]
        },
        "AppProfileResponse": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            }
          },
          "required": ["id", "name", "displayName"]
        },
        "BuilderAppResponse": {
          "type": "object",
          "properties": {
            "customProps": {
              "type": "object"
            },
            "displayName": {
              "type": "string"
            },
            "tags": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/TagResponse"
              }
            },
            "credentials": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/NameDisplayName"
              }
            },
            "id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "createdAt": {
              "format": "date-time",
              "type": "string"
            },
            "updatedAt": {
              "format": "date-time",
              "type": "string"
            },
            "profiles": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/AppProfileResponse"
              }
            }
          },
          "required": ["displayName", "id", "name", "createdAt", "updatedAt", "profiles"]
        },
        "AppBuilderLayoutResponse": {
          "type": "object",
          "properties": {
            "script": {
              "type": "object"
            },
            "id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "type": {
              "type": "string",
              "enum": ["dashboard", "app-page", "record-page"]
            },
            "objectName": {
              "type": "string"
            },
            "createdAt": {
              "format": "date-time",
              "type": "string"
            },
            "updatedAt": {
              "format": "date-time",
              "type": "string"
            },
            "tags": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/TagResponse"
              }
            },
            "object": {
              "$ref": "#/components/schemas/NameDisplayName"
            }
          },
          "required": ["script", "id", "name", "displayName", "type", "createdAt", "updatedAt"]
        },
        "RecordProfilePage": {
          "type": "object",
          "properties": {
            "profiles": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/NameDisplayName"
              }
            },
            "recordPage": {
              "$ref": "#/components/schemas/AppBuilderLayoutResponse"
            }
          },
          "required": ["profiles", "recordPage"]
        },
        "AppBuilderPageResponse": {
          "type": "object",
          "properties": {
            "appPages": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/AppBuilderLayoutResponse"
              }
            },
            "recordPages": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/AppBuilderLayoutResponse"
              }
            },
            "recordProfilePages": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/RecordProfilePage"
              }
            }
          },
          "required": ["appPages", "recordPages", "recordProfilePages"]
        },
        "UpdateAppPageOrderDto": {
          "type": "object",
          "properties": {
            "layoutIds": {
              "description": "List layoutIds to update, in order",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "required": ["layoutIds"]
        },
        "CreateApplicationDto": {
          "type": "object",
          "properties": {
            "customProps": {
              "description": "Base64 custom properties",
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "object",
                  "additionalProperties": true
                }
              ]
            },
            "name": {
              "type": "string",
              "pattern": "nameRegex"
            },
            "displayName": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "profiles": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "tagNames": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "credentials": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "required": ["name", "displayName"]
        },
        "UpdateApplicationDto": {
          "type": "object",
          "properties": {
            "customProps": {
              "description": "Base64 custom properties",
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "object",
                  "additionalProperties": true
                }
              ]
            },
            "displayName": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "profiles": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "tagNames": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "credentials": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "NamesBody": {
          "type": "object",
          "properties": {
            "names": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "required": ["names"]
        },
        "ParentCtxResponse": {
          "type": "object",
          "properties": {
            "flowName": {
              "type": "string"
            },
            "flowType": {
              "type": "string",
              "enum": ["screen", "action", "time-based", "data", "event", "ai-chat"]
            },
            "exeCtxId": {
              "type": "string"
            },
            "eventName": {
              "type": "string"
            }
          },
          "required": ["flowName", "flowType", "exeCtxId"]
        },
        "ExecutionContextLogResponse": {
          "type": "object",
          "properties": {
            "ctx": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            },
            "parentCtx": {
              "$ref": "#/components/schemas/ParentCtxResponse"
            },
            "templateVersion": {
              "type": "string"
            },
            "status": {
              "type": "string",
              "enum": ["start", "finished"]
            },
            "execItemCounter": {
              "type": "number"
            }
          },
          "required": ["ctx", "templateVersion", "status", "execItemCounter"]
        },
        "DataFlowDebugDto": {
          "type": "object",
          "properties": {
            "guid": {
              "type": "string",
              "description": "Record guid to trigger data flow"
            },
            "payload": {
              "type": "object",
              "description": "Payload to update record in Record Update flow"
            }
          },
          "required": ["guid"]
        },
        "FlowDebugDto": {
          "type": "object",
          "properties": {
            "input": {
              "oneOf": [
                {
                  "type": "object",
                  "additionalProperties": true
                },
                {
                  "$ref": "#/components/schemas/DataFlowDebugDto"
                }
              ]
            },
            "triggerBy": {
              "type": "string",
              "description": "UserId to trigger flow when triggerType is By Profile"
            },
            "flowName": {
              "type": "string"
            },
            "version": {
              "type": "string"
            },
            "token": {
              "type": "string"
            }
          },
          "required": ["input", "flowName", "version"]
        },
        "DebugFlowExecutionResponse": {
          "type": "object",
          "properties": {
            "ctxId": {
              "type": "string"
            }
          },
          "required": ["ctxId"]
        },
        "RunAsUserResponse": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "username": {
              "type": "string"
            },
            "divisionId": {
              "type": "string"
            },
            "roleId": {
              "type": "string"
            },
            "profileId": {
              "type": "string"
            },
            "profileName": {
              "type": "string"
            }
          },
          "required": ["id", "username", "roleId", "profileId", "profileName"]
        },
        "DebugLogResponse": {
          "type": "object",
          "properties": {
            "itemName": {
              "type": "string"
            },
            "timestamp": {
              "type": "number"
            },
            "execTime": {
              "type": "number"
            },
            "execItemCounter": {
              "type": "number"
            },
            "status": {
              "type": "string",
              "enum": ["processing", "success", "error"]
            },
            "errMessage": {
              "type": "string"
            },
            "extraInfo": {
              "type": "object"
            },
            "output": {
              "type": "object"
            },
            "input": {
              "type": "object"
            },
            "branchOutCome": {
              "type": "string"
            },
            "runAsUser": {
              "$ref": "#/components/schemas/RunAsUserResponse"
            }
          },
          "required": ["timestamp", "execItemCounter"]
        },
        "FlowDebugLogsResponse": {
          "type": "object",
          "properties": {
            "status": {
              "type": "string",
              "enum": ["start", "finished"]
            },
            "logs": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/DebugLogResponse"
              }
            }
          },
          "required": ["status", "logs"]
        },
        "IntegratedResponse": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "isAvailable": {
              "type": "boolean"
            },
            "isConfigured": {
              "type": "boolean"
            }
          },
          "required": ["name", "displayName", "description", "isAvailable", "isConfigured"]
        },
        "IntegratedCollection": {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/IntegratedResponse"
              }
            },
            "pageInfo": {
              "$ref": "#/components/schemas/PageInfoType"
            }
          },
          "required": ["data", "pageInfo"]
        },
        "ResponseOutputType": {
          "type": "object",
          "properties": {
            "type": {
              "enum": ["string", "number", "object", "array", "boolean"],
              "type": "string"
            },
            "description": {
              "type": "string"
            }
          },
          "required": ["type"]
        },
        "HeaderInputType": {
          "type": "object",
          "properties": {
            "isRequired": {
              "type": "boolean"
            },
            "default": {
              "type": "string"
            },
            "description": {
              "type": "string"
            }
          },
          "required": ["isRequired"]
        },
        "RequestInputType": {
          "type": "object",
          "properties": {
            "type": {
              "enum": ["string", "number", "object", "array", "boolean"],
              "type": "string"
            },
            "default": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                },
                {
                  "type": "object"
                },
                {
                  "type": "boolean"
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "array",
                  "items": {
                    "type": "number"
                  }
                },
                {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                },
                {
                  "type": "array",
                  "items": {
                    "type": "boolean"
                  }
                }
              ]
            },
            "isRequired": {
              "type": "boolean"
            },
            "description": {
              "type": "string"
            }
          },
          "required": ["type", "isRequired"]
        },
        "InputMetadata": {
          "type": "object",
          "properties": {
            "header": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/components/schemas/HeaderInputType"
              }
            },
            "query": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/components/schemas/RequestInputType"
              }
            },
            "path": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "body": {
              "$ref": "#/components/schemas/RequestInputType"
            }
          },
          "required": ["header", "query", "path"]
        },
        "ActionMetadataResponse": {
          "type": "object",
          "properties": {
            "outputs": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/components/schemas/ResponseOutputType"
              }
            },
            "name": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            },
            "credential": {
              "$ref": "#/components/schemas/NameDisplayName"
            },
            "script": {
              "type": "string"
            },
            "path": {
              "type": "string"
            },
            "method": {
              "enum": ["post", "get", "put", "delete", "patch"],
              "type": "string"
            },
            "inputs": {
              "$ref": "#/components/schemas/InputMetadata"
            },
            "createdAt": {
              "format": "date-time",
              "type": "string"
            },
            "updatedAt": {
              "format": "date-time",
              "type": "string"
            },
            "timeout": {
              "type": "number"
            }
          },
          "required": ["name", "displayName", "credential", "createdAt", "updatedAt"]
        },
        "ActionMetadataCollection": {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ActionMetadataResponse"
              }
            },
            "pageInfo": {
              "$ref": "#/components/schemas/PageInfoType"
            }
          },
          "required": ["data", "pageInfo"]
        },
        "InputMapDto": {
          "type": "object",
          "properties": {
            "header": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/components/schemas/HeaderInputType"
              }
            },
            "query": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/components/schemas/RequestInputType"
              }
            },
            "body": {
              "$ref": "#/components/schemas/RequestInputType"
            }
          },
          "required": ["header", "query"]
        },
        "HttpActionMetaDto": {
          "type": "object",
          "properties": {
            "outputs": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/components/schemas/ResponseOutputType"
              }
            },
            "path": {
              "type": "string"
            },
            "method": {
              "type": "string",
              "enum": ["post", "get", "put", "delete", "patch"]
            },
            "inputs": {
              "$ref": "#/components/schemas/InputMapDto"
            }
          },
          "required": ["path", "method"]
        },
        "ActionMetadataCreateDto": {
          "type": "object",
          "properties": {
            "timeout": {
              "type": "number",
              "maximum": 900,
              "description": "Timeout in seconds"
            },
            "name": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "credentialName": {
              "type": "string"
            },
            "script": {
              "type": "string"
            },
            "httpConfig": {
              "$ref": "#/components/schemas/HttpActionMetaDto"
            }
          },
          "required": ["name", "displayName", "credentialName"]
        },
        "TestActionMetadataResponse": {
          "type": "object",
          "properties": {
            "args": {
              "type": "object"
            },
            "result": {
              "type": "object"
            }
          },
          "required": ["args", "result"]
        },
        "ActionMetadataUpdateDto": {
          "type": "object",
          "properties": {
            "timeout": {
              "type": "number",
              "maximum": 900,
              "description": "Timeout in seconds"
            },
            "script": {
              "type": "string"
            },
            "httpConfig": {
              "$ref": "#/components/schemas/HttpActionMetaDto"
            },
            "displayName": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "credentialName": {
              "type": "string"
            }
          }
        },
        "PasswordCredential": {
          "type": "object",
          "properties": {
            "username": {
              "type": "string"
            },
            "password": {
              "type": "string"
            }
          }
        },
        "Oauth2Credential": {
          "type": "object",
          "properties": {
            "additionalConfig": {
              "type": "object"
            },
            "endpoint": {
              "type": "string"
            },
            "clientId": {
              "type": "string"
            },
            "clientSecret": {
              "type": "string"
            }
          },
          "required": ["endpoint", "clientId", "clientSecret"]
        },
        "OAuth2CredentialData": {
          "type": "object",
          "properties": {
            "clientId": {
              "type": "string"
            },
            "clientSecret": {
              "type": "string"
            },
            "accessTokenUrl": {
              "type": "string"
            },
            "authUrl": {
              "type": "string"
            },
            "scope": {
              "type": "string"
            },
            "authQueryParameters": {
              "type": "string"
            },
            "grantType": {
              "type": "string",
              "enum": ["pkce", "authorizationCode", "clientCredentials"]
            }
          },
          "required": ["clientId", "accessTokenUrl", "grantType"]
        },
        "CredentialResponse": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "orgId": {
              "type": "number"
            },
            "name": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            },
            "url": {
              "type": "string"
            },
            "authProtocol": {
              "enum": ["password", "oauth", "kv", "oauth2"],
              "type": "string"
            },
            "identityType": {
              "enum": ["anon", "orgWide", "perUser"],
              "type": "string"
            },
            "credential": {
              "type": "object"
            },
            "authenticated": {
              "type": "boolean"
            },
            "nodeAttributes": {
              "type": "object"
            }
          },
          "required": ["id", "orgId", "name", "displayName", "url", "identityType", "credential"]
        },
        "CredentialCollection": {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/CredentialResponse"
              }
            },
            "pageInfo": {
              "$ref": "#/components/schemas/PageInfoType"
            }
          },
          "required": ["data", "pageInfo"]
        },
        "CredentialCreateDto": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "pattern": "/^\\{\\{env.([^\\s.,{}!]+)\\}\\}\\/?([^\\s.,{}!]+)?$|^https?:\\/\\/([^\\s$,!]+)$/",
              "default": "Current nflow tenant's host"
            },
            "credential": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PasswordCredential"
                },
                {
                  "$ref": "#/components/schemas/Oauth2Credential"
                },
                {
                  "$ref": "#/components/schemas/OAuth2CredentialData"
                },
                {
                  "type": "object",
                  "additionalProperties": true
                }
              ]
            },
            "name": {
              "type": "string",
              "pattern": "nameRegex"
            },
            "displayName": {
              "type": "string"
            },
            "identityType": {
              "type": "string",
              "enum": ["anon", "orgWide", "perUser"]
            },
            "authProtocol": {
              "type": "string",
              "enum": ["password", "oauth", "kv", "oauth2"]
            },
            "nodeAttributes": {
              "type": "object"
            }
          },
          "required": ["name", "displayName", "identityType"]
        },
        "CredentialUpdateDto": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "pattern": "/^\\{\\{env.([^\\s.,{}!]+)\\}\\}\\/?([^\\s.,{}!]+)?$|^https?:\\/\\/([^\\s$,!]+)$/",
              "default": "Current nflow tenant's host"
            },
            "credential": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PasswordCredential"
                },
                {
                  "$ref": "#/components/schemas/Oauth2Credential"
                },
                {
                  "$ref": "#/components/schemas/OAuth2CredentialData"
                },
                {
                  "type": "object",
                  "additionalProperties": true
                }
              ]
            },
            "displayName": {
              "type": "string"
            },
            "identityType": {
              "type": "string",
              "enum": ["anon", "orgWide", "perUser"]
            },
            "authProtocol": {
              "type": "string",
              "enum": ["password", "oauth", "kv", "oauth2"]
            },
            "nodeAttributes": {
              "type": "object"
            }
          }
        },
        "AuthUrlResponse": {
          "type": "object",
          "properties": {
            "authUrl": {
              "type": "string"
            }
          },
          "required": ["authUrl"]
        },
        "AuthCodeDto": {
          "type": "object",
          "properties": {
            "redirectUri": {
              "type": "string"
            },
            "code": {
              "type": "string"
            }
          },
          "required": ["code"]
        },
        "PerUserCredentialDataResponse": {
          "type": "object",
          "properties": {
            "cred": {
              "type": "string"
            },
            "id": {
              "type": "string"
            },
            "orgId": {
              "type": "number"
            },
            "name": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            },
            "url": {
              "type": "string"
            },
            "authProtocol": {
              "type": "string",
              "enum": ["password", "oauth", "kv", "oauth2"]
            },
            "identityType": {
              "type": "string",
              "enum": ["anon", "orgWide", "perUser"]
            },
            "authenticated": {
              "type": "boolean"
            },
            "nodeAttributes": {
              "type": "object"
            }
          },
          "required": ["cred", "id", "orgId", "name", "displayName", "url", "identityType"]
        },
        "NoteUserResponse": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "username": {
              "type": "string"
            },
            "id": {
              "type": "string"
            }
          },
          "required": ["name", "username", "id"]
        },
        "FlowNoteResponse": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "content": {
              "type": "string"
            },
            "owner": {
              "$ref": "#/components/schemas/NoteUserResponse"
            },
            "nodeAttributes": {
              "type": "object"
            },
            "createdAt": {
              "format": "date-time",
              "type": "string"
            }
          },
          "required": ["id", "content", "owner", "nodeAttributes"]
        },
        "CreateNoteDto": {
          "type": "object",
          "properties": {
            "content": {
              "type": "string"
            },
            "nodeAttributes": {
              "type": "object"
            }
          },
          "required": ["content"]
        },
        "UpdateNoteDto": {
          "type": "object",
          "properties": {
            "content": {
              "type": "string"
            },
            "nodeAttributes": {
              "type": "object"
            }
          },
          "required": ["content"]
        },
        "FlowInputVariableResponse": {
          "type": "object",
          "properties": {
            "attributes": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/FlowVariableAttributes"
                },
                {
                  "$ref": "#/components/schemas/FlowPickListVariableAttributes"
                },
                {
                  "$ref": "#/components/schemas/FlowRecordVariableAttributes"
                },
                {
                  "$ref": "#/components/schemas/FlowCollectionVariableAttributes"
                },
                {
                  "$ref": "#/components/schemas/FlowEventRecordVariableAttributes"
                }
              ]
            },
            "name": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "type": {
              "type": "string",
              "enum": [
                "boolean",
                "collection",
                "date",
                "date-time",
                "float",
                "integer",
                "json",
                "object",
                "pick-list",
                "record",
                "string",
                "time",
                "media-url",
                "null"
              ]
            }
          },
          "required": ["attributes", "name", "displayName", "type"]
        },
        "FlowVariableAttributes": {
          "type": "object",
          "properties": {
            "defaultValue": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                },
                {
                  "type": "object"
                },
                {
                  "type": "boolean"
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "array",
                  "items": {
                    "type": "number"
                  }
                },
                {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                },
                {
                  "type": "array",
                  "items": {
                    "type": "boolean"
                  }
                }
              ]
            }
          }
        },
        "FlowPickListVariableAttributes": {
          "type": "object",
          "properties": {
            "pickListName": {
              "type": "string"
            },
            "isMulti": {
              "type": "boolean"
            }
          },
          "required": ["pickListName"]
        },
        "FlowRecordVariableAttributes": {
          "type": "object",
          "properties": {
            "recordObjectName": {
              "type": "string"
            }
          },
          "required": ["recordObjectName"]
        },
        "FlowCollectionVariableAttributes": {
          "type": "object",
          "properties": {
            "itemType": {
              "type": "string",
              "enum": [
                "boolean",
                "date",
                "date-time",
                "float",
                "integer",
                "json",
                "record",
                "string",
                "time",
                "media-url",
                "null"
              ]
            },
            "recordObjectName": {
              "type": "string"
            }
          },
          "required": ["itemType"]
        },
        "FlowEventRecordVariableAttributes": {
          "type": "object",
          "properties": {
            "recordEventName": {
              "type": "string"
            }
          },
          "required": ["recordEventName"]
        },
        "FlowVariableResponse": {
          "type": "object",
          "properties": {
            "attributes": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/FlowVariableAttributes"
                },
                {
                  "$ref": "#/components/schemas/FlowPickListVariableAttributes"
                },
                {
                  "$ref": "#/components/schemas/FlowRecordVariableAttributes"
                },
                {
                  "$ref": "#/components/schemas/FlowCollectionVariableAttributes"
                },
                {
                  "$ref": "#/components/schemas/FlowEventRecordVariableAttributes"
                }
              ]
            },
            "name": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "isSystemDefault": {
              "type": "boolean"
            },
            "type": {
              "enum": [
                "boolean",
                "collection",
                "date",
                "date-time",
                "float",
                "integer",
                "json",
                "object",
                "pick-list",
                "record",
                "string",
                "time",
                "media-url",
                "null"
              ],
              "type": "string"
            },
            "isForInput": {
              "type": "boolean"
            },
            "isForOutput": {
              "type": "boolean"
            }
          },
          "required": [
            "attributes",
            "name",
            "displayName",
            "isSystemDefault",
            "type",
            "isForInput",
            "isForOutput"
          ]
        },
        "CreateFlowVariableDto": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "boolean",
                "collection",
                "date",
                "date-time",
                "float",
                "integer",
                "json",
                "pick-list",
                "record",
                "string",
                "time",
                "media-url",
                "null"
              ]
            },
            "attributes": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/FlowVariableAttributes"
                },
                {
                  "$ref": "#/components/schemas/FlowPickListVariableAttributes"
                },
                {
                  "$ref": "#/components/schemas/FlowRecordVariableAttributes"
                },
                {
                  "$ref": "#/components/schemas/FlowCollectionVariableAttributes"
                },
                {
                  "$ref": "#/components/schemas/FlowEventRecordVariableAttributes"
                }
              ]
            },
            "isForInput": {
              "type": "boolean",
              "default": false
            },
            "isForOutput": {
              "type": "boolean",
              "default": false
            },
            "name": {
              "type": "string",
              "pattern": "nameRegex"
            },
            "displayName": {
              "type": "string"
            }
          },
          "required": ["type", "attributes", "name", "displayName"]
        },
        "UpdateFlowVariableDto": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "boolean",
                "collection",
                "date",
                "date-time",
                "float",
                "integer",
                "json",
                "pick-list",
                "record",
                "string",
                "time",
                "media-url",
                "null"
              ]
            },
            "attributes": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/FlowVariableAttributes"
                },
                {
                  "$ref": "#/components/schemas/FlowPickListVariableAttributes"
                },
                {
                  "$ref": "#/components/schemas/FlowRecordVariableAttributes"
                },
                {
                  "$ref": "#/components/schemas/FlowCollectionVariableAttributes"
                },
                {
                  "$ref": "#/components/schemas/FlowEventRecordVariableAttributes"
                }
              ]
            },
            "isForInput": {
              "type": "boolean",
              "default": false
            },
            "isForOutput": {
              "type": "boolean",
              "default": false
            },
            "displayName": {
              "type": "string"
            }
          },
          "required": ["type", "attributes"]
        },
        "FlowVariableSchemaResponse": {
          "type": "object",
          "properties": {
            "type": {
              "enum": [
                "boolean",
                "collection",
                "date",
                "date-time",
                "float",
                "integer",
                "json",
                "object",
                "pick-list",
                "record",
                "string",
                "time",
                "media-url",
                "null"
              ],
              "type": "string"
            },
            "attributes": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/FlowPickListVariableAttributes"
                },
                {
                  "$ref": "#/components/schemas/FlowRecordVariableAttributes"
                },
                {
                  "$ref": "#/components/schemas/FlowCollectionVariableAttributes"
                },
                {
                  "$ref": "#/components/schemas/FlowEventRecordVariableAttributes"
                }
              ]
            },
            "name": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            }
          },
          "required": ["type", "name", "displayName"]
        },
        "ActionFlowItemAttributes": {
          "type": "object",
          "properties": {
            "actionMetadataName": {
              "type": "string"
            },
            "inputMap": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/components/schemas/SimpleContentValue"
              },
              "description": "key should be <location>.<name>"
            },
            "bodyAssetFields": {
              "type": "array",
              "items": {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "$ref": "#/components/schemas/BodyAssetField"
                  }
                ]
              },
              "description": "field path in input body which is binary asset field, should be 'parent.child' or { key: 'parent.child', transform: 'base64' }"
            }
          },
          "required": ["actionMetadataName"]
        },
        "BodyAssetField": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string"
            },
            "transform": {
              "type": "string",
              "enum": ["base64"]
            }
          },
          "required": ["key", "transform"]
        },
        "BundledActionMetadata": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            },
            "inputs": {
              "$ref": "#/components/schemas/InputMetadata"
            },
            "outputs": {
              "type": "object"
            }
          },
          "required": ["name", "displayName", "inputs", "outputs"]
        },
        "FlowItemMetadataResponse": {
          "type": "object",
          "properties": {
            "actionMetadata": {
              "$ref": "#/components/schemas/BundledActionMetadata"
            }
          }
        },
        "ActionFlowItemResponse": {
          "type": "object",
          "properties": {
            "$metadata": {
              "$ref": "#/components/schemas/FlowItemMetadataResponse"
            },
            "attributes": {
              "$ref": "#/components/schemas/ActionFlowItemAttributes"
            },
            "type": {
              "enum": ["action"],
              "type": "string",
              "default": "action"
            },
            "id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "nodeAttributes": {
              "type": "object"
            },
            "maxConnections": {
              "type": "number"
            },
            "hasFaultConnection": {
              "type": "boolean"
            }
          },
          "required": [
            "attributes",
            "type",
            "id",
            "name",
            "displayName",
            "description",
            "nodeAttributes",
            "maxConnections",
            "hasFaultConnection"
          ]
        },
        "ContentValue": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": ["variable", "value", "script"]
            },
            "value": {
              "type": "string"
            }
          },
          "required": ["type", "value"]
        },
        "AssignmentVariableDto": {
          "type": "object",
          "properties": {
            "variable": {
              "type": "string"
            },
            "sign": {
              "type": "string",
              "enum": [
                "assign",
                "add",
                "subTract",
                "addAtEnd",
                "addAtStart",
                "removeAll",
                "removeFirst",
                "removeLast",
                "removeAtIndex"
              ]
            },
            "value": {
              "$ref": "#/components/schemas/ContentValue"
            }
          },
          "required": ["variable", "sign", "value"]
        },
        "AssignmentFlowItemAttributes": {
          "type": "object",
          "properties": {
            "description": {
              "type": "string"
            },
            "assignmentVariables": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/AssignmentVariableDto"
              }
            }
          },
          "required": ["description", "assignmentVariables"]
        },
        "AssignmentFlowItemResponse": {
          "type": "object",
          "properties": {
            "$metadata": {
              "$ref": "#/components/schemas/FlowItemMetadataResponse"
            },
            "attributes": {
              "$ref": "#/components/schemas/AssignmentFlowItemAttributes"
            },
            "type": {
              "enum": ["assignment"],
              "type": "string",
              "default": "assignment"
            },
            "id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "nodeAttributes": {
              "type": "object"
            },
            "maxConnections": {
              "type": "number"
            },
            "hasFaultConnection": {
              "type": "boolean"
            }
          },
          "required": [
            "attributes",
            "type",
            "id",
            "name",
            "displayName",
            "description",
            "nodeAttributes",
            "maxConnections",
            "hasFaultConnection"
          ]
        },
        "CollectionAggregationFlowItemAttributes": {
          "type": "object",
          "properties": {
            "collectionVariableName": {
              "type": "string"
            },
            "fieldName": {
              "type": "string"
            },
            "method": {
              "type": "string",
              "enum": ["sum", "average", "max", "min", "count", "concat"]
            }
          },
          "required": ["collectionVariableName", "fieldName", "method"]
        },
        "CollectionAggregationFlowItemResponse": {
          "type": "object",
          "properties": {
            "$metadata": {
              "$ref": "#/components/schemas/FlowItemMetadataResponse"
            },
            "attributes": {
              "$ref": "#/components/schemas/CollectionAggregationFlowItemAttributes"
            },
            "type": {
              "enum": ["collection-aggregation"],
              "type": "string",
              "default": "collection-aggregation"
            },
            "id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "nodeAttributes": {
              "type": "object"
            },
            "maxConnections": {
              "type": "number"
            },
            "hasFaultConnection": {
              "type": "boolean"
            }
          },
          "required": [
            "attributes",
            "type",
            "id",
            "name",
            "displayName",
            "description",
            "nodeAttributes",
            "maxConnections",
            "hasFaultConnection"
          ]
        },
        "DecisionConditionType": {
          "type": "object",
          "properties": {
            "conditionNumber": {
              "type": "number",
              "minimum": 1
            },
            "sign": {
              "enum": [
                "===",
                "!==",
                "<=",
                ">=",
                "<",
                ">",
                "isNull",
                "isNotNull",
                "startsWith",
                "endsWith",
                "contains",
                "notContains",
                "wasSet"
              ],
              "type": "string"
            },
            "value": {
              "$ref": "#/components/schemas/SimpleContentValue"
            },
            "field": {
              "$ref": "#/components/schemas/SimpleContentValue"
            }
          },
          "required": ["conditionNumber", "sign", "field"]
        },
        "DecisionOutcomeData": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Api name of the decision outcome"
            },
            "displayName": {
              "type": "string"
            },
            "customConditionLogic": {
              "type": "string",
              "description": "Use AND, OR and parentheses to customize the logic. For example, (1 AND 2 AND 3) OR 4"
            },
            "conditionLogic": {
              "type": "string",
              "enum": ["and", "or", "custom"]
            },
            "conditions": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/DecisionConditionType"
              }
            }
          },
          "required": ["name", "displayName", "conditionLogic", "conditions"]
        },
        "DecisionFlowItemAttributes": {
          "type": "object",
          "properties": {
            "defaultOutcomeLabel": {
              "type": "string"
            },
            "order": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "outcomes": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/components/schemas/DecisionOutcomeData"
              }
            }
          },
          "required": ["defaultOutcomeLabel", "order", "outcomes"]
        },
        "DecisionFlowItemResponse": {
          "type": "object",
          "properties": {
            "$metadata": {
              "$ref": "#/components/schemas/FlowItemMetadataResponse"
            },
            "attributes": {
              "$ref": "#/components/schemas/DecisionFlowItemAttributes"
            },
            "type": {
              "enum": ["decision"],
              "type": "string",
              "default": "decision"
            },
            "id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "nodeAttributes": {
              "type": "object"
            },
            "maxConnections": {
              "type": "number"
            },
            "hasFaultConnection": {
              "type": "boolean"
            }
          },
          "required": [
            "attributes",
            "type",
            "id",
            "name",
            "displayName",
            "description",
            "nodeAttributes",
            "maxConnections",
            "hasFaultConnection"
          ]
        },
        "EmitEventFlowItemAttributes": {
          "type": "object",
          "properties": {
            "payload": {
              "type": "object",
              "description": "{ fieldName: SimpleContentValue }",
              "additionalProperties": {
                "$ref": "#/components/schemas/SimpleContentValue"
              }
            },
            "eventName": {
              "type": "string"
            }
          },
          "required": ["payload", "eventName"]
        },
        "EmitEventFlowItemResponse": {
          "type": "object",
          "properties": {
            "$metadata": {
              "$ref": "#/components/schemas/FlowItemMetadataResponse"
            },
            "attributes": {
              "$ref": "#/components/schemas/EmitEventFlowItemAttributes"
            },
            "type": {
              "enum": ["emit-event"],
              "type": "string",
              "default": "emit-event"
            },
            "id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "nodeAttributes": {
              "type": "object"
            },
            "maxConnections": {
              "type": "number"
            },
            "hasFaultConnection": {
              "type": "boolean"
            }
          },
          "required": [
            "attributes",
            "type",
            "id",
            "name",
            "displayName",
            "description",
            "nodeAttributes",
            "maxConnections",
            "hasFaultConnection"
          ]
        },
        "BuiltinActionFlowItemAttributes": {
          "type": "object",
          "properties": {
            "payload": {
              "type": "object",
              "description": "{ fieldName: SimpleContentValue }",
              "additionalProperties": {
                "$ref": "#/components/schemas/SimpleContentValue"
              }
            },
            "nodeName": {
              "type": "string"
            },
            "credential": {
              "type": "string"
            }
          },
          "required": ["payload", "nodeName", "credential"]
        },
        "BuiltinActionFlowItemResponse": {
          "type": "object",
          "properties": {
            "$metadata": {
              "$ref": "#/components/schemas/FlowItemMetadataResponse"
            },
            "attributes": {
              "$ref": "#/components/schemas/BuiltinActionFlowItemAttributes"
            },
            "type": {
              "enum": ["builtin-action"],
              "type": "string",
              "default": "builtin-action"
            },
            "id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "nodeAttributes": {
              "type": "object"
            },
            "maxConnections": {
              "type": "number"
            },
            "hasFaultConnection": {
              "type": "boolean"
            }
          },
          "required": [
            "attributes",
            "type",
            "id",
            "name",
            "displayName",
            "description",
            "nodeAttributes",
            "maxConnections",
            "hasFaultConnection"
          ]
        },
        "ImportRecordsConfig": {
          "type": "object",
          "properties": {
            "objectName": {
              "type": "string"
            },
            "payload": {
              "type": "object",
              "description": "{ fieldName: SimpleContentValue }",
              "additionalProperties": {
                "$ref": "#/components/schemas/SimpleContentValue"
              }
            }
          },
          "required": ["objectName"]
        },
        "ImportRecordsBatchPayload": {
          "type": "object",
          "properties": {
            "userRefId": {
              "$ref": "#/components/schemas/SimpleContentValue"
            },
            "batchCtx": {
              "$ref": "#/components/schemas/SimpleContentValue"
            }
          }
        },
        "ImportRecordsAttributes": {
          "type": "object",
          "properties": {
            "fileId": {
              "$ref": "#/components/schemas/SimpleContentValue"
            },
            "config": {
              "$ref": "#/components/schemas/ImportRecordsConfig"
            },
            "batchPayload": {
              "$ref": "#/components/schemas/ImportRecordsBatchPayload"
            }
          },
          "required": ["fileId", "config", "batchPayload"]
        },
        "ImportRecordsFlowItemResponse": {
          "type": "object",
          "properties": {
            "$metadata": {
              "$ref": "#/components/schemas/FlowItemMetadataResponse"
            },
            "attributes": {
              "$ref": "#/components/schemas/ImportRecordsAttributes"
            },
            "type": {
              "enum": ["import-records"],
              "type": "string",
              "default": "import-records"
            },
            "id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "nodeAttributes": {
              "type": "object"
            },
            "maxConnections": {
              "type": "number"
            },
            "hasFaultConnection": {
              "type": "boolean"
            }
          },
          "required": [
            "attributes",
            "type",
            "id",
            "name",
            "displayName",
            "description",
            "nodeAttributes",
            "maxConnections",
            "hasFaultConnection"
          ]
        },
        "LoopFlowItemAttributes": {
          "type": "object",
          "properties": {
            "collectionVariableName": {
              "type": "string"
            },
            "loopOrder": {
              "type": "string",
              "enum": ["ASC", "DESC"]
            }
          },
          "required": ["collectionVariableName", "loopOrder"]
        },
        "LoopFlowItemResponse": {
          "type": "object",
          "properties": {
            "$metadata": {
              "$ref": "#/components/schemas/FlowItemMetadataResponse"
            },
            "attributes": {
              "$ref": "#/components/schemas/LoopFlowItemAttributes"
            },
            "type": {
              "enum": ["loop"],
              "type": "string",
              "default": "loop"
            },
            "id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "nodeAttributes": {
              "type": "object"
            },
            "maxConnections": {
              "type": "number"
            },
            "hasFaultConnection": {
              "type": "boolean"
            }
          },
          "required": [
            "attributes",
            "type",
            "id",
            "name",
            "displayName",
            "description",
            "nodeAttributes",
            "maxConnections",
            "hasFaultConnection"
          ]
        },
        "RecordMediaUpdate": {
          "type": "object",
          "properties": {
            "mediaId": {
              "$ref": "#/components/schemas/SimpleContentValue"
            },
            "tagName": {
              "$ref": "#/components/schemas/SimpleContentValue"
            }
          },
          "required": ["mediaId", "tagName"]
        },
        "RecordMediaConfig": {
          "type": "object",
          "properties": {
            "update": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/RecordMediaUpdate"
              }
            },
            "remove": {
              "description": "Config tagName to remove",
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SimpleContentValue"
              }
            }
          }
        },
        "ShareToUser": {
          "type": "object",
          "properties": {
            "username": {
              "description": "SSO username",
              "allOf": [
                {
                  "$ref": "#/components/schemas/SimpleContentValue"
                }
              ]
            },
            "accessType": {
              "type": "string",
              "enum": ["read-write", "read-only"]
            }
          },
          "required": ["username", "accessType"]
        },
        "ShareToUserConfig": {
          "type": "object",
          "properties": {
            "update": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ShareToUser"
              }
            },
            "remove": {
              "description": "Config username to remove",
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SimpleContentValue"
              }
            }
          }
        },
        "RecordSharingConfig": {
          "type": "object",
          "properties": {
            "shareToUsers": {
              "$ref": "#/components/schemas/ShareToUserConfig"
            }
          }
        },
        "RecordCreateConfig": {
          "type": "object",
          "properties": {
            "objectName": {
              "type": "string"
            },
            "payload": {
              "type": "object",
              "description": "{ fieldName: SimpleContentValue }",
              "additionalProperties": {
                "$ref": "#/components/schemas/SimpleContentValue"
              }
            },
            "storeGuidToVar": {
              "type": "string",
              "description": "String Variable to store created guid"
            }
          },
          "required": ["objectName", "payload"]
        },
        "DataCreateAttributes": {
          "type": "object",
          "properties": {
            "variableName": {
              "type": "string"
            },
            "media": {
              "$ref": "#/components/schemas/RecordMediaConfig"
            },
            "managedBy": {
              "deprecated": true,
              "allOf": [
                {
                  "$ref": "#/components/schemas/SimpleContentValue"
                }
              ]
            },
            "sharing": {
              "$ref": "#/components/schemas/RecordSharingConfig"
            },
            "config": {
              "$ref": "#/components/schemas/RecordCreateConfig"
            }
          }
        },
        "RecordCreateFlowItemResponse": {
          "type": "object",
          "properties": {
            "$metadata": {
              "$ref": "#/components/schemas/FlowItemMetadataResponse"
            },
            "attributes": {
              "$ref": "#/components/schemas/DataCreateAttributes"
            },
            "type": {
              "enum": ["create"],
              "type": "string",
              "default": "create"
            },
            "id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "nodeAttributes": {
              "type": "object"
            },
            "maxConnections": {
              "type": "number"
            },
            "hasFaultConnection": {
              "type": "boolean"
            }
          },
          "required": [
            "attributes",
            "type",
            "id",
            "name",
            "displayName",
            "description",
            "nodeAttributes",
            "maxConnections",
            "hasFaultConnection"
          ]
        },
        "RecordQueryCondition": {
          "type": "object",
          "properties": {
            "fieldName": {
              "type": "string"
            },
            "sign": {
              "enum": [
                "equals",
                "notEquals",
                "isNull",
                "isNotNull",
                "isIn",
                "isNotIn",
                "isLike",
                "isILike",
                "isMoreThan",
                "isLessThan",
                "isMoreThanOrEqual",
                "isLessThanOrEqual"
              ],
              "type": "string"
            },
            "value": {
              "$ref": "#/components/schemas/SimpleContentValue"
            }
          },
          "required": ["fieldName", "sign"]
        },
        "RecordDeleteConfig": {
          "type": "object",
          "properties": {
            "conditions": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/RecordQueryCondition"
              }
            },
            "conditionLogic": {
              "enum": ["and", "or"],
              "type": "string"
            },
            "objectName": {
              "type": "string"
            }
          },
          "required": ["conditions", "conditionLogic", "objectName"]
        },
        "DataDeleteAttributes": {
          "type": "object",
          "properties": {
            "variableName": {
              "type": "string"
            },
            "config": {
              "$ref": "#/components/schemas/RecordDeleteConfig"
            }
          }
        },
        "RecordDeleteFlowItemResponse": {
          "type": "object",
          "properties": {
            "$metadata": {
              "$ref": "#/components/schemas/FlowItemMetadataResponse"
            },
            "attributes": {
              "$ref": "#/components/schemas/DataDeleteAttributes"
            },
            "type": {
              "enum": ["delete"],
              "type": "string",
              "default": "delete"
            },
            "id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "nodeAttributes": {
              "type": "object"
            },
            "maxConnections": {
              "type": "number"
            },
            "hasFaultConnection": {
              "type": "boolean"
            }
          },
          "required": [
            "attributes",
            "type",
            "id",
            "name",
            "displayName",
            "description",
            "nodeAttributes",
            "maxConnections",
            "hasFaultConnection"
          ]
        },
        "RecordReadConfig": {
          "type": "object",
          "properties": {
            "conditions": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/RecordQueryCondition"
              }
            },
            "conditionLogic": {
              "enum": ["and", "or"],
              "type": "string"
            },
            "objectName": {
              "type": "string"
            },
            "sortBy": {
              "type": "string",
              "default": "createdAt",
              "description": "FieldName to sort the result"
            },
            "sortOrder": {
              "enum": ["ASC", "DESC"],
              "type": "string",
              "default": "ASC"
            },
            "getOptions": {
              "enum": ["one", "all"],
              "type": "string",
              "description": "Get and store all or only the first record"
            },
            "getFieldNames": {
              "description": "Selected FieldNames to store from Get Result, stores all fields by default",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "storeDataToVar": {
              "type": "string",
              "description": "Record/Record Collection Variable to store from Get Result"
            },
            "take": {
              "type": "number",
              "maximum": 100,
              "minimum": 1,
              "description": "Number of records to take",
              "default": 100
            }
          },
          "required": ["conditions", "conditionLogic", "objectName", "getOptions"]
        },
        "DataReadAttributes": {
          "type": "object",
          "properties": {
            "config": {
              "$ref": "#/components/schemas/RecordReadConfig"
            }
          },
          "required": ["config"]
        },
        "RecordReadFlowItemResponse": {
          "type": "object",
          "properties": {
            "$metadata": {
              "$ref": "#/components/schemas/FlowItemMetadataResponse"
            },
            "attributes": {
              "$ref": "#/components/schemas/DataReadAttributes"
            },
            "type": {
              "enum": ["read"],
              "type": "string",
              "default": "read"
            },
            "id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "nodeAttributes": {
              "type": "object"
            },
            "maxConnections": {
              "type": "number"
            },
            "hasFaultConnection": {
              "type": "boolean"
            }
          },
          "required": [
            "attributes",
            "type",
            "id",
            "name",
            "displayName",
            "description",
            "nodeAttributes",
            "maxConnections",
            "hasFaultConnection"
          ]
        },
        "RecordUpdateConfig": {
          "type": "object",
          "properties": {
            "conditions": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/RecordQueryCondition"
              }
            },
            "conditionLogic": {
              "enum": ["and", "or"],
              "type": "string"
            },
            "objectName": {
              "type": "string"
            },
            "payload": {
              "type": "object",
              "description": "{ fieldName: SimpleContentValue }",
              "additionalProperties": {
                "$ref": "#/components/schemas/SimpleContentValue"
              }
            }
          },
          "required": ["conditions", "conditionLogic", "objectName", "payload"]
        },
        "DataUpdateAttributes": {
          "type": "object",
          "properties": {
            "variableName": {
              "type": "string"
            },
            "media": {
              "$ref": "#/components/schemas/RecordMediaConfig"
            },
            "managedBy": {
              "deprecated": true,
              "allOf": [
                {
                  "$ref": "#/components/schemas/SimpleContentValue"
                }
              ]
            },
            "sharing": {
              "$ref": "#/components/schemas/RecordSharingConfig"
            },
            "config": {
              "$ref": "#/components/schemas/RecordUpdateConfig"
            }
          }
        },
        "RecordUpdateFlowItemResponse": {
          "type": "object",
          "properties": {
            "$metadata": {
              "$ref": "#/components/schemas/FlowItemMetadataResponse"
            },
            "attributes": {
              "$ref": "#/components/schemas/DataUpdateAttributes"
            },
            "type": {
              "enum": ["update"],
              "type": "string",
              "default": "update"
            },
            "id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "nodeAttributes": {
              "type": "object"
            },
            "maxConnections": {
              "type": "number"
            },
            "hasFaultConnection": {
              "type": "boolean"
            }
          },
          "required": [
            "attributes",
            "type",
            "id",
            "name",
            "displayName",
            "description",
            "nodeAttributes",
            "maxConnections",
            "hasFaultConnection"
          ]
        },
        "ScreenFlowItemAttributes": {
          "type": "object",
          "properties": {
            "layoutScript": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/components/schemas/BaseScreenFIComponent"
              }
            },
            "recordForm": {
              "$ref": "#/components/schemas/ScreenItemRecordFormAttributes"
            }
          }
        },
        "ScreenFlowItemResponse": {
          "type": "object",
          "properties": {
            "$metadata": {
              "$ref": "#/components/schemas/FlowItemMetadataResponse"
            },
            "attributes": {
              "$ref": "#/components/schemas/ScreenFlowItemAttributes"
            },
            "type": {
              "enum": ["screen"],
              "type": "string",
              "default": "screen"
            },
            "id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "nodeAttributes": {
              "type": "object"
            },
            "maxConnections": {
              "type": "number"
            },
            "hasFaultConnection": {
              "type": "boolean"
            }
          },
          "required": [
            "attributes",
            "type",
            "id",
            "name",
            "displayName",
            "description",
            "nodeAttributes",
            "maxConnections",
            "hasFaultConnection"
          ]
        },
        "SubflowFlowItemAttributes": {
          "type": "object",
          "properties": {
            "subflowName": {
              "type": "string"
            },
            "subflowVar": {
              "$ref": "#/components/schemas/SimpleContentValue"
            },
            "inputMap": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/components/schemas/SimpleContentValue"
              }
            }
          }
        },
        "SubflowFlowItemResponse": {
          "type": "object",
          "properties": {
            "$metadata": {
              "$ref": "#/components/schemas/FlowItemMetadataResponse"
            },
            "attributes": {
              "$ref": "#/components/schemas/SubflowFlowItemAttributes"
            },
            "type": {
              "enum": ["sub-flow"],
              "type": "string",
              "default": "sub-flow"
            },
            "id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "nodeAttributes": {
              "type": "object"
            },
            "maxConnections": {
              "type": "number"
            },
            "hasFaultConnection": {
              "type": "boolean"
            }
          },
          "required": [
            "attributes",
            "type",
            "id",
            "name",
            "displayName",
            "description",
            "nodeAttributes",
            "maxConnections",
            "hasFaultConnection"
          ]
        },
        "UserCreateAttributes": {
          "type": "object",
          "properties": {
            "payload": {
              "type": "object",
              "description": "{ fieldName: SimpleContentValue }",
              "additionalProperties": {
                "$ref": "#/components/schemas/SimpleContentValue"
              }
            },
            "ssoId": {
              "$ref": "#/components/schemas/SimpleContentValue"
            },
            "username": {
              "$ref": "#/components/schemas/SimpleContentValue"
            },
            "profileName": {
              "$ref": "#/components/schemas/SimpleContentValue"
            },
            "roleName": {
              "$ref": "#/components/schemas/SimpleContentValue"
            },
            "divisionName": {
              "$ref": "#/components/schemas/SimpleContentValue"
            }
          },
          "required": ["payload", "ssoId", "username", "profileName", "roleName"]
        },
        "UserCreateFlowItemResponse": {
          "type": "object",
          "properties": {
            "$metadata": {
              "$ref": "#/components/schemas/FlowItemMetadataResponse"
            },
            "attributes": {
              "$ref": "#/components/schemas/UserCreateAttributes"
            },
            "type": {
              "enum": ["user-create"],
              "type": "string",
              "default": "user-create"
            },
            "id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "nodeAttributes": {
              "type": "object"
            },
            "maxConnections": {
              "type": "number"
            },
            "hasFaultConnection": {
              "type": "boolean"
            }
          },
          "required": [
            "attributes",
            "type",
            "id",
            "name",
            "displayName",
            "description",
            "nodeAttributes",
            "maxConnections",
            "hasFaultConnection"
          ]
        },
        "UserUpdateAttributes": {
          "type": "object",
          "properties": {
            "payload": {
              "type": "object",
              "description": "{ fieldName: SimpleContentValue }",
              "additionalProperties": {
                "$ref": "#/components/schemas/SimpleContentValue"
              }
            },
            "userId": {
              "$ref": "#/components/schemas/SimpleContentValue"
            },
            "profileName": {
              "$ref": "#/components/schemas/SimpleContentValue"
            },
            "roleName": {
              "$ref": "#/components/schemas/SimpleContentValue"
            },
            "divisionName": {
              "$ref": "#/components/schemas/SimpleContentValue"
            },
            "isActive": {
              "$ref": "#/components/schemas/SimpleContentValue"
            }
          },
          "required": ["payload", "userId"]
        },
        "UserUpdateFlowItemResponse": {
          "type": "object",
          "properties": {
            "$metadata": {
              "$ref": "#/components/schemas/FlowItemMetadataResponse"
            },
            "attributes": {
              "$ref": "#/components/schemas/UserUpdateAttributes"
            },
            "type": {
              "enum": ["user-update"],
              "type": "string",
              "default": "user-update"
            },
            "id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "nodeAttributes": {
              "type": "object"
            },
            "maxConnections": {
              "type": "number"
            },
            "hasFaultConnection": {
              "type": "boolean"
            }
          },
          "required": [
            "attributes",
            "type",
            "id",
            "name",
            "displayName",
            "description",
            "nodeAttributes",
            "maxConnections",
            "hasFaultConnection"
          ]
        },
        "DataRawQueryConfig": {
          "type": "object",
          "properties": {
            "query": {
              "type": "string"
            },
            "objectName": {
              "type": "string"
            }
          },
          "required": ["query", "objectName"]
        },
        "DataRawQueryAttributes": {
          "type": "object",
          "properties": {
            "config": {
              "$ref": "#/components/schemas/DataRawQueryConfig"
            }
          },
          "required": ["config"]
        },
        "RawQueryFlowItemResponse": {
          "type": "object",
          "properties": {
            "$metadata": {
              "$ref": "#/components/schemas/FlowItemMetadataResponse"
            },
            "attributes": {
              "$ref": "#/components/schemas/DataRawQueryAttributes"
            },
            "type": {
              "enum": ["raw-query"],
              "type": "string",
              "default": "raw-query"
            },
            "id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "nodeAttributes": {
              "type": "object"
            },
            "maxConnections": {
              "type": "number"
            },
            "hasFaultConnection": {
              "type": "boolean"
            }
          },
          "required": [
            "attributes",
            "type",
            "id",
            "name",
            "displayName",
            "description",
            "nodeAttributes",
            "maxConnections",
            "hasFaultConnection"
          ]
        },
        "AIModelFlowItemAttributes": {
          "type": "object",
          "properties": {
            "provider": {
              "type": "string"
            },
            "modelName": {
              "type": "string"
            },
            "modelParameters": {
              "type": "object"
            },
            "credentialName": {
              "type": "string"
            },
            "responseType": {
              "type": "string"
            },
            "instructions": {
              "description": "System context for the model",
              "allOf": [
                {
                  "$ref": "#/components/schemas/ContentValue"
                }
              ]
            }
          },
          "required": ["provider", "modelName", "modelParameters", "credentialName", "responseType"]
        },
        "AIModelFlowItemResponse": {
          "type": "object",
          "properties": {
            "$metadata": {
              "$ref": "#/components/schemas/FlowItemMetadataResponse"
            },
            "attributes": {
              "$ref": "#/components/schemas/AIModelFlowItemAttributes"
            },
            "type": {
              "enum": ["ai-model"],
              "type": "string",
              "default": "ai-model"
            },
            "id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "nodeAttributes": {
              "type": "object"
            },
            "maxConnections": {
              "type": "number"
            },
            "hasFaultConnection": {
              "type": "boolean"
            }
          },
          "required": [
            "attributes",
            "type",
            "id",
            "name",
            "displayName",
            "description",
            "nodeAttributes",
            "maxConnections",
            "hasFaultConnection"
          ]
        },
        "ActionFlowItemAttributesDto": {
          "type": "object",
          "properties": {
            "actionMetadataName": {
              "type": "string"
            },
            "inputMap": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/components/schemas/SimpleContentValue"
              },
              "description": "key should be <location>.<name>"
            },
            "bodyAssetFields": {
              "type": "array",
              "items": {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "$ref": "#/components/schemas/BodyAssetField"
                  }
                ]
              },
              "description": "field path in input body which is binary asset field, should be 'parent.child' or { key: 'parent.child', transform: 'base64' }"
            }
          },
          "required": ["actionMetadataName"]
        },
        "CreateActionFlowItemDto": {
          "type": "object",
          "properties": {
            "attributes": {
              "$ref": "#/components/schemas/ActionFlowItemAttributesDto"
            },
            "type": {
              "type": "string",
              "default": "action",
              "enum": ["action"]
            },
            "name": {
              "type": "string",
              "pattern": "nameRegex"
            },
            "displayName": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "nodeAttributes": {
              "type": "object"
            }
          },
          "required": ["attributes", "type", "name", "displayName", "nodeAttributes"]
        },
        "AssignmentFlowItemAttributesDto": {
          "type": "object",
          "properties": {
            "description": {
              "type": "string"
            },
            "assignmentVariables": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/AssignmentVariableDto"
              }
            }
          },
          "required": ["assignmentVariables"]
        },
        "CreateAssignmentFlowItemDto": {
          "type": "object",
          "properties": {
            "attributes": {
              "$ref": "#/components/schemas/AssignmentFlowItemAttributesDto"
            },
            "type": {
              "type": "string",
              "default": "assignment",
              "enum": ["assignment"]
            },
            "name": {
              "type": "string",
              "pattern": "nameRegex"
            },
            "displayName": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "nodeAttributes": {
              "type": "object"
            }
          },
          "required": ["attributes", "type", "name", "displayName", "nodeAttributes"]
        },
        "CollectionAggregationFlowItemAttributesDto": {
          "type": "object",
          "properties": {
            "collectionVariableName": {
              "type": "string"
            },
            "fieldName": {
              "type": "string"
            },
            "method": {
              "type": "string",
              "enum": ["sum", "average", "max", "min", "count", "concat"]
            }
          },
          "required": ["collectionVariableName", "method"]
        },
        "CreateCollectionAggregationFlowItemDto": {
          "type": "object",
          "properties": {
            "attributes": {
              "$ref": "#/components/schemas/CollectionAggregationFlowItemAttributesDto"
            },
            "type": {
              "type": "string",
              "default": "collection-aggregation",
              "enum": ["collection-aggregation"]
            },
            "name": {
              "type": "string",
              "pattern": "nameRegex"
            },
            "displayName": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "nodeAttributes": {
              "type": "object"
            }
          },
          "required": ["attributes", "type", "name", "displayName", "nodeAttributes"]
        },
        "DecisionFlowItemAttributesDto": {
          "type": "object",
          "properties": {
            "defaultOutcomeLabel": {
              "type": "string"
            },
            "order": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "outcomes": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/components/schemas/DecisionOutcomeData"
              }
            }
          },
          "required": ["defaultOutcomeLabel", "order", "outcomes"]
        },
        "CreateDecisionFlowItemDto": {
          "type": "object",
          "properties": {
            "attributes": {
              "$ref": "#/components/schemas/DecisionFlowItemAttributesDto"
            },
            "type": {
              "type": "string",
              "default": "decision",
              "enum": ["decision"]
            },
            "name": {
              "type": "string",
              "pattern": "nameRegex"
            },
            "displayName": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "nodeAttributes": {
              "type": "object"
            }
          },
          "required": ["attributes", "type", "name", "displayName", "nodeAttributes"]
        },
        "CreateEmitEventFlowItemDto": {
          "type": "object",
          "properties": {
            "attributes": {
              "$ref": "#/components/schemas/EmitEventFlowItemAttributes"
            },
            "type": {
              "type": "string",
              "default": "emit-event",
              "enum": ["emit-event"]
            },
            "name": {
              "type": "string",
              "pattern": "nameRegex"
            },
            "displayName": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "nodeAttributes": {
              "type": "object"
            }
          },
          "required": ["attributes", "type", "name", "displayName", "nodeAttributes"]
        },
        "CreateBuiltinActionFlowItemDto": {
          "type": "object",
          "properties": {
            "attributes": {
              "$ref": "#/components/schemas/BuiltinActionFlowItemAttributes"
            },
            "type": {
              "type": "string",
              "default": "builtin-action",
              "enum": ["builtin-action"]
            },
            "name": {
              "type": "string",
              "pattern": "nameRegex"
            },
            "displayName": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "nodeAttributes": {
              "type": "object"
            }
          },
          "required": ["attributes", "type", "name", "displayName", "nodeAttributes"]
        },
        "ImportRecordsAttributesDto": {
          "type": "object",
          "properties": {
            "fileId": {
              "$ref": "#/components/schemas/SimpleContentValue"
            },
            "config": {
              "$ref": "#/components/schemas/ImportRecordsConfig"
            },
            "batchPayload": {
              "$ref": "#/components/schemas/ImportRecordsBatchPayload"
            }
          },
          "required": ["fileId", "config", "batchPayload"]
        },
        "CreateImportRecordsDto": {
          "type": "object",
          "properties": {
            "attributes": {
              "$ref": "#/components/schemas/ImportRecordsAttributesDto"
            },
            "type": {
              "type": "string",
              "default": "import-records",
              "enum": ["import-records"]
            },
            "name": {
              "type": "string",
              "pattern": "nameRegex"
            },
            "displayName": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "nodeAttributes": {
              "type": "object"
            }
          },
          "required": ["attributes", "type", "name", "displayName", "nodeAttributes"]
        },
        "LoopFlowItemAttributesDto": {
          "type": "object",
          "properties": {
            "collectionVariableName": {
              "type": "string"
            },
            "loopOrder": {
              "enum": ["ASC", "DESC"],
              "type": "string"
            }
          },
          "required": ["collectionVariableName", "loopOrder"]
        },
        "CreateLoopFlowItemDto": {
          "type": "object",
          "properties": {
            "attributes": {
              "$ref": "#/components/schemas/LoopFlowItemAttributesDto"
            },
            "type": {
              "type": "string",
              "default": "loop",
              "enum": ["loop"]
            },
            "name": {
              "type": "string",
              "pattern": "nameRegex"
            },
            "displayName": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "nodeAttributes": {
              "type": "object"
            }
          },
          "required": ["attributes", "type", "name", "displayName", "nodeAttributes"]
        },
        "DataCreateAttributesDto": {
          "type": "object",
          "properties": {
            "variableName": {
              "type": "string"
            },
            "media": {
              "$ref": "#/components/schemas/RecordMediaConfig"
            },
            "managedBy": {
              "deprecated": true,
              "allOf": [
                {
                  "$ref": "#/components/schemas/SimpleContentValue"
                }
              ]
            },
            "sharing": {
              "$ref": "#/components/schemas/RecordSharingConfig"
            },
            "config": {
              "$ref": "#/components/schemas/RecordCreateConfig"
            }
          }
        },
        "CreateRecordCreateDto": {
          "type": "object",
          "properties": {
            "attributes": {
              "$ref": "#/components/schemas/DataCreateAttributesDto"
            },
            "type": {
              "type": "string",
              "default": "create",
              "enum": ["create"]
            },
            "name": {
              "type": "string",
              "pattern": "nameRegex"
            },
            "displayName": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "nodeAttributes": {
              "type": "object"
            }
          },
          "required": ["attributes", "type", "name", "displayName", "nodeAttributes"]
        },
        "DataDeleteAttributesDto": {
          "type": "object",
          "properties": {
            "variableName": {
              "type": "string"
            },
            "config": {
              "$ref": "#/components/schemas/RecordDeleteConfig"
            }
          }
        },
        "CreateRecordDeleteDto": {
          "type": "object",
          "properties": {
            "attributes": {
              "$ref": "#/components/schemas/DataDeleteAttributesDto"
            },
            "type": {
              "type": "string",
              "default": "delete",
              "enum": ["delete"]
            },
            "name": {
              "type": "string",
              "pattern": "nameRegex"
            },
            "displayName": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "nodeAttributes": {
              "type": "object"
            }
          },
          "required": ["attributes", "type", "name", "displayName", "nodeAttributes"]
        },
        "DataReadAttributesDto": {
          "type": "object",
          "properties": {
            "config": {
              "$ref": "#/components/schemas/RecordReadConfig"
            }
          },
          "required": ["config"]
        },
        "CreateRecordReadDto": {
          "type": "object",
          "properties": {
            "attributes": {
              "$ref": "#/components/schemas/DataReadAttributesDto"
            },
            "type": {
              "type": "string",
              "default": "read",
              "enum": ["read"]
            },
            "name": {
              "type": "string",
              "pattern": "nameRegex"
            },
            "displayName": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "nodeAttributes": {
              "type": "object"
            }
          },
          "required": ["attributes", "type", "name", "displayName", "nodeAttributes"]
        },
        "DataUpdateAttributesDto": {
          "type": "object",
          "properties": {
            "sharing": {
              "$ref": "#/components/schemas/RecordSharingConfig"
            },
            "media": {
              "$ref": "#/components/schemas/RecordMediaConfig"
            },
            "managedBy": {
              "$ref": "#/components/schemas/SimpleContentValue"
            },
            "config": {
              "$ref": "#/components/schemas/RecordUpdateConfig"
            },
            "variableName": {
              "type": "string"
            }
          }
        },
        "CreateRecordUpdateDto": {
          "type": "object",
          "properties": {
            "attributes": {
              "$ref": "#/components/schemas/DataUpdateAttributesDto"
            },
            "type": {
              "type": "string",
              "default": "update",
              "enum": ["update"]
            },
            "name": {
              "type": "string",
              "pattern": "nameRegex"
            },
            "displayName": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "nodeAttributes": {
              "type": "object"
            }
          },
          "required": ["attributes", "type", "name", "displayName", "nodeAttributes"]
        },
        "ScreenFlowItemAttributesDto": {
          "type": "object",
          "properties": {
            "layoutScript": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/components/schemas/BaseScreenFIComponent"
              }
            },
            "recordForm": {
              "$ref": "#/components/schemas/ScreenItemRecordFormAttributes"
            }
          }
        },
        "CreateScreenFlowItemDto": {
          "type": "object",
          "properties": {
            "attributes": {
              "$ref": "#/components/schemas/ScreenFlowItemAttributesDto"
            },
            "type": {
              "type": "string",
              "default": "screen",
              "enum": ["screen"]
            },
            "name": {
              "type": "string",
              "pattern": "nameRegex"
            },
            "displayName": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "nodeAttributes": {
              "type": "object"
            }
          },
          "required": ["attributes", "type", "name", "displayName", "nodeAttributes"]
        },
        "SubflowFlowItemAttributesDto": {
          "type": "object",
          "properties": {
            "subflowName": {
              "type": "string"
            },
            "subflowVar": {
              "$ref": "#/components/schemas/SimpleContentValue"
            },
            "inputMap": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/components/schemas/SimpleContentValue"
              }
            }
          }
        },
        "CreateSubflowItemDto": {
          "type": "object",
          "properties": {
            "attributes": {
              "$ref": "#/components/schemas/SubflowFlowItemAttributesDto"
            },
            "type": {
              "type": "string",
              "default": "sub-flow",
              "enum": ["sub-flow"]
            },
            "name": {
              "type": "string",
              "pattern": "nameRegex"
            },
            "displayName": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "nodeAttributes": {
              "type": "object"
            }
          },
          "required": ["attributes", "type", "name", "displayName", "nodeAttributes"]
        },
        "UserCreateAttributesDto": {
          "type": "object",
          "properties": {
            "payload": {
              "type": "object",
              "description": "{ fieldName: SimpleContentValue }",
              "additionalProperties": {
                "$ref": "#/components/schemas/SimpleContentValue"
              }
            },
            "ssoId": {
              "$ref": "#/components/schemas/SimpleContentValue"
            },
            "username": {
              "$ref": "#/components/schemas/SimpleContentValue"
            },
            "profileName": {
              "$ref": "#/components/schemas/SimpleContentValue"
            },
            "roleName": {
              "$ref": "#/components/schemas/SimpleContentValue"
            },
            "divisionName": {
              "$ref": "#/components/schemas/SimpleContentValue"
            }
          },
          "required": ["payload", "profileName", "roleName"]
        },
        "CreateUserCreateItemDto": {
          "type": "object",
          "properties": {
            "attributes": {
              "$ref": "#/components/schemas/UserCreateAttributesDto"
            },
            "type": {
              "type": "string",
              "default": "user-create",
              "enum": ["user-create"]
            },
            "name": {
              "type": "string",
              "pattern": "nameRegex"
            },
            "displayName": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "nodeAttributes": {
              "type": "object"
            }
          },
          "required": ["attributes", "type", "name", "displayName", "nodeAttributes"]
        },
        "UserUpdateAttributesDto": {
          "type": "object",
          "properties": {
            "payload": {
              "type": "object",
              "description": "{ fieldName: SimpleContentValue }",
              "additionalProperties": {
                "$ref": "#/components/schemas/SimpleContentValue"
              }
            },
            "userId": {
              "$ref": "#/components/schemas/SimpleContentValue"
            },
            "profileName": {
              "$ref": "#/components/schemas/SimpleContentValue"
            },
            "roleName": {
              "$ref": "#/components/schemas/SimpleContentValue"
            },
            "divisionName": {
              "$ref": "#/components/schemas/SimpleContentValue"
            },
            "isActive": {
              "$ref": "#/components/schemas/SimpleContentValue"
            }
          },
          "required": ["payload", "userId"]
        },
        "CreateUserUpdateItemDto": {
          "type": "object",
          "properties": {
            "attributes": {
              "$ref": "#/components/schemas/UserUpdateAttributesDto"
            },
            "type": {
              "type": "string",
              "default": "user-update",
              "enum": ["user-update"]
            },
            "name": {
              "type": "string",
              "pattern": "nameRegex"
            },
            "displayName": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "nodeAttributes": {
              "type": "object"
            }
          },
          "required": ["attributes", "type", "name", "displayName", "nodeAttributes"]
        },
        "RawQueryFlowItemAttributesDto": {
          "type": "object",
          "properties": {
            "config": {
              "$ref": "#/components/schemas/DataRawQueryConfig"
            }
          },
          "required": ["config"]
        },
        "CreateRawQueryDataDto": {
          "type": "object",
          "properties": {
            "attributes": {
              "$ref": "#/components/schemas/RawQueryFlowItemAttributesDto"
            },
            "type": {
              "type": "string",
              "default": "raw-query",
              "enum": ["raw-query"]
            },
            "name": {
              "type": "string",
              "pattern": "nameRegex"
            },
            "displayName": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "nodeAttributes": {
              "type": "object"
            }
          },
          "required": ["attributes", "type", "name", "displayName", "nodeAttributes"]
        },
        "CreateAIModelFlowItemDto": {
          "type": "object",
          "properties": {
            "attributes": {
              "$ref": "#/components/schemas/AIModelFlowItemAttributes"
            },
            "type": {
              "type": "string",
              "default": "ai-model",
              "enum": ["ai-model"]
            },
            "name": {
              "type": "string",
              "pattern": "nameRegex"
            },
            "displayName": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "nodeAttributes": {
              "type": "object"
            }
          },
          "required": ["attributes", "type", "name", "displayName", "nodeAttributes"]
        },
        "UpdateActionFlowItemDto": {
          "type": "object",
          "properties": {
            "attributes": {
              "$ref": "#/components/schemas/ActionFlowItemAttributesDto"
            },
            "type": {
              "type": "string",
              "default": "action",
              "enum": ["action"]
            },
            "displayName": {
              "type": "string"
            },
            "nodeAttributes": {
              "type": "object"
            },
            "description": {
              "type": "string"
            }
          },
          "required": ["type"]
        },
        "UpdateAssignmentFlowItemDto": {
          "type": "object",
          "properties": {
            "attributes": {
              "$ref": "#/components/schemas/AssignmentFlowItemAttributesDto"
            },
            "type": {
              "type": "string",
              "default": "assignment",
              "enum": ["assignment"]
            },
            "displayName": {
              "type": "string"
            },
            "nodeAttributes": {
              "type": "object"
            },
            "description": {
              "type": "string"
            }
          },
          "required": ["type"]
        },
        "UpdateCollectionAggregationFlowItemDto": {
          "type": "object",
          "properties": {
            "attributes": {
              "$ref": "#/components/schemas/CollectionAggregationFlowItemAttributesDto"
            },
            "type": {
              "type": "string",
              "default": "collection-aggregation",
              "enum": ["collection-aggregation"]
            },
            "displayName": {
              "type": "string"
            },
            "nodeAttributes": {
              "type": "object"
            },
            "description": {
              "type": "string"
            }
          },
          "required": ["type"]
        },
        "UpdateDecisionFlowItemDto": {
          "type": "object",
          "properties": {
            "attributes": {
              "$ref": "#/components/schemas/DecisionFlowItemAttributesDto"
            },
            "type": {
              "type": "string",
              "default": "decision",
              "enum": ["decision"]
            },
            "displayName": {
              "type": "string"
            },
            "nodeAttributes": {
              "type": "object"
            },
            "description": {
              "type": "string"
            }
          },
          "required": ["type"]
        },
        "UpdateEmitEventFlowItemDto": {
          "type": "object",
          "properties": {
            "attributes": {
              "$ref": "#/components/schemas/EmitEventFlowItemAttributes"
            },
            "type": {
              "type": "string",
              "default": "emit-event",
              "enum": ["emit-event"]
            },
            "displayName": {
              "type": "string"
            },
            "nodeAttributes": {
              "type": "object"
            },
            "description": {
              "type": "string"
            }
          },
          "required": ["type"]
        },
        "UpdateImportRecordsDto": {
          "type": "object",
          "properties": {
            "attributes": {
              "$ref": "#/components/schemas/ImportRecordsAttributesDto"
            },
            "type": {
              "type": "string",
              "default": "import-records",
              "enum": ["import-records"]
            },
            "displayName": {
              "type": "string"
            },
            "nodeAttributes": {
              "type": "object"
            },
            "description": {
              "type": "string"
            }
          },
          "required": ["type"]
        },
        "UpdateLoopFlowItemDto": {
          "type": "object",
          "properties": {
            "attributes": {
              "$ref": "#/components/schemas/LoopFlowItemAttributesDto"
            },
            "type": {
              "type": "string",
              "default": "loop",
              "enum": ["loop"]
            },
            "displayName": {
              "type": "string"
            },
            "nodeAttributes": {
              "type": "object"
            },
            "description": {
              "type": "string"
            }
          },
          "required": ["type"]
        },
        "UpdateRecordCreateDto": {
          "type": "object",
          "properties": {
            "attributes": {
              "$ref": "#/components/schemas/DataCreateAttributesDto"
            },
            "type": {
              "type": "string",
              "default": "create",
              "enum": ["create"]
            },
            "displayName": {
              "type": "string"
            },
            "nodeAttributes": {
              "type": "object"
            },
            "description": {
              "type": "string"
            }
          },
          "required": ["type"]
        },
        "UpdateRecordDeleteDto": {
          "type": "object",
          "properties": {
            "attributes": {
              "$ref": "#/components/schemas/DataDeleteAttributesDto"
            },
            "type": {
              "type": "string",
              "default": "delete",
              "enum": ["delete"]
            },
            "displayName": {
              "type": "string"
            },
            "nodeAttributes": {
              "type": "object"
            },
            "description": {
              "type": "string"
            }
          },
          "required": ["type"]
        },
        "UpdateRecordReadDto": {
          "type": "object",
          "properties": {
            "attributes": {
              "$ref": "#/components/schemas/DataReadAttributesDto"
            },
            "type": {
              "type": "string",
              "default": "read",
              "enum": ["read"]
            },
            "displayName": {
              "type": "string"
            },
            "nodeAttributes": {
              "type": "object"
            },
            "description": {
              "type": "string"
            }
          },
          "required": ["type"]
        },
        "UpdateRecordUpdateDto": {
          "type": "object",
          "properties": {
            "attributes": {
              "$ref": "#/components/schemas/DataUpdateAttributesDto"
            },
            "type": {
              "type": "string",
              "default": "update",
              "enum": ["update"]
            },
            "displayName": {
              "type": "string"
            },
            "nodeAttributes": {
              "type": "object"
            },
            "description": {
              "type": "string"
            }
          },
          "required": ["type"]
        },
        "UpdateScreenFlowItemDto": {
          "type": "object",
          "properties": {
            "attributes": {
              "$ref": "#/components/schemas/ScreenFlowItemAttributesDto"
            },
            "type": {
              "type": "string",
              "default": "screen",
              "enum": ["screen"]
            },
            "displayName": {
              "type": "string"
            },
            "nodeAttributes": {
              "type": "object"
            },
            "description": {
              "type": "string"
            }
          },
          "required": ["type"]
        },
        "UpdateSubflowItemDto": {
          "type": "object",
          "properties": {
            "attributes": {
              "$ref": "#/components/schemas/SubflowFlowItemAttributesDto"
            },
            "type": {
              "type": "string",
              "default": "sub-flow",
              "enum": ["sub-flow"]
            },
            "displayName": {
              "type": "string"
            },
            "nodeAttributes": {
              "type": "object"
            },
            "description": {
              "type": "string"
            }
          },
          "required": ["type"]
        },
        "UpdateUserCreateItemDto": {
          "type": "object",
          "properties": {
            "attributes": {
              "$ref": "#/components/schemas/UserCreateAttributesDto"
            },
            "type": {
              "type": "string",
              "default": "user-create",
              "enum": ["user-create"]
            },
            "displayName": {
              "type": "string"
            },
            "nodeAttributes": {
              "type": "object"
            },
            "description": {
              "type": "string"
            }
          },
          "required": ["type"]
        },
        "UpdateUserUpdateItemDto": {
          "type": "object",
          "properties": {
            "attributes": {
              "$ref": "#/components/schemas/UserUpdateAttributesDto"
            },
            "type": {
              "type": "string",
              "default": "user-update",
              "enum": ["user-update"]
            },
            "displayName": {
              "type": "string"
            },
            "nodeAttributes": {
              "type": "object"
            },
            "description": {
              "type": "string"
            }
          },
          "required": ["type"]
        },
        "UpdateRawQueryFlowItemDto": {
          "type": "object",
          "properties": {
            "attributes": {
              "$ref": "#/components/schemas/RawQueryFlowItemAttributesDto"
            },
            "type": {
              "type": "string",
              "default": "raw-query",
              "enum": ["raw-query"]
            },
            "displayName": {
              "type": "string"
            },
            "nodeAttributes": {
              "type": "object"
            },
            "description": {
              "type": "string"
            }
          },
          "required": ["type"]
        },
        "UpdateAIModelFlowItemDto": {
          "type": "object",
          "properties": {
            "attributes": {
              "$ref": "#/components/schemas/AIModelFlowItemAttributes"
            },
            "type": {
              "type": "string",
              "default": "ai-model",
              "enum": ["ai-model"]
            },
            "displayName": {
              "type": "string"
            },
            "nodeAttributes": {
              "type": "object"
            },
            "description": {
              "type": "string"
            }
          },
          "required": ["type"]
        },
        "FlowItemConnectionResponse": {
          "type": "object",
          "properties": {
            "srcItemName": {
              "type": "string"
            },
            "trgItemName": {
              "type": "string"
            },
            "id": {
              "type": "string"
            },
            "srcOutcomeName": {
              "type": "string"
            },
            "isFault": {
              "type": "boolean"
            },
            "nodeAttributes": {
              "type": "object"
            }
          },
          "required": [
            "srcItemName",
            "trgItemName",
            "id",
            "srcOutcomeName",
            "isFault",
            "nodeAttributes"
          ]
        },
        "CreateFlowItemConnectionDto": {
          "type": "object",
          "properties": {
            "srcItemName": {
              "type": "string"
            },
            "trgItemName": {
              "type": "string"
            },
            "srcOutcomeName": {
              "type": "string"
            },
            "isFault": {
              "type": "boolean"
            },
            "nodeAttributes": {
              "type": "object"
            }
          },
          "required": ["srcItemName", "trgItemName"]
        },
        "UpdateFlowItemConnectionDto": {
          "type": "object",
          "properties": {
            "nodeAttributes": {
              "type": "object"
            }
          }
        },
        "ConditionType": {
          "type": "object",
          "properties": {
            "conditionNumber": {
              "type": "number",
              "minimum": 1
            },
            "field": {
              "type": "string"
            },
            "sign": {
              "enum": [
                "===",
                "!==",
                "<=",
                ">=",
                "<",
                ">",
                "isNull",
                "isNotNull",
                "startsWith",
                "endsWith",
                "contains",
                "notContains",
                "wasSet"
              ],
              "type": "string"
            },
            "value": {
              "$ref": "#/components/schemas/SimpleContentValue"
            }
          },
          "required": ["conditionNumber", "field", "sign"]
        },
        "DataFlowCondition": {
          "type": "object",
          "properties": {
            "conditionLogic": {
              "type": "string",
              "enum": ["none", "and", "or", "custom"]
            },
            "customConditionLogic": {
              "type": "string"
            },
            "conditionClauses": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ConditionType"
              }
            }
          },
          "required": ["conditionLogic", "conditionClauses"]
        },
        "DataFlowAttributesDto": {
          "type": "object",
          "properties": {
            "objectName": {
              "type": "string"
            },
            "conditions": {
              "$ref": "#/components/schemas/DataFlowCondition"
            },
            "action": {
              "type": "string",
              "enum": ["create", "update", "delete"]
            }
          },
          "required": ["action"]
        },
        "UpdateDataFlowDto": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "default": "data",
              "enum": ["data"]
            },
            "attributes": {
              "$ref": "#/components/schemas/DataFlowAttributesDto"
            },
            "displayName": {
              "type": "string"
            },
            "triggerType": {
              "type": "string",
              "enum": ["public", "private", "by-profile"]
            },
            "profileNames": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": {
              "type": "string"
            },
            "runAsContext": {
              "type": "string",
              "enum": ["system", "dynamic"]
            }
          },
          "required": ["type"]
        },
        "UpdateScreenFlowDto": {
          "type": "object",
          "properties": {
            "displayName": {
              "type": "string"
            },
            "triggerType": {
              "type": "string",
              "enum": ["public", "private", "by-profile"]
            },
            "profileNames": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": {
              "type": "string"
            },
            "runAsContext": {
              "type": "string",
              "enum": ["system", "dynamic"]
            }
          }
        },
        "ScheduleFlowAttributesDto": {
          "type": "object",
          "properties": {
            "startDate": {
              "type": "string",
              "description": "Format: yyyy-MM-dd"
            },
            "startTime": {
              "type": "string",
              "description": "Accept 24-hour clock format: HH:mm, with 15 minute step"
            },
            "frequency": {
              "enum": ["once", "daily", "weekly"],
              "type": "string"
            },
            "cron": {
              "type": "string",
              "description": "Cron config"
            }
          }
        },
        "UpdateScheduleFlowDto": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "default": "time-based",
              "enum": ["time-based"]
            },
            "attributes": {
              "$ref": "#/components/schemas/ScheduleFlowAttributesDto"
            },
            "displayName": {
              "type": "string"
            },
            "triggerType": {
              "type": "string",
              "enum": ["public", "private", "by-profile"]
            },
            "profileNames": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": {
              "type": "string"
            },
            "runAsContext": {
              "type": "string",
              "enum": ["system", "dynamic"]
            }
          },
          "required": ["type"]
        },
        "UpdateActionFlowDto": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "default": "action",
              "enum": ["time-based"]
            },
            "displayName": {
              "type": "string"
            },
            "triggerType": {
              "type": "string",
              "enum": ["public", "private", "by-profile"]
            },
            "profileNames": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": {
              "type": "string"
            },
            "runAsContext": {
              "type": "string",
              "enum": ["system", "dynamic"]
            }
          },
          "required": ["type"]
        },
        "EventFlowAttributesDto": {
          "type": "object",
          "properties": {
            "eventName": {
              "type": "string"
            },
            "conditions": {
              "$ref": "#/components/schemas/DataFlowCondition"
            }
          }
        },
        "UpdateEventFlowDto": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "default": "event",
              "enum": ["event"]
            },
            "attributes": {
              "$ref": "#/components/schemas/EventFlowAttributesDto"
            },
            "displayName": {
              "type": "string"
            },
            "triggerType": {
              "type": "string",
              "enum": ["public", "private", "by-profile"]
            },
            "profileNames": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": {
              "type": "string"
            },
            "runAsContext": {
              "type": "string",
              "enum": ["system", "dynamic"]
            }
          },
          "required": ["type"]
        },
        "AiFlowAttributesDto": {
          "type": "object",
          "properties": {}
        },
        "UpdateAiFlowDto": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "default": "ai-chat",
              "enum": ["ai-chat"]
            },
            "attributes": {
              "$ref": "#/components/schemas/AiFlowAttributesDto"
            },
            "displayName": {
              "type": "string"
            },
            "triggerType": {
              "type": "string",
              "enum": ["public", "private", "by-profile"]
            },
            "profileNames": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": {
              "type": "string"
            },
            "runAsContext": {
              "type": "string",
              "enum": ["system", "dynamic"]
            }
          },
          "required": ["type"]
        },
        "ListFlowsQuery": {
          "type": "object",
          "properties": {
            "offset": {
              "type": "number",
              "default": 0
            },
            "limit": {
              "type": "number",
              "default": 20
            },
            "sortOrder": {
              "enum": ["ASC", "DESC"],
              "type": "string"
            },
            "sortBy": {
              "type": "string"
            },
            "searchText": {
              "type": "string"
            },
            "tagNames": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "type": {
              "type": "string",
              "enum": ["screen", "action", "time-based", "data", "event", "ai-chat"]
            },
            "onlyDeleted": {
              "type": "boolean"
            }
          }
        },
        "FlowCollection": {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/DataFlowResponse"
                  },
                  {
                    "$ref": "#/components/schemas/ScreenFlowResponse"
                  },
                  {
                    "$ref": "#/components/schemas/ScheduleFlowResponse"
                  },
                  {
                    "$ref": "#/components/schemas/ActionFlowResponse"
                  },
                  {
                    "$ref": "#/components/schemas/EventFlowResponse"
                  },
                  {
                    "$ref": "#/components/schemas/AIFlowResponse"
                  }
                ]
              }
            },
            "pageInfo": {
              "$ref": "#/components/schemas/PageInfoType"
            }
          },
          "required": ["data", "pageInfo"]
        },
        "BasicProfileResponse": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            }
          },
          "required": ["id", "name"]
        },
        "FlowResponse": {
          "type": "object",
          "properties": {
            "updatedAt": {
              "format": "date-time",
              "type": "string"
            },
            "id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "type": {
              "enum": ["screen", "action", "time-based", "data", "event", "ai-chat"],
              "type": "string"
            },
            "createdAt": {
              "format": "date-time",
              "type": "string"
            },
            "version": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            },
            "status": {
              "enum": ["active", "inactive", "draft"],
              "type": "string"
            },
            "triggerType": {
              "enum": ["public", "private", "by-profile"],
              "type": "string"
            },
            "profiles": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/BasicProfileResponse"
              }
            },
            "attributes": {
              "type": "object"
            },
            "description": {
              "type": "string"
            },
            "objectRefs": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/NameDisplayName"
              }
            },
            "tags": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/TagResponse"
              }
            }
          },
          "required": [
            "updatedAt",
            "id",
            "name",
            "type",
            "createdAt",
            "version",
            "displayName",
            "status",
            "triggerType",
            "attributes"
          ]
        },
        "UpdateFlowDto": {
          "type": "object",
          "properties": {
            "objectNameRefs": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "tagNames": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "FlowCreateDto": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "pattern": "nameRegex"
            },
            "displayName": {
              "type": "string"
            },
            "type": {
              "type": "string",
              "enum": ["screen", "action", "time-based", "data", "event", "ai-chat"]
            },
            "description": {
              "type": "string"
            },
            "objectNameRefs": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "tagNames": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "required": ["name", "displayName", "type"]
        },
        "ProfileResponse": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "createdAt": {
              "format": "date-time",
              "type": "string"
            },
            "updatedAt": {
              "format": "date-time",
              "type": "string"
            }
          },
          "required": ["id", "name", "displayName", "description", "createdAt", "updatedAt"]
        },
        "FlowTemplateResponse": {
          "type": "object",
          "properties": {
            "type": {
              "enum": ["screen", "action", "time-based", "data", "event", "ai-chat"],
              "type": "string"
            },
            "createdAt": {
              "format": "date-time",
              "type": "string"
            },
            "updatedAt": {
              "format": "date-time",
              "type": "string"
            },
            "id": {
              "type": "string"
            },
            "version": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "status": {
              "enum": ["active", "inactive", "draft"],
              "type": "string"
            },
            "triggerType": {
              "enum": ["public", "private", "by-profile"],
              "type": "string"
            },
            "runAsContext": {
              "enum": ["system", "dynamic"],
              "type": "string"
            },
            "attributes": {
              "type": "object"
            },
            "profiles": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ProfileResponse"
              }
            },
            "tags": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/TagResponse"
              }
            }
          },
          "required": [
            "type",
            "createdAt",
            "updatedAt",
            "id",
            "version",
            "name",
            "displayName",
            "status",
            "triggerType",
            "runAsContext",
            "attributes"
          ]
        },
        "FlowTemplateWithDataResponse": {
          "type": "object",
          "properties": {
            "type": {
              "enum": ["screen", "action", "time-based", "data", "event", "ai-chat"],
              "type": "string"
            },
            "items": {
              "type": "array",
              "items": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/ActionFlowItemResponse"
                  },
                  {
                    "$ref": "#/components/schemas/AssignmentFlowItemResponse"
                  },
                  {
                    "$ref": "#/components/schemas/CollectionAggregationFlowItemResponse"
                  },
                  {
                    "$ref": "#/components/schemas/DecisionFlowItemResponse"
                  },
                  {
                    "$ref": "#/components/schemas/EmitEventFlowItemResponse"
                  },
                  {
                    "$ref": "#/components/schemas/BuiltinActionFlowItemResponse"
                  },
                  {
                    "$ref": "#/components/schemas/ImportRecordsFlowItemResponse"
                  },
                  {
                    "$ref": "#/components/schemas/LoopFlowItemResponse"
                  },
                  {
                    "$ref": "#/components/schemas/RecordCreateFlowItemResponse"
                  },
                  {
                    "$ref": "#/components/schemas/RecordDeleteFlowItemResponse"
                  },
                  {
                    "$ref": "#/components/schemas/RecordReadFlowItemResponse"
                  },
                  {
                    "$ref": "#/components/schemas/RecordUpdateFlowItemResponse"
                  },
                  {
                    "$ref": "#/components/schemas/ScreenFlowItemResponse"
                  },
                  {
                    "$ref": "#/components/schemas/SubflowFlowItemResponse"
                  },
                  {
                    "$ref": "#/components/schemas/UserCreateFlowItemResponse"
                  },
                  {
                    "$ref": "#/components/schemas/UserUpdateFlowItemResponse"
                  },
                  {
                    "$ref": "#/components/schemas/RawQueryFlowItemResponse"
                  },
                  {
                    "$ref": "#/components/schemas/AIModelFlowItemResponse"
                  }
                ]
              }
            },
            "connections": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/FlowItemConnectionResponse"
              }
            },
            "createdAt": {
              "format": "date-time",
              "type": "string"
            },
            "updatedAt": {
              "format": "date-time",
              "type": "string"
            },
            "id": {
              "type": "string"
            },
            "version": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "status": {
              "type": "string",
              "enum": ["active", "inactive", "draft"]
            },
            "triggerType": {
              "type": "string",
              "enum": ["public", "private", "by-profile"]
            },
            "runAsContext": {
              "type": "string",
              "enum": ["system", "dynamic"]
            },
            "attributes": {
              "type": "object"
            },
            "profiles": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ProfileResponse"
              }
            },
            "tags": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/TagResponse"
              }
            }
          },
          "required": [
            "type",
            "items",
            "connections",
            "createdAt",
            "updatedAt",
            "id",
            "version",
            "name",
            "displayName",
            "status",
            "triggerType",
            "runAsContext",
            "attributes"
          ]
        },
        "FlowTemplateCloneDto": {
          "type": "object",
          "properties": {
            "asNewFlow": {
              "type": "boolean"
            },
            "newFlowName": {
              "type": "string",
              "pattern": "nameRegex"
            },
            "displayName": {
              "type": "string"
            },
            "description": {
              "type": "string"
            }
          }
        },
        "FlowLogQuery": {
          "type": "object",
          "properties": {
            "offset": {
              "type": "number",
              "default": 0
            },
            "limit": {
              "type": "number",
              "default": 20
            },
            "flowName": {
              "type": "string"
            },
            "version": {
              "type": "string"
            },
            "type": {
              "type": "string",
              "default": "all",
              "enum": ["all", "config", "execution"]
            }
          }
        },
        "AuditLogCollection": {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/AuditLogResponse"
              }
            },
            "pageInfo": {
              "$ref": "#/components/schemas/PageInfoType"
            }
          },
          "required": ["data", "pageInfo"]
        },
        "DataFlowAttributes": {
          "type": "object",
          "properties": {
            "action": {
              "type": "string",
              "enum": ["create", "update", "delete"]
            },
            "objectName": {
              "type": "string"
            },
            "conditions": {
              "$ref": "#/components/schemas/DataFlowCondition"
            }
          },
          "required": ["action"]
        },
        "DataFlowResponse": {
          "type": "object",
          "properties": {
            "type": {
              "enum": ["data"],
              "type": "string",
              "default": "data"
            },
            "attributes": {
              "$ref": "#/components/schemas/DataFlowAttributes"
            },
            "createdAt": {
              "format": "date-time",
              "type": "string"
            },
            "updatedAt": {
              "format": "date-time",
              "type": "string"
            },
            "id": {
              "type": "string"
            },
            "version": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "status": {
              "type": "string",
              "enum": ["active", "inactive", "draft"]
            },
            "triggerType": {
              "type": "string",
              "enum": ["public", "private", "by-profile"]
            },
            "runAsContext": {
              "type": "string",
              "enum": ["system", "dynamic"]
            },
            "profiles": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ProfileResponse"
              }
            },
            "tags": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/TagResponse"
              }
            }
          },
          "required": [
            "type",
            "attributes",
            "createdAt",
            "updatedAt",
            "id",
            "version",
            "name",
            "displayName",
            "status",
            "triggerType",
            "runAsContext"
          ]
        },
        "ScreenFlowResponse": {
          "type": "object",
          "properties": {
            "type": {
              "enum": ["screen"],
              "type": "string"
            },
            "createdAt": {
              "format": "date-time",
              "type": "string"
            },
            "updatedAt": {
              "format": "date-time",
              "type": "string"
            },
            "id": {
              "type": "string"
            },
            "version": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "status": {
              "type": "string",
              "enum": ["active", "inactive", "draft"]
            },
            "triggerType": {
              "type": "string",
              "enum": ["public", "private", "by-profile"]
            },
            "runAsContext": {
              "type": "string",
              "enum": ["system", "dynamic"]
            },
            "attributes": {
              "type": "object"
            },
            "profiles": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ProfileResponse"
              }
            },
            "tags": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/TagResponse"
              }
            }
          },
          "required": [
            "type",
            "createdAt",
            "updatedAt",
            "id",
            "version",
            "name",
            "displayName",
            "status",
            "triggerType",
            "runAsContext",
            "attributes"
          ]
        },
        "ScheduleFlowAttributes": {
          "type": "object",
          "properties": {
            "startDate": {
              "type": "string"
            },
            "startTime": {
              "type": "string"
            },
            "frequency": {
              "type": "string",
              "enum": ["once", "daily", "weekly"]
            },
            "cron": {
              "type": "string"
            }
          },
          "required": ["startDate", "startTime", "frequency", "cron"]
        },
        "ScheduleFlowResponse": {
          "type": "object",
          "properties": {
            "type": {
              "enum": ["time-based"],
              "type": "string",
              "default": "time-based"
            },
            "attributes": {
              "$ref": "#/components/schemas/ScheduleFlowAttributes"
            },
            "createdAt": {
              "format": "date-time",
              "type": "string"
            },
            "updatedAt": {
              "format": "date-time",
              "type": "string"
            },
            "id": {
              "type": "string"
            },
            "version": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "status": {
              "type": "string",
              "enum": ["active", "inactive", "draft"]
            },
            "triggerType": {
              "type": "string",
              "enum": ["public", "private", "by-profile"]
            },
            "runAsContext": {
              "type": "string",
              "enum": ["system", "dynamic"]
            },
            "profiles": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ProfileResponse"
              }
            },
            "tags": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/TagResponse"
              }
            }
          },
          "required": [
            "type",
            "attributes",
            "createdAt",
            "updatedAt",
            "id",
            "version",
            "name",
            "displayName",
            "status",
            "triggerType",
            "runAsContext"
          ]
        },
        "ActionFlowResponse": {
          "type": "object",
          "properties": {
            "type": {
              "enum": ["action"],
              "type": "string"
            },
            "createdAt": {
              "format": "date-time",
              "type": "string"
            },
            "updatedAt": {
              "format": "date-time",
              "type": "string"
            },
            "id": {
              "type": "string"
            },
            "version": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "status": {
              "type": "string",
              "enum": ["active", "inactive", "draft"]
            },
            "triggerType": {
              "type": "string",
              "enum": ["public", "private", "by-profile"]
            },
            "runAsContext": {
              "type": "string",
              "enum": ["system", "dynamic"]
            },
            "attributes": {
              "type": "object"
            },
            "profiles": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ProfileResponse"
              }
            },
            "tags": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/TagResponse"
              }
            }
          },
          "required": [
            "type",
            "createdAt",
            "updatedAt",
            "id",
            "version",
            "name",
            "displayName",
            "status",
            "triggerType",
            "runAsContext",
            "attributes"
          ]
        },
        "EventFlowAttributes": {
          "type": "object",
          "properties": {
            "eventName": {
              "type": "string"
            },
            "conditions": {
              "$ref": "#/components/schemas/DataFlowCondition"
            }
          }
        },
        "EventFlowResponse": {
          "type": "object",
          "properties": {
            "type": {
              "enum": ["event"],
              "type": "string",
              "default": "event"
            },
            "attributes": {
              "$ref": "#/components/schemas/EventFlowAttributes"
            },
            "createdAt": {
              "format": "date-time",
              "type": "string"
            },
            "updatedAt": {
              "format": "date-time",
              "type": "string"
            },
            "id": {
              "type": "string"
            },
            "version": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "status": {
              "type": "string",
              "enum": ["active", "inactive", "draft"]
            },
            "triggerType": {
              "type": "string",
              "enum": ["public", "private", "by-profile"]
            },
            "runAsContext": {
              "type": "string",
              "enum": ["system", "dynamic"]
            },
            "profiles": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ProfileResponse"
              }
            },
            "tags": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/TagResponse"
              }
            }
          },
          "required": [
            "type",
            "attributes",
            "createdAt",
            "updatedAt",
            "id",
            "version",
            "name",
            "displayName",
            "status",
            "triggerType",
            "runAsContext"
          ]
        },
        "AIFlowAttributes": {
          "type": "object",
          "properties": {}
        },
        "AIFlowResponse": {
          "type": "object",
          "properties": {
            "type": {
              "enum": ["ai-chat"],
              "type": "string",
              "default": "ai-chat"
            },
            "attributes": {
              "$ref": "#/components/schemas/AIFlowAttributes"
            },
            "createdAt": {
              "format": "date-time",
              "type": "string"
            },
            "updatedAt": {
              "format": "date-time",
              "type": "string"
            },
            "id": {
              "type": "string"
            },
            "version": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "status": {
              "type": "string",
              "enum": ["active", "inactive", "draft"]
            },
            "triggerType": {
              "type": "string",
              "enum": ["public", "private", "by-profile"]
            },
            "runAsContext": {
              "type": "string",
              "enum": ["system", "dynamic"]
            },
            "profiles": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ProfileResponse"
              }
            },
            "tags": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/TagResponse"
              }
            }
          },
          "required": [
            "type",
            "attributes",
            "createdAt",
            "updatedAt",
            "id",
            "version",
            "name",
            "displayName",
            "status",
            "triggerType",
            "runAsContext"
          ]
        },
        "AssignmentOperator": {
          "type": "object",
          "properties": {
            "displayName": {
              "type": "string"
            },
            "value": {
              "type": "string",
              "enum": [
                "assign",
                "add",
                "subTract",
                "addAtEnd",
                "addAtStart",
                "removeAll",
                "removeFirst",
                "removeLast",
                "removeAtIndex"
              ]
            }
          },
          "required": ["displayName", "value"]
        },
        "RoleResponse": {
          "type": "object",
          "properties": {
            "reportsToRole": {
              "$ref": "#/components/schemas/RoleResponse"
            },
            "id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            },
            "createdAt": {
              "format": "date-time",
              "type": "string"
            },
            "updatedAt": {
              "format": "date-time",
              "type": "string"
            }
          },
          "required": ["reportsToRole", "id", "name", "displayName", "createdAt", "updatedAt"]
        },
        "CreateRoleDto": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            },
            "reportsTo": {
              "type": "string"
            }
          },
          "required": ["name", "displayName", "reportsTo"]
        },
        "UpdateRoleDto": {
          "type": "object",
          "properties": {
            "displayName": {
              "type": "string"
            },
            "reportsTo": {
              "type": "string"
            }
          }
        },
        "ProfileCollection": {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ProfileResponse"
              }
            },
            "pageInfo": {
              "$ref": "#/components/schemas/PageInfoType"
            }
          },
          "required": ["data", "pageInfo"]
        },
        "CreateProfileDto": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            }
          },
          "required": ["name"]
        },
        "UpdateProfileDto": {
          "type": "object",
          "properties": {
            "description": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            }
          }
        },
        "OwnerAttributesResponse": {
          "type": "object",
          "properties": {
            "shareFromRole": {
              "$ref": "#/components/schemas/RoleBasicResponse"
            },
            "shareToRole": {
              "$ref": "#/components/schemas/RoleBasicResponse"
            },
            "shareFromType": {
              "enum": ["role", "role-and-subordinates"],
              "type": "string"
            },
            "shareToType": {
              "enum": ["role", "role-and-subordinates"],
              "type": "string"
            }
          },
          "required": ["shareFromRole", "shareToRole", "shareFromType", "shareToType"]
        },
        "CriteriaAttributesResponse": {
          "type": "object",
          "properties": {
            "notImplement": {
              "type": "boolean"
            }
          }
        },
        "SharingRuleResponse": {
          "type": "object",
          "properties": {
            "attributes": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/OwnerAttributesResponse"
                },
                {
                  "$ref": "#/components/schemas/CriteriaAttributesResponse"
                }
              ],
              "allOf": [
                {
                  "$ref": "#/components/schemas/OwnerAttributesResponse"
                }
              ]
            },
            "name": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "type": {
              "enum": ["record-owner", "criteria"],
              "type": "string"
            },
            "accessType": {
              "enum": ["read-write", "read-only"],
              "type": "string"
            },
            "object": {
              "$ref": "#/components/schemas/NameDisplayName"
            },
            "id": {
              "type": "string"
            },
            "createdAt": {
              "type": "string"
            },
            "updatedAt": {
              "type": "string"
            }
          },
          "required": [
            "attributes",
            "name",
            "displayName",
            "type",
            "accessType",
            "object",
            "id",
            "createdAt",
            "updatedAt"
          ]
        },
        "CriteriaSharingAttributes": {
          "type": "object",
          "properties": {
            "notImplement": {
              "type": "boolean"
            }
          }
        },
        "OwnerSharingAttributes": {
          "type": "object",
          "properties": {
            "shareFromRoleName": {
              "type": "string"
            },
            "shareFromType": {
              "enum": ["role", "role-and-subordinates"],
              "type": "string"
            },
            "shareToRoleName": {
              "type": "string"
            },
            "shareToType": {
              "enum": ["role", "role-and-subordinates"],
              "type": "string"
            }
          },
          "required": ["shareFromRoleName", "shareFromType", "shareToRoleName", "shareToType"]
        },
        "CreateSharingRuleDto": {
          "type": "object",
          "properties": {
            "attributes": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/CriteriaSharingAttributes"
                },
                {
                  "$ref": "#/components/schemas/OwnerSharingAttributes"
                }
              ]
            },
            "name": {
              "type": "string"
            },
            "type": {
              "type": "string",
              "enum": ["record-owner", "criteria"]
            },
            "displayName": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "objectName": {
              "type": "string"
            },
            "accessType": {
              "type": "string",
              "enum": ["read-write", "read-only"]
            }
          },
          "required": ["attributes", "name", "type", "displayName", "objectName", "accessType"]
        },
        "UpdateSharingRuleDto": {
          "type": "object",
          "properties": {
            "attributes": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/CriteriaSharingAttributes"
                },
                {
                  "$ref": "#/components/schemas/OwnerSharingAttributes"
                }
              ]
            },
            "type": {
              "type": "string",
              "enum": ["record-owner", "criteria"]
            },
            "displayName": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "objectName": {
              "type": "string"
            },
            "accessType": {
              "type": "string",
              "enum": ["read-write", "read-only"]
            }
          },
          "required": ["type"]
        },
        "ProfileAccessResponse": {
          "type": "object",
          "properties": {
            "create": {
              "type": "boolean"
            },
            "read": {
              "type": "boolean"
            },
            "update": {
              "type": "boolean"
            },
            "delete": {
              "type": "boolean"
            },
            "displayName": {
              "type": "string"
            }
          },
          "required": ["create", "read", "update", "delete", "displayName"]
        },
        "ProfileObjectItemDto": {
          "type": "object",
          "properties": {
            "objName": {
              "type": "string"
            },
            "access": {
              "$ref": "#/components/schemas/ProfileAccess"
            }
          },
          "required": ["objName", "access"]
        },
        "UpsertProfileAccessDto": {
          "type": "object",
          "properties": {
            "items": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ProfileObjectItemDto"
              }
            }
          },
          "required": ["items"]
        },
        "ProfileFeatureDto": {
          "type": "object",
          "properties": {
            "featureName": {
              "type": "string",
              "enum": [
                "application-layout",
                "user",
                "organization",
                "flow",
                "mo-integration",
                "event"
              ]
            },
            "access": {
              "$ref": "#/components/schemas/ProfileAccess"
            }
          },
          "required": ["featureName", "access"]
        },
        "UpsertProfileFeatureDto": {
          "type": "object",
          "properties": {
            "items": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ProfileFeatureDto"
              }
            }
          },
          "required": ["items"]
        },
        "DivisionResponse": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            },
            "id": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "isDefaultAssigned": {
              "type": "boolean"
            },
            "createdAt": {
              "type": "string"
            },
            "updatedAt": {
              "type": "string"
            }
          },
          "required": ["name", "displayName", "id", "createdAt", "updatedAt"]
        },
        "CreateDivisionDto": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "isDefaultAssigned": {
              "type": "boolean"
            }
          },
          "required": ["name"]
        },
        "UpdateDivisionDto": {
          "type": "object",
          "properties": {
            "description": {
              "type": "string"
            },
            "isDefaultAssigned": {
              "type": "boolean"
            }
          }
        },
        "ListFilterOperator": {
          "type": "object",
          "properties": {
            "displayName": {
              "type": "string"
            },
            "value": {
              "enum": [
                "===",
                "!==",
                "isIn",
                "isNotIn",
                "notContains",
                "contains",
                "between",
                "<=",
                ">=",
                "<",
                ">",
                "isNull",
                "isNotNull"
              ],
              "type": "string"
            }
          },
          "required": ["displayName", "value"]
        },
        "TriggerObjectResponse": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": ["object"]
            },
            "action": {
              "enum": ["new", "get", "edit", "delete", "share", "managed"],
              "type": "string"
            },
            "displayName": {
              "type": "string"
            }
          },
          "required": ["type", "action", "displayName"]
        },
        "OutputFlowVariableResponse": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "type": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            }
          },
          "required": ["name", "type", "displayName"]
        },
        "TriggerFlowResponse": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": ["flow"]
            },
            "flowName": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            },
            "outputVariables": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/OutputFlowVariableResponse"
              }
            }
          },
          "required": ["type", "flowName", "displayName", "outputVariables"]
        },
        "ListLayoutQuery": {
          "type": "object",
          "properties": {
            "offset": {
              "type": "number",
              "default": 0
            },
            "limit": {
              "type": "number",
              "default": 20
            },
            "sortOrder": {
              "enum": ["ASC", "DESC"],
              "type": "string"
            },
            "sortBy": {
              "type": "string"
            },
            "searchText": {
              "type": "string"
            },
            "objectName": {
              "type": "string"
            },
            "type": {
              "type": "string",
              "enum": ["dashboard", "app-page", "record-page"]
            },
            "tagNames": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "onlyDeleted": {
              "type": "boolean"
            }
          }
        },
        "LayoutResponse": {
          "type": "object",
          "properties": {
            "script": {
              "type": "object"
            },
            "id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "type": {
              "enum": ["dashboard", "app-page", "record-page"],
              "type": "string"
            },
            "objectName": {
              "type": "string"
            },
            "createdAt": {
              "format": "date-time",
              "type": "string"
            },
            "updatedAt": {
              "format": "date-time",
              "type": "string"
            },
            "tags": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/TagResponse"
              }
            },
            "object": {
              "$ref": "#/components/schemas/NameDisplayName"
            }
          },
          "required": ["script", "id", "name", "displayName", "type", "createdAt", "updatedAt"]
        },
        "LayoutCollection": {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/LayoutResponse"
              }
            },
            "pageInfo": {
              "$ref": "#/components/schemas/PageInfoType"
            }
          },
          "required": ["data", "pageInfo"]
        },
        "CreateLayoutDto": {
          "type": "object",
          "properties": {
            "objectName": {
              "type": "string",
              "description": "Only required for record-page"
            },
            "name": {
              "type": "string",
              "pattern": "nameRegex"
            },
            "displayName": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "type": {
              "type": "string",
              "enum": ["dashboard", "app-page", "record-page"]
            },
            "tagNames": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "required": ["name", "displayName", "type"]
        },
        "UpdateLayoutDto": {
          "type": "object",
          "properties": {
            "displayName": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "tagNames": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "ComponentDto": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "label": {
              "type": "string"
            },
            "type": {
              "type": "string"
            },
            "component": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "ObjectList",
                    "ObjectListV2",
                    "DataTable",
                    "RecordDetail",
                    "Flow",
                    "Button",
                    "RelatedList",
                    "Section",
                    "Tab",
                    "RelatedDetail",
                    "FirstRelationDetails"
                  ]
                },
                {
                  "type": "string"
                }
              ]
            },
            "props": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/RootProps"
                },
                {
                  "$ref": "#/components/schemas/ListProps"
                },
                {
                  "$ref": "#/components/schemas/RecordProps"
                },
                {
                  "$ref": "#/components/schemas/RelatedProps"
                },
                {
                  "$ref": "#/components/schemas/SectionProps"
                },
                {
                  "$ref": "#/components/schemas/TabProps"
                },
                {
                  "$ref": "#/components/schemas/ListV2Props"
                },
                {
                  "$ref": "#/components/schemas/TriggerObjectProps"
                },
                {
                  "$ref": "#/components/schemas/TriggerFlowProps"
                }
              ]
            },
            "children": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "required": ["id", "label", "type", "component", "props", "children"]
        },
        "UpdateScriptDto": {
          "type": "object",
          "properties": {
            "script": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/components/schemas/ComponentDto"
              }
            }
          },
          "required": ["script"]
        },
        "CloneLayoutDto": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "pattern": "nameRegex"
            },
            "displayName": {
              "type": "string"
            }
          },
          "required": ["name", "displayName"]
        },
        "AssignAppPageToAppsDto": {
          "type": "object",
          "properties": {
            "appIds": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "required": ["appIds"]
        },
        "AppProfileDto": {
          "type": "object",
          "properties": {
            "appId": {
              "type": "string"
            },
            "profileId": {
              "type": "string"
            }
          },
          "required": ["appId", "profileId"]
        },
        "AssignToAppAndProfileDto": {
          "type": "object",
          "properties": {
            "input": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/AppProfileDto"
              }
            }
          },
          "required": ["input"]
        },
        "AppLayoutResponse": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            }
          },
          "required": ["id", "name"]
        },
        "ProfileLayoutResponse": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            }
          },
          "required": ["id", "name"]
        },
        "AppProfileLayoutResponse": {
          "type": "object",
          "properties": {
            "application": {
              "$ref": "#/components/schemas/AppLayoutResponse"
            },
            "profile": {
              "$ref": "#/components/schemas/ProfileLayoutResponse"
            }
          },
          "required": ["application", "profile"]
        },
        "GroupByQuery": {
          "type": "object",
          "properties": {
            "limit": {
              "type": "number",
              "default": 20
            },
            "sortOrder": {
              "enum": ["ASC", "DESC"],
              "type": "string"
            },
            "groupBys": {
              "type": "array",
              "items": {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "object"
                  },
                  {
                    "type": "boolean"
                  }
                ]
              }
            },
            "excludes": {
              "type": "array",
              "items": {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "object"
                  },
                  {
                    "type": "boolean"
                  }
                ]
              }
            },
            "objName": {
              "type": "string"
            },
            "fieldName": {
              "type": "string"
            },
            "searchText": {
              "type": "string"
            }
          },
          "required": ["objName", "fieldName"]
        },
        "ValueLabel": {
          "type": "object",
          "properties": {
            "value": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                },
                {
                  "type": "object"
                },
                {
                  "type": "boolean"
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "array",
                  "items": {
                    "type": "number"
                  }
                },
                {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                },
                {
                  "type": "array",
                  "items": {
                    "type": "boolean"
                  }
                }
              ]
            },
            "label": {
              "type": "string"
            }
          },
          "required": ["value", "label"]
        },
        "ValueLabelCollection": {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ValueLabel"
              }
            },
            "pageInfo": {
              "$ref": "#/components/schemas/PageInfoType"
            }
          },
          "required": ["data", "pageInfo"]
        },
        "ObjNameParams": {
          "type": "object",
          "properties": {
            "objName": {
              "type": "string",
              "description": "Object name"
            }
          },
          "required": ["objName"]
        },
        "ObjWithNameParams": {
          "type": "object",
          "properties": {
            "objName": {
              "type": "string",
              "description": "Object name"
            },
            "name": {
              "type": "string"
            }
          },
          "required": ["objName", "name"]
        },
        "FieldAttributes": {
          "type": "object",
          "properties": {
            "filters": {
              "type": "array",
              "items": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FilterItem"
                }
              }
            },
            "defaultValue": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                },
                {
                  "type": "object"
                },
                {
                  "type": "boolean"
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "array",
                  "items": {
                    "type": "number"
                  }
                },
                {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                },
                {
                  "type": "array",
                  "items": {
                    "type": "boolean"
                  }
                }
              ]
            },
            "onDelete": {
              "enum": ["noAction", "setNull", "cascade"],
              "type": "string",
              "description": "Use with relation field. 'SET_NULL' requires 'isRequired'=false"
            },
            "sensitivity": {
              "enum": ["none", "partial", "all"],
              "type": "string",
              "description": "Currently applied for short text only. 'Partial' will only expose the last 4 characters. 'All' will hide everything & return '****'"
            },
            "pickListLvl": {
              "type": "number",
              "minimum": 1,
              "description": "Levels of picklist items, only applicable for single selection"
            },
            "subType": {
              "type": "string"
            },
            "template": {
              "type": "string"
            },
            "isUnique": {
              "type": "boolean"
            },
            "isSearchable": {
              "type": "boolean"
            },
            "isSortable": {
              "type": "boolean"
            },
            "isReadOnly": {
              "type": "boolean"
            },
            "objectNames": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "includeExtended": {
              "type": "boolean"
            },
            "operation": {
              "type": "string",
              "enum": ["sum", "count"]
            },
            "fileSizeLimit": {
              "type": "number"
            },
            "fileTypes": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "application/pdf",
                  "application/msword",
                  "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                  "application/vnd.ms-excel",
                  "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
                  "application/vnd.ms-powerpoint",
                  "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                  "text/plain",
                  "text/csv",
                  "text/markdown",
                  "image/jpeg",
                  "image/png",
                  "image/gif",
                  "video/mp4",
                  "audio/mpeg",
                  "video/quicktime",
                  "video/x-flv",
                  "video/x-matroska",
                  "audio/x-ms-wma",
                  "audio/m4a",
                  "video/x-m4v"
                ]
              }
            },
            "numberFormat": {
              "$ref": "#/components/schemas/NumberFormat"
            },
            "formatter": {
              "type": "object"
            }
          }
        },
        "DataTypeResponse": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "id": {
              "type": "string"
            },
            "systemType": {
              "type": "string",
              "enum": [
                "numeric",
                "text",
                "dateTime",
                "boolean",
                "pickList",
                "json",
                "generated",
                "currency",
                "externalRelation",
                "indirectRelation",
                "relation",
                "objectReference",
                "flowReference",
                "rollup",
                "formula",
                "file"
              ]
            },
            "displayName": {
              "type": "string"
            },
            "attributes": {
              "type": "object"
            }
          },
          "required": ["name", "id", "systemType", "displayName", "attributes"]
        },
        "FieldResponse": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            },
            "isRequired": {
              "type": "boolean"
            },
            "description": {
              "type": "string"
            },
            "isExternalId": {
              "type": "boolean"
            },
            "attributes": {
              "$ref": "#/components/schemas/FieldAttributes"
            },
            "isSystemDefault": {
              "type": "boolean"
            },
            "value": {
              "type": "string"
            },
            "pickListId": {
              "type": "string"
            },
            "isDeleted": {
              "type": "boolean"
            },
            "dataType": {
              "$ref": "#/components/schemas/DataTypeResponse"
            },
            "createdAt": {
              "format": "date-time",
              "type": "string"
            },
            "updatedAt": {
              "format": "date-time",
              "type": "string"
            }
          },
          "required": [
            "id",
            "name",
            "displayName",
            "isRequired",
            "description",
            "isExternalId",
            "attributes",
            "isSystemDefault",
            "isDeleted",
            "dataType",
            "createdAt",
            "updatedAt"
          ]
        },
        "FieldAttributesDto": {
          "type": "object",
          "properties": {
            "filters": {
              "type": "array",
              "items": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FilterItem"
                }
              }
            },
            "defaultValue": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                },
                {
                  "type": "object"
                },
                {
                  "type": "boolean"
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "array",
                  "items": {
                    "type": "number"
                  }
                },
                {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                },
                {
                  "type": "array",
                  "items": {
                    "type": "boolean"
                  }
                }
              ]
            },
            "onDelete": {
              "enum": ["noAction", "setNull", "cascade"],
              "type": "string",
              "description": "Use with relation field. 'SET_NULL' requires 'isRequired'=false"
            },
            "sensitivity": {
              "enum": ["none", "partial", "all"],
              "type": "string",
              "description": "Currently applied for short text only. 'Partial' will only expose the last 4 characters. 'All' will hide everything & return '****'"
            },
            "pickListLvl": {
              "type": "number",
              "minimum": 1,
              "description": "Levels of picklist items, only applicable for single selection"
            },
            "subType": {
              "type": "string"
            },
            "template": {
              "type": "string"
            },
            "isUnique": {
              "type": "boolean"
            },
            "isSearchable": {
              "type": "boolean"
            },
            "isSortable": {
              "type": "boolean"
            },
            "objectNames": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "includeExtended": {
              "type": "boolean"
            },
            "operation": {
              "type": "string",
              "enum": ["sum", "count"]
            },
            "fileSizeLimit": {
              "type": "number"
            },
            "fileTypes": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "application/pdf",
                  "application/msword",
                  "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                  "application/vnd.ms-excel",
                  "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
                  "application/vnd.ms-powerpoint",
                  "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                  "text/plain",
                  "text/csv",
                  "text/markdown",
                  "image/jpeg",
                  "image/png",
                  "image/gif",
                  "video/mp4",
                  "audio/mpeg",
                  "video/quicktime",
                  "video/x-flv",
                  "video/x-matroska",
                  "audio/x-ms-wma",
                  "audio/m4a",
                  "video/x-m4v"
                ]
              }
            },
            "numberFormat": {
              "$ref": "#/components/schemas/NumberFormat"
            },
            "formatter": {
              "type": "object"
            }
          }
        },
        "FieldCreateDto": {
          "type": "object",
          "properties": {
            "typeName": {
              "type": "string",
              "enum": [
                "numeric",
                "text",
                "dateTime",
                "boolean",
                "pickList",
                "json",
                "generated",
                "currency",
                "externalRelation",
                "relation",
                "objectReference",
                "flowReference",
                "rollup",
                "file"
              ]
            },
            "isRequired": {
              "type": "boolean",
              "default": false
            },
            "isExternalId": {
              "type": "boolean",
              "default": false
            },
            "value": {
              "type": "string",
              "description": "value can be: \n\n    For relation/externalRelation: targetObjectName\n    For indirectRelation: targetObjectName.externalFieldName\n    For rollup: ChildObjectName.relationFieldName.rollupFieldName\n  "
            },
            "pickListName": {
              "type": "string"
            },
            "name": {
              "type": "string",
              "pattern": "nameRegex"
            },
            "displayName": {
              "type": "string"
            },
            "attributes": {
              "$ref": "#/components/schemas/FieldAttributesDto"
            },
            "pickListId": {
              "type": "string"
            },
            "description": {
              "type": "string"
            }
          },
          "required": ["typeName", "name", "displayName", "attributes"]
        },
        "FieldUpdateDto": {
          "type": "object",
          "properties": {
            "isRequired": {
              "type": "boolean",
              "default": false
            },
            "isExternalId": {
              "type": "boolean",
              "default": false
            },
            "value": {
              "type": "string",
              "description": "value can be: \n\n    For relation/externalRelation: targetObjectName\n    For indirectRelation: targetObjectName.externalFieldName\n    For rollup: ChildObjectName.relationFieldName.rollupFieldName\n  "
            },
            "pickListName": {
              "type": "string"
            },
            "typeName": {
              "type": "string",
              "enum": [
                "numeric",
                "text",
                "dateTime",
                "boolean",
                "pickList",
                "json",
                "generated",
                "currency",
                "externalRelation",
                "relation",
                "objectReference",
                "flowReference",
                "rollup",
                "file"
              ]
            },
            "displayName": {
              "type": "string"
            },
            "attributes": {
              "$ref": "#/components/schemas/FieldAttributesDto"
            },
            "description": {
              "type": "string"
            },
            "pickListId": {
              "type": "string"
            }
          }
        },
        "LayoutComponent": {
          "type": "object",
          "properties": {
            "layoutId": {
              "type": "string"
            },
            "componentIds": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "required": ["layoutId", "componentIds"]
        },
        "FieldDto": {
          "type": "object",
          "properties": {
            "data": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/FieldCreateDto"
                },
                {
                  "$ref": "#/components/schemas/FieldUpdateDto"
                }
              ]
            },
            "updateLayouts": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/LayoutComponent"
              }
            },
            "action": {
              "enum": ["create", "update", "delete", "recover"],
              "type": "string"
            },
            "name": {
              "type": "string"
            }
          },
          "required": ["action"]
        },
        "ScriptDetailComponent": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "label": {
              "type": "string"
            },
            "isPrimary": {
              "type": "boolean"
            },
            "fieldExists": {
              "type": "boolean"
            }
          },
          "required": ["id", "label", "isPrimary", "fieldExists"]
        },
        "ObjRecordLayoutResponse": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            },
            "components": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ScriptDetailComponent"
              }
            }
          },
          "required": ["id", "name", "displayName", "components"]
        },
        "ObjectRecordName": {
          "type": "object",
          "properties": {
            "label": {
              "type": "string"
            },
            "type": {
              "type": "string",
              "enum": ["text"]
            }
          },
          "required": ["label", "type"]
        },
        "ObjectResponse": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "isSystemDefault": {
              "type": "boolean"
            },
            "description": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            },
            "orgId": {
              "type": "number"
            },
            "isHidden": {
              "type": "boolean"
            },
            "isExternal": {
              "type": "boolean"
            },
            "createdAt": {
              "format": "date-time",
              "type": "string"
            },
            "updatedAt": {
              "format": "date-time",
              "type": "string"
            },
            "recordName": {
              "$ref": "#/components/schemas/ObjectRecordName"
            },
            "owd": {
              "enum": ["PublicRead", "PublicReadWrite", "Private"],
              "type": "string"
            },
            "tags": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/TagResponse"
              }
            }
          },
          "required": [
            "id",
            "name",
            "isSystemDefault",
            "displayName",
            "orgId",
            "isHidden",
            "isExternal",
            "recordName",
            "owd"
          ]
        },
        "ObjectListQuery": {
          "type": "object",
          "properties": {
            "offset": {
              "type": "number",
              "default": 0
            },
            "limit": {
              "type": "number",
              "default": 20
            },
            "sortBy": {
              "type": "string",
              "enum": ["createdAt", "displayName", "isSystemDefault", "name", "updatedAt"]
            },
            "sortOrder": {
              "type": "string",
              "enum": ["ASC", "DESC"]
            },
            "tagNames": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "onlyDeleted": {
              "type": "boolean"
            },
            "searchText": {
              "type": "string"
            },
            "type": {
              "enum": ["object", "event"],
              "type": "string"
            }
          }
        },
        "ObjectCollection": {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ObjectResponse"
              }
            },
            "pageInfo": {
              "$ref": "#/components/schemas/PageInfoType"
            }
          },
          "required": ["data", "pageInfo"]
        },
        "CreateRecordNameDto": {
          "type": "object",
          "properties": {
            "label": {
              "type": "string"
            },
            "type": {
              "type": "string",
              "enum": ["text"]
            }
          },
          "required": ["label", "type"]
        },
        "ObjectCreateDto": {
          "type": "object",
          "properties": {
            "displayName": {
              "type": "string"
            },
            "recordName": {
              "$ref": "#/components/schemas/CreateRecordNameDto"
            },
            "owd": {
              "enum": ["PublicRead", "PublicReadWrite", "Private"],
              "type": "string"
            },
            "tagNames": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "name": {
              "type": "string",
              "pattern": "nameRegex"
            },
            "description": {
              "type": "string"
            }
          },
          "required": ["displayName", "recordName", "name"]
        },
        "UpdateRecordNameDto": {
          "type": "object",
          "properties": {
            "label": {
              "type": "string"
            },
            "type": {
              "type": "string",
              "enum": ["text"]
            }
          }
        },
        "ObjectUpdateDto": {
          "type": "object",
          "properties": {
            "displayName": {
              "type": "string"
            },
            "recordName": {
              "$ref": "#/components/schemas/UpdateRecordNameDto"
            },
            "owd": {
              "enum": ["PublicRead", "PublicReadWrite", "Private"],
              "type": "string"
            },
            "tagNames": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": {
              "type": "string"
            }
          }
        },
        "ObjectDto": {
          "type": "object",
          "properties": {
            "data": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ObjectCreateDto"
                },
                {
                  "$ref": "#/components/schemas/ObjectUpdateDto"
                }
              ]
            },
            "action": {
              "enum": ["create", "update", "delete", "recover"],
              "type": "string"
            },
            "name": {
              "type": "string"
            }
          },
          "required": ["action"]
        },
        "RuleItem": {
          "type": "object",
          "properties": {
            "fieldName": {
              "type": "string"
            },
            "operator": {
              "type": "string",
              "enum": [
                "===",
                "!==",
                "isDefined",
                "isEmpty",
                "isNotEmpty",
                "isIn",
                "isNotIn",
                "isNegative",
                "isPositive",
                "<=",
                ">=",
                "<",
                ">",
                "minDate",
                "maxDate",
                "contains",
                "notContains"
              ]
            },
            "value": {
              "type": "string"
            }
          },
          "required": ["fieldName", "operator"]
        },
        "AndLogicRule": {
          "type": "object",
          "properties": {
            "rules": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/RuleItem"
              }
            }
          },
          "required": ["rules"]
        },
        "ValidationRuleResponse": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "isSystemDefault": {
              "type": "boolean"
            },
            "script": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/AndLogicRule"
              }
            },
            "errorMessage": {
              "type": "string"
            },
            "isHidden": {
              "type": "boolean"
            },
            "createdAt": {
              "format": "date-time",
              "type": "string"
            },
            "updatedAt": {
              "format": "date-time",
              "type": "string"
            }
          },
          "required": [
            "id",
            "name",
            "displayName",
            "description",
            "isSystemDefault",
            "script",
            "errorMessage",
            "isHidden",
            "createdAt",
            "updatedAt"
          ]
        },
        "RuleCreateDto": {
          "type": "object",
          "properties": {
            "displayName": {
              "type": "string"
            },
            "script": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/AndLogicRule"
              }
            },
            "errorMessage": {
              "type": "string"
            },
            "name": {
              "type": "string",
              "pattern": "nameRegex"
            },
            "description": {
              "type": "string"
            }
          },
          "required": ["displayName", "script", "errorMessage", "name"]
        },
        "RuleUpdateDto": {
          "type": "object",
          "properties": {
            "displayName": {
              "type": "string"
            },
            "script": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/AndLogicRule"
              }
            },
            "errorMessage": {
              "type": "string"
            },
            "description": {
              "type": "string"
            }
          }
        },
        "RuleDto": {
          "type": "object",
          "properties": {
            "data": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/RuleCreateDto"
                },
                {
                  "$ref": "#/components/schemas/RuleUpdateDto"
                }
              ]
            },
            "action": {
              "type": "string",
              "enum": ["create", "update", "delete", "recover"]
            },
            "name": {
              "type": "string"
            }
          },
          "required": ["action"]
        },
        "EventListQuery": {
          "type": "object",
          "properties": {
            "offset": {
              "type": "number",
              "default": 0
            },
            "limit": {
              "type": "number",
              "default": 20
            },
            "sortBy": {
              "type": "string",
              "enum": ["createdAt", "displayName", "isSystemDefault", "name", "updatedAt"]
            },
            "sortOrder": {
              "type": "string",
              "enum": ["ASC", "DESC"]
            },
            "tagNames": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "onlyDeleted": {
              "type": "boolean"
            },
            "searchText": {
              "type": "string"
            },
            "type": {
              "enum": ["object", "event"],
              "type": "string"
            },
            "includeSystemEvent": {
              "type": "boolean"
            }
          }
        },
        "EventFieldCreateDto": {
          "type": "object",
          "properties": {
            "isRequired": {
              "type": "boolean",
              "default": false
            },
            "value": {
              "type": "string",
              "description": "value can be: \n\n    For relation/externalRelation: targetObjectName\n    For indirectRelation: targetObjectName.externalFieldName\n    For rollup: ChildObjectName.relationFieldName.rollupFieldName\n  "
            },
            "pickListName": {
              "type": "string"
            },
            "typeName": {
              "type": "string",
              "enum": [
                "numeric",
                "text",
                "dateTime",
                "boolean",
                "pickList",
                "json",
                "generated",
                "externalRelation",
                "relation",
                "file"
              ]
            },
            "name": {
              "type": "string",
              "pattern": "nameRegex"
            },
            "displayName": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "attributes": {
              "$ref": "#/components/schemas/FieldAttributesDto"
            },
            "pickListId": {
              "type": "string"
            }
          },
          "required": ["typeName", "name", "displayName", "attributes"]
        },
        "EventFieldDto": {
          "type": "object",
          "properties": {
            "data": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/FieldCreateDto"
                },
                {
                  "$ref": "#/components/schemas/FieldUpdateDto"
                }
              ]
            },
            "action": {
              "type": "string",
              "enum": ["create", "update", "delete", "recover"]
            },
            "name": {
              "type": "string"
            },
            "updateLayouts": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/LayoutComponent"
              }
            }
          },
          "required": ["action"]
        },
        "ExtFieldAttributesDto": {
          "type": "object",
          "properties": {
            "filters": {
              "type": "array",
              "items": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FilterItem"
                }
              }
            },
            "sensitivity": {
              "enum": ["none", "partial", "all"],
              "type": "string",
              "description": "Currently applied for short text only. 'Partial' will only expose the last 4 characters. 'All' will hide everything & return '****'"
            },
            "subType": {
              "type": "string"
            },
            "numberFormat": {
              "$ref": "#/components/schemas/NumberFormat"
            },
            "formatter": {
              "type": "object"
            }
          }
        },
        "ExtFieldCreateDto": {
          "type": "object",
          "properties": {
            "isRequired": {
              "type": "boolean",
              "default": false
            },
            "isExternalId": {
              "type": "boolean",
              "default": false
            },
            "value": {
              "type": "string",
              "description": "value can be: \n\n    For relation/externalRelation: targetObjectName\n    For indirectRelation: targetObjectName.externalFieldName\n    For rollup: ChildObjectName.relationFieldName.rollupFieldName\n  "
            },
            "pickListName": {
              "type": "string"
            },
            "typeName": {
              "type": "string",
              "enum": [
                "numeric",
                "text",
                "dateTime",
                "boolean",
                "pickList",
                "json",
                "currency",
                "externalRelation",
                "indirectRelation",
                "relation",
                "file"
              ]
            },
            "attributes": {
              "$ref": "#/components/schemas/ExtFieldAttributesDto"
            },
            "name": {
              "type": "string",
              "pattern": "nameRegex"
            },
            "displayName": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "pickListId": {
              "type": "string"
            }
          },
          "required": ["typeName", "attributes", "name", "displayName"]
        },
        "ExtFieldUpdateDto": {
          "type": "object",
          "properties": {
            "isRequired": {
              "type": "boolean",
              "default": false
            },
            "isExternalId": {
              "type": "boolean",
              "default": false
            },
            "value": {
              "type": "string",
              "description": "value can be: \n\n    For relation/externalRelation: targetObjectName\n    For indirectRelation: targetObjectName.externalFieldName\n    For rollup: ChildObjectName.relationFieldName.rollupFieldName\n  "
            },
            "pickListName": {
              "type": "string"
            },
            "typeName": {
              "type": "string",
              "enum": [
                "numeric",
                "text",
                "dateTime",
                "boolean",
                "pickList",
                "json",
                "currency",
                "externalRelation",
                "indirectRelation",
                "relation",
                "file"
              ]
            },
            "displayName": {
              "type": "string"
            },
            "attributes": {
              "$ref": "#/components/schemas/ExtFieldAttributesDto"
            },
            "description": {
              "type": "string"
            },
            "pickListId": {
              "type": "string"
            }
          }
        },
        "ExtFieldDto": {
          "type": "object",
          "properties": {
            "data": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ExtFieldCreateDto"
                },
                {
                  "$ref": "#/components/schemas/ExtFieldUpdateDto"
                }
              ]
            },
            "action": {
              "type": "string",
              "enum": ["create", "update", "delete", "recover"]
            },
            "name": {
              "type": "string"
            },
            "updateLayouts": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/LayoutComponent"
              }
            }
          },
          "required": ["action"]
        },
        "FieldAttributeMeta": {
          "type": "object",
          "properties": {
            "displayName": {
              "type": "string"
            },
            "options": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "required": ["displayName"]
        },
        "DataTypeExtendedResponse": {
          "type": "object",
          "properties": {
            "availableAttributes": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/components/schemas/FieldAttributeMeta"
              }
            },
            "description": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "id": {
              "type": "string"
            },
            "systemType": {
              "enum": [
                "numeric",
                "text",
                "dateTime",
                "boolean",
                "pickList",
                "json",
                "generated",
                "currency",
                "externalRelation",
                "indirectRelation",
                "relation",
                "objectReference",
                "flowReference",
                "rollup",
                "formula",
                "file"
              ],
              "type": "string"
            },
            "displayName": {
              "type": "string"
            },
            "attributes": {
              "type": "object"
            }
          },
          "required": [
            "availableAttributes",
            "name",
            "id",
            "systemType",
            "displayName",
            "attributes"
          ]
        },
        "DataTypeRollupOperations": {
          "type": "object",
          "properties": {
            "data": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "enum": ["sum", "count"]
                }
              }
            }
          },
          "required": ["data"]
        },
        "ExternalIdFieldResponse": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            }
          },
          "required": ["name", "displayName"]
        },
        "IndirectRelationResponse": {
          "type": "object",
          "properties": {
            "fields": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ExternalIdFieldResponse"
              }
            },
            "name": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            }
          },
          "required": ["fields", "name", "displayName"]
        },
        "FieldSchemaViewer": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "type": {
              "type": "string",
              "enum": [
                "numeric",
                "text",
                "dateTime",
                "boolean",
                "pickList",
                "json",
                "generated",
                "currency",
                "externalRelation",
                "indirectRelation",
                "relation",
                "objectReference",
                "flowReference",
                "rollup",
                "formula",
                "file"
              ]
            },
            "subType": {
              "type": "string"
            },
            "isGenerated": {
              "type": "boolean"
            },
            "isPrimaryKey": {
              "type": "boolean"
            },
            "isRelation": {
              "type": "boolean"
            },
            "isUnique": {
              "type": "boolean"
            },
            "isRequired": {
              "type": "boolean"
            },
            "isReadOnly": {
              "type": "boolean"
            },
            "error": {
              "$ref": "#/components/schemas/NuclentErrorResponse"
            }
          },
          "required": [
            "name",
            "displayName",
            "type",
            "subType",
            "isGenerated",
            "isPrimaryKey",
            "isRelation",
            "isUnique",
            "isRequired",
            "isReadOnly"
          ]
        },
        "RelationViewer": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "objName": {
              "type": "string"
            },
            "fieldName": {
              "type": "string"
            },
            "label": {
              "type": "string"
            }
          },
          "required": ["id", "objName", "fieldName", "label"]
        },
        "SchemaViewerResponse": {
          "type": "object",
          "properties": {
            "fields": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/FieldSchemaViewer"
              }
            },
            "relations": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/RelationViewer"
              }
            },
            "name": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "id": {
              "type": "string"
            }
          },
          "required": ["fields", "relations", "name", "displayName", "id"]
        },
        "ExtendedObjectResponse": {
          "type": "object",
          "properties": {
            "description": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            },
            "name": {
              "type": "string"
            }
          },
          "required": ["displayName", "name"]
        },
        "ExtendedObjectCreateDto": {
          "type": "object",
          "properties": {
            "description": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            },
            "name": {
              "type": "string",
              "pattern": "nameRegex"
            }
          },
          "required": ["displayName", "name"]
        },
        "ExtendedObjectUpdateDto": {
          "type": "object",
          "properties": {
            "description": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            }
          }
        },
        "ExtendedObjectDto": {
          "type": "object",
          "properties": {
            "data": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ExtendedObjectCreateDto"
                },
                {
                  "$ref": "#/components/schemas/ExtendedObjectUpdateDto"
                }
              ]
            },
            "action": {
              "type": "string",
              "enum": ["create", "update", "delete", "recover"]
            },
            "name": {
              "type": "string"
            }
          },
          "required": ["action"]
        },
        "ObjectIndexConfigResponse": {
          "type": "object",
          "properties": {
            "fieldName": {
              "type": "string"
            },
            "order": {
              "type": "string",
              "enum": ["asc", "desc"]
            }
          },
          "required": ["fieldName", "order"]
        },
        "ObjectIndexResponse": {
          "type": "object",
          "properties": {
            "source": {
              "type": "string",
              "readOnly": true,
              "enum": ["user-created", "object-schema"]
            },
            "name": {
              "type": "string"
            },
            "config": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ObjectIndexConfigResponse"
              }
            },
            "dbIndexCreated": {
              "type": "boolean"
            },
            "fieldNames": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "unique": {
              "type": "boolean"
            },
            "editable": {
              "type": "boolean"
            }
          },
          "required": ["source", "name", "config", "dbIndexCreated"]
        },
        "ObjectIndexConfigDto": {
          "type": "object",
          "properties": {
            "fieldName": {
              "type": "string"
            },
            "order": {
              "type": "string",
              "enum": ["asc", "desc"]
            }
          },
          "required": ["fieldName", "order"]
        },
        "ObjectIndexDto": {
          "type": "object",
          "properties": {
            "config": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ObjectIndexConfigDto"
              }
            }
          },
          "required": ["config"]
        },
        "ExtDataSourceInputMap": {
          "type": "object",
          "properties": {
            "value": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                },
                {
                  "type": "object"
                },
                {
                  "type": "boolean"
                }
              ],
              "description": "For template, to using variable, content should look like: {\\$variable-name}"
            },
            "type": {
              "enum": ["value", "variable", "template"],
              "type": "string"
            }
          },
          "required": ["value", "type"]
        },
        "ExtActionMetaConfiguration": {
          "type": "object",
          "properties": {
            "outputs": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/components/schemas/ResponseOutputType"
              }
            },
            "name": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            },
            "method": {
              "type": "string",
              "enum": ["post", "get", "put", "delete", "patch"]
            },
            "inputs": {
              "$ref": "#/components/schemas/InputMetadata"
            }
          },
          "required": ["outputs", "name", "displayName", "method", "inputs"]
        },
        "ExtDataSourceResponseMap": {
          "type": "object",
          "properties": {
            "total": {
              "type": "string"
            },
            "data": {
              "type": "string",
              "default": "body"
            },
            "externalId": {
              "type": "string",
              "default": "id"
            },
            "name": {
              "type": "string",
              "default": "name"
            }
          }
        },
        "ExtObjectDataSourceResponse": {
          "type": "object",
          "properties": {
            "actionMetadata": {
              "$ref": "#/components/schemas/ExtActionMetaConfiguration"
            },
            "inputMap": {
              "type": "object"
            },
            "statusCode": {
              "type": "number"
            },
            "responseMap": {
              "$ref": "#/components/schemas/ExtDataSourceResponseMap"
            }
          },
          "required": ["actionMetadata", "inputMap", "statusCode", "responseMap"]
        },
        "ObjectScriptDataSourceResponse": {
          "type": "object",
          "properties": {
            "credential": {
              "$ref": "#/components/schemas/NameDisplayName"
            },
            "script": {
              "type": "string"
            }
          },
          "required": ["script"]
        },
        "RequestVarType": {
          "type": "object",
          "properties": {
            "variable": {
              "type": "string"
            },
            "isRequired": {
              "type": "boolean"
            }
          },
          "required": ["variable", "isRequired"]
        },
        "ObjectDataSourceResponse": {
          "type": "object",
          "properties": {
            "data": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ObjectScriptDataSourceResponse"
                },
                {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/ExtObjectDataSourceResponse"
                  }
                }
              ]
            },
            "availableRequestVars": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/RequestVarType"
                }
              }
            },
            "availableResponseVars": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "type": {
              "enum": ["script", "ui-builder"],
              "type": "string"
            }
          },
          "required": ["data", "availableRequestVars", "availableResponseVars", "type"]
        },
        "UpdateDataSourceUiBuilderDto": {
          "type": "object",
          "properties": {
            "statusCode": {
              "type": "number",
              "minimum": 100,
              "maximum": 599,
              "default": "id"
            },
            "inputMap": {
              "type": "object",
              "description": "Key should start with path.,body,header.,query.",
              "additionalProperties": {
                "$ref": "#/components/schemas/ExtDataSourceInputMap"
              }
            },
            "responseMap": {
              "$ref": "#/components/schemas/ExtDataSourceResponseMap"
            },
            "actionMetadataName": {
              "type": "string"
            }
          }
        },
        "UpdateDataSourceDto": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": ["script", "ui-builder"]
            },
            "config": {
              "$ref": "#/components/schemas/UpdateDataSourceUiBuilderDto"
            },
            "action": {
              "type": "string",
              "enum": ["list", "item", "create", "update", "delete"]
            },
            "script": {
              "type": "string"
            },
            "credentialName": {
              "type": "string"
            }
          },
          "required": ["type"]
        },
        "TestDataSourceRequestResponse": {
          "type": "object",
          "properties": {
            "data": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                },
                {
                  "type": "object"
                },
                {
                  "type": "boolean"
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "array",
                  "items": {
                    "type": "number"
                  }
                },
                {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                },
                {
                  "type": "array",
                  "items": {
                    "type": "boolean"
                  }
                }
              ]
            },
            "headers": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "url": {
              "type": "string"
            },
            "status": {
              "type": "number"
            },
            "error": {
              "type": "string"
            },
            "code": {
              "type": "string"
            }
          }
        },
        "PickListQueryParams": {
          "type": "object",
          "properties": {
            "offset": {
              "type": "number",
              "default": 0
            },
            "limit": {
              "type": "number",
              "default": 20
            },
            "sortBy": {
              "type": "string",
              "enum": ["createdAt", "updatedAt", "name", "displayName"]
            },
            "sortOrder": {
              "enum": ["ASC", "DESC"],
              "type": "string"
            },
            "status": {
              "enum": ["ALL", "ACTIVE", "INACTIVE"],
              "type": "string"
            },
            "searchText": {
              "type": "string"
            },
            "tagNames": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "onlyDeleted": {
              "type": "boolean"
            }
          }
        },
        "PLResponse": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "id": {
              "type": "string"
            },
            "isActive": {
              "type": "boolean"
            },
            "itemLabels": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "updatedAt": {
              "format": "date-time",
              "type": "string"
            },
            "viewAttributes": {
              "type": "object"
            },
            "tags": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/TagResponse"
              }
            }
          },
          "required": ["name", "displayName", "id", "isActive", "itemLabels", "updatedAt"]
        },
        "PickListCollection": {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/PLResponse"
              }
            },
            "pageInfo": {
              "$ref": "#/components/schemas/PageInfoType"
            }
          },
          "required": ["data", "pageInfo"]
        },
        "MutatePickListItemDto": {
          "type": "object",
          "properties": {
            "action": {
              "enum": ["CREATE", "UPDATE", "DELETE", "RESTORE"],
              "type": "string"
            },
            "name": {
              "type": "string",
              "pattern": "nameRegex"
            },
            "displayName": {
              "type": "string"
            },
            "parentName": {
              "type": "string"
            },
            "attributes": {
              "type": "object"
            },
            "order": {
              "type": "number"
            }
          },
          "required": ["name"]
        },
        "CreatePickListDto": {
          "type": "object",
          "properties": {
            "items": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/MutatePickListItemDto"
              }
            },
            "itemLabels": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "viewAttributes": {
              "type": "object"
            },
            "tagNames": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "name": {
              "type": "string",
              "pattern": "nameRegex"
            },
            "displayName": {
              "type": "string"
            },
            "description": {
              "type": "string"
            }
          },
          "required": ["name", "displayName"]
        },
        "UpdatePickListDto": {
          "type": "object",
          "properties": {
            "displayName": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "itemLabels": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/MutatePickListItemDto"
              }
            },
            "viewAttributes": {
              "type": "object"
            },
            "tagNames": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "EmailTemplateResponse": {
          "type": "object",
          "properties": {
            "from": {
              "type": "string"
            },
            "to": {
              "type": "string"
            },
            "cc": {
              "type": "string"
            },
            "bcc": {
              "type": "string"
            },
            "subject": {
              "type": "string"
            },
            "html": {
              "type": "string"
            },
            "text": {
              "type": "string"
            },
            "provider": {
              "type": "string"
            }
          },
          "required": ["from", "subject", "provider"]
        },
        "NotiTemplateResponse": {
          "type": "object",
          "properties": {
            "config": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/InAppTemplateResponse"
                },
                {
                  "$ref": "#/components/schemas/EmailTemplateResponse"
                }
              ]
            },
            "name": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "isSystem": {
              "type": "boolean"
            },
            "channel": {
              "enum": ["in-app", "email"],
              "type": "string"
            }
          },
          "required": ["config", "name", "displayName", "channel"]
        },
        "NotiTemplateCollection": {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/NotiTemplateResponse"
              }
            },
            "pageInfo": {
              "$ref": "#/components/schemas/PageInfoType"
            }
          },
          "required": ["data", "pageInfo"]
        },
        "InAppTemplateDto": {
          "type": "object",
          "properties": {
            "title": {
              "type": "string"
            },
            "body": {
              "type": "string"
            },
            "url": {
              "type": "string"
            }
          }
        },
        "EmailTemplateDto": {
          "type": "object",
          "properties": {
            "from": {
              "type": "string"
            },
            "to": {
              "type": "string"
            },
            "cc": {
              "type": "string"
            },
            "bcc": {
              "type": "string"
            },
            "subject": {
              "type": "string"
            },
            "html": {
              "type": "string"
            },
            "text": {
              "type": "string"
            },
            "provider": {
              "type": "string"
            }
          },
          "required": ["from", "subject", "provider"]
        },
        "NotiTemplateCreateDto": {
          "type": "object",
          "properties": {
            "config": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/InAppTemplateDto"
                },
                {
                  "$ref": "#/components/schemas/EmailTemplateDto"
                }
              ]
            },
            "name": {
              "type": "string",
              "pattern": "nameRegex"
            },
            "displayName": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "channel": {
              "type": "string",
              "enum": ["in-app", "email"]
            }
          },
          "required": ["config", "name", "displayName", "channel"]
        },
        "NotiTemplateUpdateDto": {
          "type": "object",
          "properties": {
            "config": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/InAppTemplateDto"
                },
                {
                  "$ref": "#/components/schemas/EmailTemplateDto"
                }
              ]
            },
            "displayName": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "channel": {
              "type": "string",
              "enum": ["in-app", "email"]
            }
          },
          "required": ["channel"]
        },
        "BuiltinActionNodeCollectionItemResponse": {
          "type": "object",
          "properties": {
            "credentialProperties": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BuiltinActionNodeDetailParameterDto"
                }
              }
            },
            "displayName": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "version": {
              "type": "array",
              "items": {
                "type": "number"
              }
            },
            "defaultVersion": {
              "type": "number"
            },
            "icon": {
              "type": "string"
            },
            "iconUrl": {
              "type": "string"
            }
          },
          "required": ["credentialProperties", "displayName", "name", "description"]
        },
        "BuiltinActionNodeCollectionResponse": {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/BuiltinActionNodeCollectionItemResponse"
              }
            }
          },
          "required": ["data"]
        },
        "BuiltinActionNodePropDisplayOptionDto": {
          "type": "object",
          "properties": {
            "hide": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "number"
                    },
                    {
                      "type": "boolean"
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            },
            "show": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "number"
                    },
                    {
                      "type": "boolean"
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          }
        },
        "BuiltinActionNodeDetailParameterDto": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "boolean",
                "button",
                "collection",
                "color",
                "dateTime",
                "fixedCollection",
                "hidden",
                "json",
                "notice",
                "multiOptions",
                "number",
                "options",
                "string",
                "credentialsSelect",
                "resourceLocator",
                "curlImport",
                "resourceMapper"
              ]
            },
            "default": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "object"
                }
              ]
            },
            "displayName": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "displayOptions": {
              "$ref": "#/components/schemas/BuiltinActionNodePropDisplayOptionDto"
            },
            "placeholder": {
              "type": "string"
            },
            "required": {
              "type": "boolean"
            },
            "options": {
              "type": "array",
              "items": {
                "type": "object"
              }
            },
            "isDynamic": {
              "type": "boolean"
            },
            "isArray": {
              "type": "boolean"
            },
            "typeOptions": {
              "type": "object"
            }
          },
          "required": ["type", "default", "displayName", "name", "isDynamic", "isArray"]
        },
        "BuiltinActionNodeDetailResponse": {
          "type": "object",
          "properties": {
            "credentialProperties": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BuiltinActionNodeDetailParameterDto"
                }
              }
            },
            "displayName": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "version": {
              "type": "array",
              "items": {
                "type": "number"
              }
            },
            "defaultVersion": {
              "type": "number"
            },
            "properties": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/BuiltinActionNodeDetailParameterDto"
              }
            },
            "icon": {
              "type": "string"
            },
            "iconUrl": {
              "type": "string"
            }
          },
          "required": ["credentialProperties", "displayName", "name", "description", "properties"]
        },
        "GetBuiltinActionDynamicValuesDto": {
          "type": "object",
          "properties": {
            "filledFields": {
              "type": "object",
              "description": "Current node data already filled by user"
            },
            "credentialName": {
              "type": "string"
            },
            "version": {
              "type": "number"
            },
            "attribute": {
              "type": "string"
            }
          },
          "required": ["filledFields", "attribute"]
        },
        "BuiltinActionNodeListSearchItem": {
          "type": "object",
          "properties": {
            "value": {
              "oneOf": [
                {
                  "type": "number"
                },
                {
                  "type": "string"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "routing": {
              "type": "object"
            },
            "icon": {
              "type": "string"
            },
            "url": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "action": {
              "type": "string"
            },
            "description": {
              "type": "string"
            }
          },
          "required": ["value", "name"]
        },
        "BuiltinActionNodeListResult": {
          "type": "object",
          "properties": {
            "results": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/BuiltinActionNodeListSearchItem"
              }
            },
            "paginationToken": {
              "type": "object"
            }
          },
          "required": ["results"]
        },
        "SystemGeneralInfo": {
          "type": "object",
          "properties": {
            "singleTenant": {
              "type": "boolean"
            },
            "clientBaseUrl": {
              "type": "string"
            },
            "defaultCurrencyCode": {
              "type": "string"
            },
            "defaultLocale": {
              "type": "string"
            },
            "kcLogoutUrl": {
              "type": "string"
            },
            "languages": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "hasMigration": {
              "type": "boolean"
            }
          },
          "required": [
            "singleTenant",
            "clientBaseUrl",
            "defaultCurrencyCode",
            "defaultLocale",
            "kcLogoutUrl",
            "languages",
            "hasMigration"
          ]
        },
        "LanguageTranslationsResponse": {
          "type": "object",
          "properties": {
            "translation": {
              "type": "object"
            }
          },
          "required": ["translation"]
        },
        "UserProfileResponse": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            }
          },
          "required": ["id", "name", "displayName"]
        },
        "UserRoleResponse": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            }
          },
          "required": ["id", "name", "displayName"]
        },
        "UserDivisionResponse": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            }
          },
          "required": ["id", "name"]
        },
        "UserResponse": {
          "type": "object",
          "properties": {
            "userInfo": {
              "type": "object"
            },
            "id": {
              "type": "string"
            },
            "ssoId": {
              "type": "string"
            },
            "username": {
              "type": "string"
            },
            "isActive": {
              "type": "boolean"
            },
            "profile": {
              "$ref": "#/components/schemas/UserProfileResponse"
            },
            "role": {
              "$ref": "#/components/schemas/UserRoleResponse"
            },
            "division": {
              "$ref": "#/components/schemas/UserDivisionResponse"
            },
            "createdAt": {
              "type": "string"
            },
            "updatedAt": {
              "type": "string"
            },
            "affectedByDivision": {
              "type": "boolean"
            },
            "assignedProfiles": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ProfileResponse"
              }
            }
          },
          "required": [
            "userInfo",
            "id",
            "ssoId",
            "username",
            "isActive",
            "profile",
            "role",
            "createdAt",
            "updatedAt",
            "affectedByDivision"
          ]
        },
        "UserCollection": {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/UserResponse"
              }
            },
            "pageInfo": {
              "$ref": "#/components/schemas/PageInfoType"
            }
          },
          "required": ["data", "pageInfo"]
        },
        "SearchUserFilter": {
          "type": "object",
          "properties": {
            "roleIds": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "isActive": {
              "type": "boolean"
            },
            "profileIds": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "divisionIds": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "SearchUserDto": {
          "type": "object",
          "properties": {
            "offset": {
              "type": "number",
              "default": 0
            },
            "limit": {
              "type": "number",
              "default": 20
            },
            "sortOrder": {
              "enum": ["ASC", "DESC"],
              "type": "string"
            },
            "sortBy": {
              "type": "string"
            },
            "searchText": {
              "type": "string"
            },
            "filter": {
              "$ref": "#/components/schemas/SearchUserFilter"
            }
          }
        },
        "InviteUserDto": {
          "type": "object",
          "properties": {
            "username": {
              "type": "string"
            },
            "profileName": {
              "type": "string"
            },
            "roleName": {
              "type": "string"
            },
            "divisionName": {
              "type": "string"
            },
            "affectedByDivision": {
              "type": "boolean"
            }
          },
          "required": ["username"]
        },
        "UpdateUserDto": {
          "type": "object",
          "properties": {
            "profileName": {
              "type": "string"
            },
            "roleName": {
              "type": "string"
            },
            "divisionName": {
              "type": "string"
            },
            "affectedByDivision": {
              "type": "boolean"
            }
          }
        },
        "AssignUserProfilesDto": {
          "type": "object",
          "properties": {
            "profileNames": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "required": ["profileNames"]
        },
        "LicenseLimitResponse": {
          "type": "object",
          "properties": {
            "current": {
              "type": "number"
            },
            "limit": {
              "type": "number"
            }
          },
          "required": ["current", "limit"]
        },
        "BaseOrgCurrencyResponse": {
          "type": "object",
          "properties": {
            "currencyCode": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            }
          },
          "required": ["currencyCode", "displayName"]
        },
        "OrganizationResponse": {
          "type": "object",
          "properties": {
            "licenseInfo": {
              "type": "object",
              "additionalProperties": {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "$ref": "#/components/schemas/LicenseLimitResponse"
                  }
                ]
              }
            },
            "languages": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "id": {
              "type": "number"
            },
            "name": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "url": {
              "type": "string"
            },
            "email": {
              "type": "string"
            },
            "phoneNumber": {
              "type": "string"
            },
            "contactPerson": {
              "type": "string"
            },
            "defaultCurrency": {
              "$ref": "#/components/schemas/BaseOrgCurrencyResponse"
            },
            "defaultLocale": {
              "type": "string"
            },
            "createdAt": {
              "format": "date-time",
              "type": "string"
            },
            "updatedAt": {
              "format": "date-time",
              "type": "string"
            },
            "kcAdminUrl": {
              "type": "string"
            },
            "inDebug": {
              "type": "boolean"
            },
            "divisionEnabled": {
              "type": "boolean"
            }
          },
          "required": [
            "licenseInfo",
            "languages",
            "id",
            "name",
            "displayName",
            "defaultCurrency",
            "defaultLocale",
            "createdAt",
            "updatedAt",
            "kcAdminUrl",
            "inDebug",
            "divisionEnabled"
          ]
        },
        "UpdateOrgDto": {
          "type": "object",
          "properties": {
            "defaultLocale": {
              "type": "string",
              "enum": [
                "af-NA",
                "af-ZA",
                "ak-GH",
                "am-ET",
                "ar-DZ",
                "ar-BH",
                "ar-EG",
                "ar-IQ",
                "ar-JO",
                "ar-KW",
                "ar-LB",
                "ar-LY",
                "ar-MA",
                "ar-OM",
                "ar-QA",
                "ar-SA",
                "ar-SD",
                "ar-SY",
                "ar-TN",
                "ar-AE",
                "ar-YE",
                "hy-AM",
                "as-IN",
                "asa-TZ",
                "az-Cyrl",
                "az-Latn",
                "bm-ML",
                "eu-ES",
                "be-BY",
                "bem-ZM",
                "bez-TZ",
                "bn-BD",
                "bn-IN",
                "bs-BA",
                "bg-BG",
                "my-MM",
                "yue-Hant-HK",
                "ca-ES",
                "tzm-Latn",
                "chr-US",
                "cgg-UG",
                "zh-Hans",
                "zh-Hant",
                "kw-GB",
                "hr-HR",
                "cs-CZ",
                "da-DK",
                "nl-BE",
                "nl-NL",
                "ebu-KE",
                "en-AS",
                "en-AU",
                "en-BE",
                "en-BZ",
                "en-BW",
                "en-CA",
                "en-GU",
                "en-HK",
                "en-IN",
                "en-IE",
                "en-IL",
                "en-JM",
                "en-MT",
                "en-MH",
                "en-MU",
                "en-NA",
                "en-NZ",
                "en-MP",
                "en-PK",
                "en-PH",
                "en-SG",
                "en-ZA",
                "en-TT",
                "en-UM",
                "en-VI",
                "en-GB",
                "en-US",
                "en-ZW",
                "et-EE",
                "ee-GH",
                "ee-TG",
                "fo-FO",
                "fil-PH",
                "fi-FI",
                "fr-BE",
                "fr-BJ",
                "fr-BF",
                "fr-BI",
                "fr-CM",
                "fr-CA",
                "fr-CF",
                "fr-TD",
                "fr-KM",
                "fr-CG",
                "fr-CD",
                "fr-CI",
                "fr-DJ",
                "fr-GQ",
                "fr-FR",
                "fr-GA",
                "fr-GP",
                "fr-GN",
                "fr-LU",
                "fr-MG",
                "fr-ML",
                "fr-MQ",
                "fr-MC",
                "fr-NE",
                "fr-RW",
                "fr-RE",
                "fr-BL",
                "fr-MF",
                "fr-SN",
                "fr-CH",
                "fr-TG",
                "ff-SN",
                "gl-ES",
                "lg-UG",
                "ka-GE",
                "de-AT",
                "de-BE",
                "de-DE",
                "de-LI",
                "de-LU",
                "de-CH",
                "el-CY",
                "el-GR",
                "gu-IN",
                "guz-KE",
                "ha-Latn",
                "haw-US",
                "he-IL",
                "hi-IN",
                "hu-HU",
                "is-IS",
                "ig-NG",
                "id-ID",
                "ga-IE",
                "it-IT",
                "it-CH",
                "ja-JP",
                "kea-CV",
                "kab-DZ",
                "kl-GL",
                "kln-KE",
                "kam-KE",
                "kn-IN",
                "kk-Cyrl",
                "km-KH",
                "ki-KE",
                "rw-RW",
                "kok-IN",
                "ko-KR",
                "khq-ML",
                "ses-ML",
                "lag-TZ",
                "lv-LV",
                "lt-LT",
                "luo-KE",
                "luy-KE",
                "mk-MK",
                "jmc-TZ",
                "kde-TZ",
                "mg-MG",
                "ms-BN",
                "ms-MY",
                "ml-IN",
                "mt-MT",
                "gv-GB",
                "mr-IN",
                "mas-KE",
                "mas-TZ",
                "mer-KE",
                "mfe-MU",
                "naq-NA",
                "ne-IN",
                "ne-NP",
                "nd-ZW",
                "nb-NO",
                "nn-NO",
                "nyn-UG",
                "or-IN",
                "om-ET",
                "om-KE",
                "ps-AF",
                "fa-AF",
                "fa-IR",
                "pl-PL",
                "pt-BR",
                "pt-GW",
                "pt-MZ",
                "pt-PT",
                "pa-Arab",
                "ro-MD",
                "ro-RO",
                "rm-CH",
                "rof-TZ",
                "ru-MD",
                "ru-RU",
                "ru-UA",
                "rwk-TZ",
                "saq-KE",
                "sg-CF",
                "seh-MZ",
                "sr-Cyrl",
                "sr-Latn",
                "sn-ZW",
                "ii-CN",
                "si-LK",
                "sk-SK",
                "sl-SI",
                "xog-UG",
                "so-DJ",
                "so-ET",
                "so-KE",
                "so-SO",
                "es-AR",
                "es-BO",
                "es-CL",
                "es-CO",
                "es-CR",
                "es-DO",
                "es-EC",
                "es-SV",
                "es-GQ",
                "es-GT",
                "es-HN",
                "es-419",
                "es-MX",
                "es-NI",
                "es-PA",
                "es-PY",
                "es-PE",
                "es-PR",
                "es-ES",
                "es-US",
                "es-UY",
                "es-VE",
                "sw-KE",
                "sw-TZ",
                "sv-FI",
                "sv-SE",
                "gsw-CH",
                "shi-Latn",
                "shi-Tfng",
                "dav-KE",
                "ta-IN",
                "ta-LK",
                "te-IN",
                "teo-KE",
                "teo-UG",
                "th-TH",
                "bo-CN",
                "bo-IN",
                "ti-ER",
                "ti-ET",
                "to-TO",
                "tr-TR",
                "uk-UA",
                "ur-IN",
                "ur-PK",
                "uz-Arab",
                "uz-Cyrl",
                "uz-Latn",
                "vi-VN",
                "vun-TZ",
                "cy-GB",
                "yo-NG",
                "zu-ZA"
              ]
            },
            "description": {
              "type": "string"
            },
            "url": {
              "type": "string"
            },
            "email": {
              "type": "string"
            },
            "phoneNumber": {
              "type": "string"
            },
            "contactPerson": {
              "type": "string"
            },
            "divisionEnabled": {
              "type": "boolean"
            }
          }
        },
        "UpdateOrgEnvDto": {
          "type": "object",
          "properties": {
            "data": {
              "type": "string",
              "description": "Base64 of environment object Record<string, string>"
            }
          },
          "required": ["data"]
        },
        "UpdateOrgLicenseDto": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string"
            },
            "remove": {
              "type": "boolean"
            }
          },
          "required": ["key"]
        },
        "UpsertLanguageTranslationsDto": {
          "type": "object",
          "properties": {
            "translation": {
              "type": "object"
            }
          },
          "required": ["translation"]
        },
        "EntityCountResponse": {
          "type": "object",
          "properties": {
            "flow": {
              "type": "number"
            },
            "object": {
              "type": "number"
            },
            "layout": {
              "type": "number"
            },
            "pick-list": {
              "type": "number"
            },
            "application": {
              "type": "number"
            }
          },
          "required": ["flow", "object", "layout", "pick-list", "application"]
        },
        "TagDetailResponse": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            },
            "attributes": {
              "type": "object"
            },
            "entityCount": {
              "$ref": "#/components/schemas/EntityCountResponse"
            },
            "updatedAt": {
              "format": "date-time",
              "type": "string"
            }
          },
          "required": ["name", "displayName", "attributes", "entityCount", "updatedAt"]
        },
        "TagCollection": {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/TagDetailResponse"
              }
            },
            "pageInfo": {
              "$ref": "#/components/schemas/PageInfoType"
            }
          },
          "required": ["data", "pageInfo"]
        },
        "CreateTagDto": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "pattern": "nameRegex"
            },
            "displayName": {
              "type": "string"
            },
            "attributes": {
              "type": "object"
            }
          },
          "required": ["name", "displayName", "attributes"]
        },
        "UpdateTagDto": {
          "type": "object",
          "properties": {
            "displayName": {
              "type": "string"
            },
            "attributes": {
              "type": "object"
            }
          }
        },
        "SMTPEmailProviderResponse": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            },
            "host": {
              "type": "string"
            },
            "port": {
              "type": "number"
            },
            "secure": {
              "type": "boolean"
            },
            "createdAt": {
              "type": "string"
            },
            "updatedAt": {
              "type": "string"
            }
          },
          "required": ["name", "displayName", "host", "port", "secure", "createdAt", "updatedAt"]
        },
        "SMTPAuth": {
          "type": "object",
          "properties": {
            "user": {
              "type": "string"
            },
            "pass": {
              "type": "string"
            }
          },
          "required": ["user", "pass"]
        },
        "SMTPEmailProviderCreateDto": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "pattern": "nameRegex"
            },
            "displayName": {
              "type": "string"
            },
            "auth": {
              "$ref": "#/components/schemas/SMTPAuth"
            },
            "secure": {
              "type": "boolean"
            },
            "host": {
              "type": "string"
            },
            "port": {
              "type": "number"
            }
          },
          "required": ["name", "displayName", "auth", "secure", "host", "port"]
        },
        "SMTPEmailProvideUpdateDto": {
          "type": "object",
          "properties": {
            "auth": {
              "$ref": "#/components/schemas/SMTPAuth"
            },
            "displayName": {
              "type": "string"
            },
            "from": {
              "type": "string"
            },
            "host": {
              "type": "string"
            },
            "port": {
              "type": "number"
            },
            "secure": {
              "type": "boolean"
            }
          }
        },
        "GetTenantVersion": {
          "type": "object",
          "properties": {
            "currentVersion": {
              "type": "string"
            },
            "isMigrating": {
              "type": "boolean"
            },
            "upstream": {
              "type": "string",
              "enum": ["legacy", "latest"]
            },
            "availableVersions": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "migratedAt": {
              "format": "date-time",
              "type": "string"
            },
            "oldVersionSnapshotAt": {
              "format": "date-time",
              "type": "string"
            }
          },
          "required": ["currentVersion", "isMigrating", "upstream", "availableVersions"]
        },
        "MigrationJobDto": {
          "type": "object",
          "properties": {
            "time": {
              "type": "string"
            },
            "type": {
              "type": "string",
              "enum": ["upgrade", "downgrade"]
            }
          },
          "required": ["type"]
        },
        "MigrationJobResponse": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "status": {
              "enum": ["scheduled", "running", "succeeded", "failed", "cancelled"],
              "type": "string"
            },
            "progress": {
              "type": "number"
            },
            "version": {
              "type": "string"
            },
            "error": {
              "type": "string"
            },
            "time": {
              "format": "date-time",
              "type": "string"
            },
            "type": {
              "enum": ["upgrade", "downgrade"],
              "type": "string"
            },
            "updatedAt": {
              "format": "date-time",
              "type": "string"
            },
            "createdAt": {
              "format": "date-time",
              "type": "string"
            },
            "requestedBy": {
              "type": "string"
            }
          },
          "required": [
            "id",
            "status",
            "progress",
            "version",
            "type",
            "updatedAt",
            "createdAt",
            "requestedBy"
          ]
        },
        "MediaCollection": {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/MediaResponse"
              }
            },
            "pageInfo": {
              "$ref": "#/components/schemas/PageInfoType"
            }
          },
          "required": ["data", "pageInfo"]
        },
        "UpdateMediaDto": {
          "type": "object",
          "properties": {
            "displayName": {
              "type": "string"
            }
          }
        },
        "CreateS3ConfigDto": {
          "type": "object",
          "properties": {
            "accessKeyId": {
              "type": "string"
            },
            "secretAccessKey": {
              "type": "string"
            },
            "region": {
              "type": "string"
            },
            "s3Bucket": {
              "type": "string"
            }
          },
          "required": ["accessKeyId", "secretAccessKey", "region", "s3Bucket"]
        },
        "S3ConfigResponse": {
          "type": "object",
          "properties": {
            "region": {
              "type": "string"
            },
            "s3Bucket": {
              "type": "string"
            }
          },
          "required": ["region", "s3Bucket"]
        }
      }
    }
  },
  "customOptions": {
    "persistAuthorization": true,
    "defaultModelRendering": "model",
    "docExpansion": "none"
  }
}
